import{addLocalesMessages as J}from"@blockcode/core";var H={"arduino.menubar.device":"Device","arduino.menubar.device.connect":"Connect","arduino.menubar.device.disconnect":"Disconnect","arduino.menubar.device.sync":"Sync blocks"};var a={"arduino.menubar.device":"设备","arduino.menubar.device.connect":"连接","arduino.menubar.device.disconnect":"断开连接","arduino.menubar.device.sync":"同步脚本"};var _={"arduino.menubar.device":"設備","arduino.menubar.device.connect":"連接","arduino.menubar.device.disconnect":"斷開連接","arduino.menubar.device.sync":"同步腳本"};J({en:H,"zh-Hans":a,"zh-Hant":_});import{svgAsDataUri as Y}from"@blockcode/utils";import{ScratchBlocks as h,MicroPythonGenerator as x,blocksTab as w,codeReviewTab as D}from"@blockcode/blocks";import{Text as c}from"@blockcode/core";import{BlocksEditor as k,CodeReview as A}from"@blockcode/blocks";import{useAppContext as V}from"@blockcode/core";var G="./assets/icon-device-9de6fxnz.svg";var M="./assets/icon-device-connected-3gcajtt2.svg";import{jsx as N}from"preact/jsx-runtime";function O(){let{appState:C}=V();return C.value?.device?N("img",{src:M}):N("img",{src:G})}import{nanoid as W}from"@blockcode/utils";import{useProjectContext as X,setAlert as i,delAlert as F,openPromptModal as R}from"@blockcode/core";import{MPYUtils as d}from"@blockcode/board";import{Spinner as T,Text as v,MenuSection as U,MenuItem as B}from"@blockcode/core";import{jsx as f,Fragment as P}from"preact/jsx-runtime";var u=null,Z=()=>{F(u),u=null},$=(C)=>{if(!u)u=W();if(C<100)i({id:u,icon:f(T,{level:"success"}),message:f(v,{id:"blocks.alert.downloading",defaultMessage:"Downloading...{progress}%",progress:C})});else i("downloadCompleted",{id:u}),setTimeout(Z,2000)},g=(C)=>{if(C==="NotFoundError")return;i("connectionError",1000)};function o({itemClassName:C}){let{key:n,files:p,assets:y}=X();return f(P,{children:f(U,{children:f(B,{disabled:u,className:C,label:f(v,{id:"blocks.menu.device.download",defaultMessage:"Download program"}),onClick:async()=>{if(u)return;let L;try{L=await d.connect([])}catch(m){g(m.name)}if(!L)return;let E=d.check(L).catch(()=>{g(),Z()}),z=[].concat(p.value,y.value).map((m)=>({...m,id:m.id.startsWith("lib/")?m.id:`proj${n.value}/${m.id}`}));$(0);try{if(!await d.flashFree(L,z))R({title:f(v,{id:"blocks.menu.device.name",defaultMessage:"Device"}),label:f(v,{id:"blocks.downloadPrompt.flashOutSpace",defaultMessage:"The flash is running out of space."})});else await d.write(L,z,$),await d.config(L,{"latest-project":n}),L.hardReset()}catch(m){g(m.name)}Z(),E.cancel()}})})})}import{nanoid as I}from"@blockcode/utils";var q=I(),S=`
from blocks import *
import ${q}
start()
`,t={assets:[{id:"main",type:"text/x-python",content:S}],files:[{id:q,type:"text/x-python"}]};import{jsx as b}from"preact/jsx-runtime";var j=new x,r=()=>["device"],E1={onNew(){return t},onSave(C,n){let p=[];return C=C.map((L)=>{return p.push(L.extensions),{id:L.id,type:L.type,xml:L.xml}}),{meta:{extensions:Array.from(new Set(p.flat()))},files:C,assets:n}},async onThumb(){let C=h.getMainWorkspace();if(C){let n=C.getCanvas();if(n)return await Y(n,{})}},onUndo(C){if(C instanceof MouseEvent)h.getMainWorkspace()?.undo?.(!1)},onRedo(C){if(C instanceof MouseEvent)h.getMainWorkspace()?.undo?.(!0)},onEnableUndo(){let C=h.getMainWorkspace();return C?.undoStack_&&C.undoStack_.length!==0},onEnableRedo(){let C=h.getMainWorkspace();return C?.redoStack_&&C.redoStack_.length!==0},menuItems:[{icon:b(O,{}),label:b(c,{id:"arduino.menubar.device",defaultMessage:"Device"}),Menu:o}],tabs:[{...w,Content:()=>b(k,{disableMonitor:!0,generator:j,onExtensionsFilter:r})},{...D,Content:A}]};export{E1 as default};
