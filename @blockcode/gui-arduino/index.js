import{addLocalesMessages as rt}from"@blockcode/core";var I={"arduino.menubar.device":"Device","arduino.menubar.device.connect":"Connect","arduino.menubar.device.disconnect":"Disconnect","arduino.menubar.device.sync":"Sync blocks","arduino.blocks.wait":"wait %1 milliseconds","arduino.blocks.elseif":"else if %1 then","arduino.blocks.else":"else","arduino.blocks.runtime":"run time %1","arduino.blocks.runtimeMilliseconds":"milliseconds","arduino.blocks.runtimeSeconds":"seconds","arduino.blocks.data":"Data","arduino.blocks.dataConvert":"convert %1 to %2","arduino.blocks.dataLengthOf":"length of %1","arduino.blocks.dataConstrain":"constrain %1 between %2 to %3","arduino.blocks.dataMap":"map %1 from %2 - %3 to %4 - %5","arduino.blocks.whensetup":"when Arduino setup","arduino.blocks.whenloop":"when Arduino loop","arduino.blocks.whentimer":"when timer per %1 milliseconds","arduino.blocks.timeron":"start timer","arduino.blocks.timeroff":"stop timer","arduino.blocks.operatorLarger":"larger of %1 and %2","arduino.blocks.operatorSmaller":"smaller of %1 and %2","arduino.blocks.pin":"Pins","arduino.blocks.setmode":"set pin %1 mode to %2","arduino.blocks.inputMode":"input","arduino.blocks.ouputMode":"output","arduino.blocks.inputPullUpMode":"input pull-up","arduino.blocks.setdigital":"set digital pin %1 to %2","arduino.blocks.digitalHigh":"high","arduino.blocks.digitalLow":"low","arduino.blocks.setanalog":"set pwm pin %1 to %2","arduino.blocks.isDigitalHigh":"digital pin %1 is high?","arduino.blocks.analogValue":"analog pin %1","arduino.blocks.attachinterrupt":"attach pin %1 interrupt to %2","arduino.blocks.interruptRising":"rising","arduino.blocks.interruptFalling":"falling","arduino.blocks.interruptChange":"change","arduino.blocks.interruptHigh":"high","arduino.blocks.interruptLow":"low","arduino.blocks.detachinterrupt":"detach pin %1 interrupt","arduino.blocks.protocols":"Protocols","arduino.blocks.serial":"Serial","arduino.blocks.serialBaudrate":"set baudrate to %1","arduino.blocks.serialTimeout":"set timeout to %1 milliseconds","arduino.blocks.serialPrint":"print %1 with %2","arduino.blocks.serialPrintWarp":"warp","arduino.blocks.serialPrintNoWarp":"no-warp","arduino.blocks.serialPrintHEX":"hex","arduino.blocks.serialPrintNumber":"print %1","arduino.blocks.serialAvailable":"available data?","arduino.blocks.serialAvailableLength":"available data length","arduino.blocks.serialReadString":"read a string","arduino.blocks.serialReadStringUntil":"read a string until %1","arduino.blocks.serialReadParse":"read a %1 number","arduino.blocks.serialReadParseInteger":"int","arduino.blocks.serialReadParseFloat":"float","arduino.blocks.serialRead":"read a byte","arduino.blocks.serialReadBytes":"read %1 bytes","arduino.blocks.text":"Text","arduino.blocks.textEquals":"%1 equals %2 (not case-sensitive)?","arduino.blocks.textRemove":"remove letters from %1 to %2 of %3","arduino.blocks.textReplace":"replace %1 of %2 with %3","arduino.blocks.textReplaceLetter":"replace letter %1 of %2 with %3","arduino.blocks.textSubstring":"substring of %1 from %2 to %3","arduino.blocks.textWith":"%1 %2 with %3?","arduino.blocks.textStartsWith":"starts","arduino.blocks.textEndsWith":"ends","arduino.blocks.textCase":"get %1 of %2","arduino.blocks.textLowerCase":"lower-case","arduino.blocks.textUpperCase":"upper-case","arduino.blocks.textTrim":"remove %1 leading and trailing whitespace","arduino.blocks.textConvert":"convert %1 to %2","arduino.blocks.textConvertFrom":"convert %1 to String"};var v={"arduino.menubar.device":"设备","arduino.menubar.device.connect":"连接","arduino.menubar.device.disconnect":"断开连接","arduino.menubar.device.sync":"同步脚本","arduino.blocks.wait":"等待 %1 毫秒","arduino.blocks.elseif":"否则，如果 %1 那么","arduino.blocks.else":"否则","arduino.blocks.runtime":"运行时长 %1","arduino.blocks.runtimeMilliseconds":"毫秒","arduino.blocks.runtimeSeconds":"秒","arduino.blocks.data":"数据","arduino.blocks.dataConvert":"将 %1 类型转为 %2","arduino.blocks.dataLengthOf":"%1 长度","arduino.blocks.dataConstrain":"约束 %1 在 %2 和 %3 之间","arduino.blocks.dataMap":"映射 %1 从 %2 - %3 到 %4 - %5","arduino.blocks.whensetup":"当 Arduino 启动","arduino.blocks.whenloop":"当 Arduino 循环运行","arduino.blocks.whentimer":"当定时器每间隔 %1 毫秒","arduino.blocks.timeron":"开启定时器","arduino.blocks.timeroff":"关闭定时器","arduino.blocks.operatorLarger":"%1 和 %2 之中最大","arduino.blocks.operatorSmaller":"%1 和 %2 之中最小","arduino.blocks.pin":"引脚","arduino.blocks.setmode":"将引脚 %1 设为 %2 模式","arduino.blocks.inputMode":"输入","arduino.blocks.ouputMode":"输出","arduino.blocks.inputPullUpMode":"上拉输入","arduino.blocks.setdigital":"将数字引脚 %1 设为 %2","arduino.blocks.digitalHigh":"高电平","arduino.blocks.digitalLow":"低电平","arduino.blocks.setanalog":"将模拟引脚 %1 设为 %2","arduino.blocks.isDigitalHigh":"数字引脚 %1 是高电平？","arduino.blocks.analogValue":"模拟引脚 %1","arduino.blocks.attachinterrupt":"将引脚 %1 中断模式设为 %2","arduino.blocks.interruptRising":"电平上升","arduino.blocks.interruptFalling":"电平下降","arduino.blocks.interruptChange":"电平改变","arduino.blocks.interruptHigh":"高电平","arduino.blocks.interruptLow":"低电平","arduino.blocks.detachinterrupt":"取消引脚 %1 中断","arduino.blocks.protocols":"通讯协议","arduino.blocks.serial":"串口","arduino.blocks.serialBaudrate":"将波特率设为 %1","arduino.blocks.serialTimeout":"将超时设为 %1 毫秒","arduino.blocks.serialPrint":"用 %2 模式打印 %1","arduino.blocks.serialPrintWarp":"换行","arduino.blocks.serialPrintNoWarp":"不换行","arduino.blocks.serialPrintHEX":"16进制","arduino.blocks.serialPrintNumber":"打印 %1","arduino.blocks.serialAvailable":"存在可读取数据?","arduino.blocks.serialAvailableLength":"可读取数据长度","arduino.blocks.serialReadString":"读取文本","arduino.blocks.serialReadStringUntil":"读取文本直到 %1","arduino.blocks.serialReadParse":"读取 %1","arduino.blocks.serialReadParseInteger":"整数","arduino.blocks.serialReadParseFloat":"浮点数","arduino.blocks.serialRead":"读取 1 个字节","arduino.blocks.serialReadBytes":"读取 %1 个字节","arduino.blocks.text":"文本","arduino.blocks.textEquals":"%1 和 %2 相同（忽视大小写）？","arduino.blocks.textRemove":"删除 %3 从第 %1 个到第 %2 个字符","arduino.blocks.textReplace":"将 %2 中的 %1 替换为 %3","arduino.blocks.textReplaceLetter":"将 %2 中的第 %1 个字符替换为 %3","arduino.blocks.textSubstring":"截取 %1 从第 %2 个到第 %3 个字符","arduino.blocks.textWith":"%1 %2 %3?","arduino.blocks.textStartsWith":"开始于","arduino.blocks.textEndsWith":"结束于","arduino.blocks.textCase":"将 %2 字母转为 %1","arduino.blocks.textLowerCase":"小写","arduino.blocks.textUpperCase":"大写","arduino.blocks.textTrim":"清除 %1 前后空白字符","arduino.blocks.textConvert":"将 %1 转为 %2","arduino.blocks.textConvertFrom":"将 %1 转为文本"};var w={"arduino.menubar.device":"設備","arduino.menubar.device.connect":"連接","arduino.menubar.device.disconnect":"斷開連接","arduino.menubar.device.sync":"同步腳本","arduino.blocks.wait":"等待 %1 毫秒","arduino.blocks.elseif":"否則，如果 %1 那麼","arduino.blocks.else":"否則","arduino.blocks.runtime":"運行時長 %1","arduino.blocks.runtimeMilliseconds":"毫秒","arduino.blocks.runtimeSeconds":"秒","arduino.blocks.data":"數據","arduino.blocks.dataConvert":"將 %1 類型轉為 %2","arduino.blocks.dataLengthOf":"%1 長度","arduino.blocks.dataConstrain":"約束 %1 在 %2 和 %3 之間","arduino.blocks.dataMap":"映射 %1 從 %2 - %3 到 %4 - %5","arduino.blocks.whensetup":"當 Arduino 啟動","arduino.blocks.whenloop":"當 Arduino 循環運行","arduino.blocks.whentimer":"當定時器每間隔 %1 毫秒","arduino.blocks.timeron":"開啟定時器","arduino.blocks.timeroff":"關閉定時器","arduino.blocks.operatorLarger":"%1 和 %2 之中最大","arduino.blocks.operatorSmaller":"%1 和 %2 之中最小","arduino.blocks.pin":"引腳","arduino.blocks.setmode":"將引腳 %1 設為 %2 模式","arduino.blocks.inputMode":"輸入","arduino.blocks.ouputMode":"輸出","arduino.blocks.inputPullUpMode":"上拉輸入","arduino.blocks.setdigital":"將數字引腳 %1 設為 %2","arduino.blocks.digitalHigh":"高電平","arduino.blocks.digitalLow":"低電平","arduino.blocks.setanalog":"將模擬引腳 %1 設為 %2","arduino.blocks.isDigitalHigh":"數字引腳 %1 是高電平？","arduino.blocks.analogValue":"模擬引腳 %1","arduino.blocks.attachinterrupt":"將引腳 %1 中斷模式設為 %2","arduino.blocks.interruptRising":"電平上升","arduino.blocks.interruptFalling":"電平下降","arduino.blocks.interruptChange":"電平改變","arduino.blocks.interruptHigh":"高電平","arduino.blocks.interruptLow":"低電平","arduino.blocks.detachinterrupt":"取消引腳 %1 中斷","arduino.blocks.protocols":"通訊協議","arduino.blocks.serial":"串口","arduino.blocks.serialBaudrate":"將波特率設為 %1","arduino.blocks.serialTimeout":"將超時設為 %1 毫秒","arduino.blocks.serialPrint":"用 %2 模式打印 %1","arduino.blocks.serialPrintWarp":"換行","arduino.blocks.serialPrintNoWarp":"不換行","arduino.blocks.serialPrintHEX":"16進制","arduino.blocks.serialPrintNumber":"打印 %1","arduino.blocks.serialAvailable":"存在可讀取數據?","arduino.blocks.serialAvailableLength":"可讀取數據長度","arduino.blocks.serialReadString":"讀取文本","arduino.blocks.serialReadStringUntil":"讀取文本直到 %1","arduino.blocks.serialReadParse":"讀取 %1","arduino.blocks.serialReadParseInteger":"整數","arduino.blocks.serialReadParseFloat":"浮點數","arduino.blocks.serialRead":"讀取 1 個字節","arduino.blocks.serialReadBytes":"讀取 %1 個字節","arduino.blocks.text":"文本","arduino.blocks.textEquals":"%1 和 %2 相同（忽視大小寫）？","arduino.blocks.textRemove":"刪除 %3 從第 %1 個到第 %2 個字符","arduino.blocks.textReplace":"將 %2 中的 %1 替換為 %3","arduino.blocks.textReplaceLetter":"將 %2 中的第 %1 個字符替換為 %3","arduino.blocks.textSubstring":"截取 %1 從第 %2 個到第 %3 個字符","arduino.blocks.textWith":"%1 %2 %3?","arduino.blocks.textStartsWith":"開始於","arduino.blocks.textEndsWith":"結束於","arduino.blocks.textCase":"將 %2 字母轉為 %1","arduino.blocks.textLowerCase":"小寫","arduino.blocks.textUpperCase":"大寫","arduino.blocks.textTrim":"清除 %1 前後空白字符","arduino.blocks.textConvert":"將 %1 轉為 %2","arduino.blocks.textConvertFrom":"將 %1 轉為文本"};rt({en:I,"zh-Hans":v,"zh-Hant":w});import{svgAsDataUri as xt}from"@blockcode/utils";import{ScratchBlocks as O,blocksTab as Ct,codeReviewTab as Mt}from"@blockcode/blocks";import{Text as yt}from"@blockcode/core";import{CodeReview as Nt}from"@blockcode/blocks";import{BlocksEditor as st}from"@blockcode/blocks";import{translate as r,themeColors as E}from"@blockcode/core";import{ScratchBlocks as Gt}from"@blockcode/blocks";var B=()=>({id:"pin",name:r("arduino.blocks.pin","Pins"),themeColor:E.blocks.motion.primary,inputColor:E.blocks.motion.secondary,otherColor:E.blocks.motion.tertiary,order:0,blocks:[{id:"setmode",text:r("arduino.blocks.setmode","set pin %1 mode to %2"),inputs:{PIN:{menu:"PINS"},MODE:{menu:[[r("arduino.blocks.inputMode","input"),"INPUT"],[r("arduino.blocks.ouputMode","output"),"OUTPUT"],[r("arduino.blocks.inputPullUpMode","input pull-up"),"INPUT_PULLUP"]]}},ino(t){}},"---",{id:"setdigital",text:r("arduino.blocks.setdigital","set digital pin %1 to %2"),inputs:{PIN:{menu:"PINS"},VALUE:{inputMode:!0,type:"number",defaultValue:1,menu:[[r("arduino.blocks.digitalHigh","high"),1],[r("arduino.blocks.digitalLow","low"),0]]}},ino(t){}},{id:"setanalog",text:r("arduino.blocks.setanalog","set pwm pin %1 to %2"),inputs:{PIN:{menu:"PWM_PINS"},VALUE:{type:"integer",defaultValue:127}},ino(t){}},{id:"digital",text:r("arduino.blocks.isDigitalHigh","digital pin %1 is high?"),output:"boolean",inputs:{PIN:{menu:"PINS"}},ino(t){}},{id:"analog",text:r("arduino.blocks.analogValue","analog pin %1"),output:"number",inputs:{PIN:{menu:"ANALOG_PINS"}},ino(t){}},"---",{id:"attachinterrupt",text:r("arduino.blocks.attachinterrupt","attach pin %1 interrupt to %2"),substack:!0,inputs:{PIN:{menu:"PINS"},INTERRUPT:{menu:[[r("arduino.blocks.interruptRising","rising"),"RISING"],[r("arduino.blocks.interruptFalling","falling"),"FALLING"],[r("arduino.blocks.interruptChange","change"),"CHANGE"],[r("arduino.blocks.interruptHigh","high"),"HIGH"],[r("arduino.blocks.interruptLow","low"),"LOW"]]}},ino(t){}},{id:"detachinterrupt",text:r("arduino.blocks.detachinterrupt","detach pin %1 interrupt"),inputs:{PIN:{menu:"PINS"}},ino(t){}}],menus:{PINS:{items:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]]},PWM_PINS:{items:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]]},ANALOG_PINS:{items:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]]}}});import{translate as a,themeColors as A}from"@blockcode/core";import{ScratchBlocks as o}from"@blockcode/blocks";var H=()=>({id:"text",name:a("arduino.blocks.text","Text"),themeColor:A.blocks.looks.primary,inputColor:A.blocks.looks.secondary,otherColor:A.blocks.looks.tertiary,order:1,blocks:[{id:"join",text:o.Msg.OPERATORS_JOIN,output:"string",inputs:{STRING1:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},STRING2:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_BANANA}}},{id:"letter_of",text:o.Msg.OPERATORS_LETTEROF,output:"string",inputs:{LETTER:{type:"integer",defaultValue:1},STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE}}},{id:"length",text:o.Msg.OPERATORS_LENGTH,output:"number",inputs:{STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE}}},{id:"contains",text:o.Msg.OPERATORS_CONTAINS,output:"boolean",inputs:{STRING1:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},STRING2:{type:"string",defaultValue:o.Msg.OPERATORS_LETTEROF_APPLE}}},{id:"equals",text:a("arduino.blocks.textEquals","%1 equals %2 (not case-sensitive)?"),output:"boolean",inputs:{STRING1:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},STRING2:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_BANANA}}},"---",{id:"remove",text:a("arduino.blocks.textRemove","remove letters from %1 to %2 of %3"),inputs:{FROM:{type:"integer",defaultValue:1},TO:{type:"integer",defaultValue:2},STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE}}},{id:"replace",text:a("arduino.blocks.textReplace","replace %1 of %2 with %3"),inputs:{STRING1:{type:"string",defaultValue:o.Msg.OPERATORS_LETTEROF_APPLE},STRING2:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},STRING3:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_BANANA[0]}}},{id:"replace_letter",text:a("arduino.blocks.textReplaceLetter","replace letter %1 of %2 with %3"),inputs:{INDEX:{type:"integer",defaultValue:1},STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},LETTER:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_BANANA[0]}}},{id:"substring",text:a("arduino.blocks.textSubstring","substring of %1 from %2 to %3"),output:"string",inputs:{STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},FROM:{type:"integer",defaultValue:1},TO:{type:"integer",defaultValue:2}}},{id:"with",text:a("arduino.blocks.textWith","%1 %2 with %3 ?"),output:"boolean",inputs:{STRING1:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE},WITH:{type:"string",menu:[[a("arduino.blocks.textStartsWith","starts"),"START"],[a("arduino.blocks.textEndsWith","ends"),"END"]]},STRING2:{type:"string",defaultValue:o.Msg.OPERATORS_LETTEROF_APPLE}}},"---",{id:"case",text:a("arduino.blocks.textCase","get %1 case of %2"),inputs:{WITH:{menu:[[a("arduino.blocks.textLowerCase","lower"),"LOWER"],[a("arduino.blocks.textUpperCase","upper"),"UPPER"]]},STRING:{type:"string",defaultValue:"Abc"}}},{id:"trim",text:a("arduino.blocks.textTrim","remove %1 leading and trailing whitespace"),inputs:{STRING:{type:"string",defaultValue:o.Msg.OPERATORS_JOIN_APPLE}}},"---",{id:"convert",text:a("arduino.blocks.textConvert","convert %1 to %2"),output:!0,inputs:{STRING:{type:"string",defaultValue:"a"},TYPE:{menu:["int","float","char array","byte array"]}}},{id:"convert_from",text:a("arduino.blocks.textConvertFrom","convert %1 to String"),output:!0,inputs:{NUM:{type:"number",defaultValue:1}}}]});import{translate as i,themeColors as x}from"@blockcode/core";import{ScratchBlocks as it}from"@blockcode/blocks";var G=()=>({id:"serial",name:i("arduino.blocks.serial","Serial"),themeColor:x.blocks.sounds.primary,inputColor:x.blocks.sounds.secondary,otherColor:x.blocks.sounds.tertiary,order:2,blocks:[{id:"baudrate",text:i("arduino.blocks.serialBaudrate","set baudrate to %1"),inputs:{BAUDRATE:{menu:["4800","9600","38400","57600","115200"]}}},{id:"timeout",text:i("arduino.blocks.serialTimeout","set timeout to %1"),inputs:{TIMEOUT:{type:"integer",defaultValue:1000}}},"---",{id:"print",text:i("arduino.blocks.serialPrint","print %1 with %2"),inputs:{STRING:{type:"string",defaultValue:it.Msg.OPERATORS_JOIN_BANANA},MODE:{menu:[[i("arduino.blocks.serialPrintWarp","warp"),"WARP"],[i("arduino.blocks.serialPrintNoWarp","no-warp"),"NOWARP"],[i("arduino.blocks.serialPrintHEX","hex"),"HEX"]]}}},{id:"print_number",text:i("arduino.blocks.serialPrintNumber","print %1"),inputs:{NUM:{type:"number",defaultValue:0}}},"---",{id:"available",text:i("arduino.blocks.serialAvailable","available data?"),output:"boolean"},{id:"available_length",text:i("arduino.blocks.serialAvailableLength","available data length"),output:"number"},"---",{id:"read_string",text:i("arduino.blocks.serialReadString","read a string"),output:"string"},{id:"read_string_until",text:i("arduino.blocks.serialReadStringUntil","read a string until %1"),output:"string",inputs:{CHAR:{type:"string",defaultValue:"a"}}},"---",{id:"read_parse",text:i("arduino.blocks.serialReadParse","read a %1 number"),output:"number",inputs:{TYPE:{menu:[[i("arduino.blocks.serialReadParseInteger","int"),"INT"],[i("arduino.blocks.serialReadParseFloat","float"),"FLOAT"]]}}},"---",{id:"read",text:i("arduino.blocks.serialRead","read a byte"),output:!0},{id:"read_bytes",text:i("arduino.blocks.serialReadBytes","read %1 bytes"),output:!0,inputs:{LEN:{type:"integer",defaultValue:2}}}]});import{translate as p,themeColors as C}from"@blockcode/core";import{ScratchBlocks as zt}from"@blockcode/blocks";var U=()=>({id:"event",name:"%{BKY_CATEGORY_EVENTS}",themeColor:C.blocks.events.primary,inputColor:C.blocks.events.secondary,otherColor:C.blocks.events.tertiary,blocks:[{id:"whensetup",text:p("arduino.blocks.whensetup","when Arduino setup"),hat:!0,ino(t){}},{id:"whenloop",text:p("arduino.blocks.whenloop","when Arduino loop"),hat:!0,ino(t){}},"---",{id:"whentimer",text:p("arduino.blocks.whentimer","when timer per %1 milliseconds"),hat:!0,inputs:{TIME:{type:"integer",defaultValue:500}},ino(t){}},{id:"timeron",text:p("arduino.blocks.timeron","start timer"),ino(t){}},{id:"timeroff",text:p("arduino.blocks.timeroff","stop timer"),ino(t){}}]});import{translate as b,themeColors as M}from"@blockcode/core";import{ScratchBlocks as k}from"@blockcode/blocks";var F=()=>({id:"control",name:"%{BKY_CATEGORY_CONTROL}",themeColor:M.blocks.control.primary,inputColor:M.blocks.control.secondary,otherColor:M.blocks.control.tertiary,blocks:[{id:"wait",text:b("arduino.blocks.wait","wait %1 milliseconds"),inputs:{MS:{type:"integer",defaultValue:500}}},"---",{id:"repeat",text:k.Msg.CONTROL_REPEAT,repeat:!0,inputs:{TIMES:{type:"integer",defaultValue:10}}},{id:"forever",text:k.Msg.CONTROL_FOREVER,repeat:!0,end:!0},"---",{id:"if",text:k.Msg.CONTROL_IF,substack:!0,inputs:{CONDITION:{type:"boolean"}}},{id:"elseif",text:b("arduino.blocks.elseif","else if %1 then"),substack:!0,inputs:{CONDITION:{type:"boolean"}}},{id:"else",text:b("arduino.blocks.else","else"),substack:!0},"---",{id:"repeat_until",text:k.Msg.CONTROL_REPEATUNTIL,repeat:!0,inputs:{CONDITION:{type:"boolean"}}},{id:"while",text:k.Msg.CONTROL_WHILE,repeat:!0,inputs:{CONDITION:{type:"boolean"}}},"---",{id:"runtime",text:b("arduino.blocks.runtime","run time %1"),output:"number",inputs:{UNIT:{menu:[[b("arduino.blocks.runtimeMilliseconds","milliseconds"),"MS"],[b("arduino.blocks.runtimeSeconds","seconds"),"SEC"]]}},ino(t){}}]});import{translate as at,themeColors as y}from"@blockcode/core";import{ScratchBlocks as eo}from"@blockcode/blocks";var W=()=>({id:"protocol",name:at("arduino.blocks.protocols","Protocols"),themeColor:y.blocks.sensing.primary,inputColor:y.blocks.sensing.secondary,otherColor:y.blocks.sensing.tertiary,order:5,blocks:[]});import{translate as m,themeColors as N}from"@blockcode/core";import{ScratchBlocks as no}from"@blockcode/blocks";var D=()=>({id:"data",name:m("arduino.blocks.data","Data"),themeColor:N.blocks.monitor.primary,inputColor:N.blocks.monitor.secondary,otherColor:N.blocks.monitor.tertiary,order:7,blocks:[{id:"convert",text:m("arduino.blocks.dataConvert","convert %1 to %2"),output:!0,inputs:{DATA:{type:"string",defaultValue:"123"},TYPE:{menu:["int","float","char","byte","String"]}}},"---",{id:"sizeof",text:m("arduino.blocks.dataLengthOf","length of %1"),output:"number",inputs:{DATA:{type:"string",defaultValue:"abc"}}},"---",{id:"constrain",text:m("arduino.blocks.dataConstrain","constrain %1 between %2 to %3"),output:"number",inputs:{DATA:{type:"integer",defaultValue:0},FROM:{type:"integer",defaultValue:0},TO:{type:"integer",defaultValue:255}}},{id:"map",text:m("arduino.blocks.dataMap","map %1 from %2 - %3 to %4 - %5"),output:"number",inputs:{DATA:{type:"integer",defaultValue:0},FROMLOW:{type:"integer",defaultValue:0},FROMHIGH:{type:"integer",defaultValue:1023},TOLOW:{type:"integer",defaultValue:0},TOHIGHT:{type:"integer",defaultValue:255}}}]});import{translate as J,themeColors as S}from"@blockcode/core";import{ScratchBlocks as e}from"@blockcode/blocks";var X=()=>({id:"operator",name:"%{BKY_CATEGORY_OPERATORS}",themeColor:S.blocks.operators.primary,inputColor:S.blocks.operators.secondary,otherColor:S.blocks.operators.tertiary,blocks:[{id:"calculate",text:"%1 %2 %3",output:"number",inputs:{NUM1:{type:"number",defaultValue:0},SYMBOL:{menu:[["+","ADD"],["-","SUB"],["×","MUL"],["÷","DIV"]]},NUM2:{type:"number",defaultValue:0}}},"---",{id:"random",text:e.Msg.OPERATORS_RANDOM,output:"number",inputs:{FROM:{type:"integer",defaultValue:1},TO:{type:"integer",defaultValue:10}}},"---",{id:"compare",text:"%1 %2 %3",output:"boolean",inputs:{NUM1:{type:"number",defaultValue:0},SYMBOL:{menu:[[">","GT"],["<","LT"],["=","EQ"],["≥","GE"],["≤","LE"],["≠","NE"]]},NUM2:{type:"number",defaultValue:0}}},"---",{id:"and",text:e.Msg.OPERATORS_AND,output:"boolean",inputs:{OPERAND1:{type:"boolean"},OPERAND2:{type:"boolean"}}},{id:"or",text:e.Msg.OPERATORS_OR,output:"boolean",inputs:{OPERAND1:{type:"boolean"},OPERAND2:{type:"boolean"}}},{id:"not",text:e.Msg.OPERATORS_NOT,output:"boolean",inputs:{OPERAND:{type:"boolean"}}},"---",{id:"bitwise",text:"%1 %2 %3",output:"number",inputs:{NUM1:{type:"integer",defaultValue:0},SYMBOL:{menu:[["&","AND"],["|","OR"],["^","XOR"],["<<","LEFT"],[">>","RIGHT"]]},NUM2:{type:"integer",defaultValue:0}}},{id:"bitwise_not",text:"~ %1",output:"number",inputs:{NUM:{type:"integer",defaultValue:0}}},"---",{id:"larger",text:J("arduino.blocks.operatorLarger","larger of %1 and %2"),output:"number",inputs:{NUM1:{type:"number",defaultValue:0},NUM2:{type:"number",defaultValue:0}}},{id:"smaller",text:J("arduino.blocks.operatorSmaller","smaller of %1 and %2"),output:"number",inputs:{NUM1:{type:"number",defaultValue:0},NUM2:{type:"number",defaultValue:0}}},{id:"mod",text:e.Msg.OPERATORS_MOD,output:"number",inputs:{NUM1:{type:"integer",defaultValue:0},NUM2:{type:"integer",defaultValue:0}}},{id:"round",text:e.Msg.OPERATORS_ROUND,output:"number",inputs:{NUM:{type:"number",defaultValue:0}}},"---",{id:"mathop",text:e.Msg.MATHOP,output:"number",inputs:{OPERATOR:{menu:[[e.Msg.OPERATORS_MATHOP_ABS,"abs"],[e.Msg.OPERATORS_MATHOP_FLOOR,"floor"],[e.Msg.OPERATORS_MATHOP_CEILING,"ceiling"],[e.Msg.OPERATORS_MATHOP_SQRT,"sqrt"],[e.Msg.OPERATORS_MATHOP_SIN,"sin"],[e.Msg.OPERATORS_MATHOP_COS,"cos"],[e.Msg.OPERATORS_MATHOP_TAN,"tan"],[e.Msg.OPERATORS_MATHOP_ASIN,"asin"],[e.Msg.OPERATORS_MATHOP_ACOS,"acos"],[e.Msg.OPERATORS_MATHOP_ATAN,"atan"],[e.Msg.OPERATORS_MATHOP_LN,"ln"],[e.Msg.OPERATORS_MATHOP_LOG,"log"],[e.Msg.OPERATORS_MATHOP_EEXP,"e ^"],[e.Msg.OPERATORS_MATHOP_10EXP,"10 ^"]]},NUM:{type:"integer",defaultValue:0}}}]});import{ClangGenerator as nt}from"@blockcode/blocks";class T extends nt{constructor(){super("INO")}init(t){if(super.init(t),this.onDefinitions?.(),this.onVariableDefinitions)delete this.definitions_.variables,this.onVariableDefinitions(t)}}function q(){let t=B(),s=H(),c=G(),R=U(),n=F(),P=W(),f=X(),l=D();return[t,s,c,R,n,P,f,l]}import{jsx as ct}from"preact/jsx-runtime";var lt=["int","float","boolean","char","byte","String"],ut=new T,dt=()=>["arduino"];function Y(){return ct(st,{disableSensingBlocks:!0,variableTypes:lt,generator:ut,onBuildinExtensions:q,onExtensionsFilter:dt})}import{useAppContext as kt}from"@blockcode/core";var Z="./assets/icon-device-9de6fxnz.svg";var z="./assets/icon-device-connected-3gcajtt2.svg";import{jsx as K}from"preact/jsx-runtime";function Q(){let{appState:t}=kt();return t.value?.device?K("img",{src:z}):K("img",{src:Z})}import{nanoid as mt}from"@blockcode/utils";import{useProjectContext as gt,setAlert as _,delAlert as Ot,openPromptModal as Rt}from"@blockcode/core";import{MPYUtils as g}from"@blockcode/board";import{Spinner as ft,Text as h,MenuSection as Tt,MenuItem as ht}from"@blockcode/core";import{jsx as u,Fragment as Pt}from"preact/jsx-runtime";var d=null,V=()=>{Ot(d),d=null},$=(t)=>{if(!d)d=mt();if(t<100)_({id:d,icon:u(ft,{level:"success"}),message:u(h,{id:"blocks.alert.downloading",defaultMessage:"Downloading...{progress}%",progress:t})});else _("downloadCompleted",{id:d}),setTimeout(V,2000)},L=(t)=>{if(t==="NotFoundError")return;_("connectionError",1000)};function j({itemClassName:t}){let{key:s,files:c,assets:R}=gt();return u(Pt,{children:u(Tt,{children:u(ht,{disabled:d,className:t,label:u(h,{id:"blocks.menu.device.download",defaultMessage:"Download program"}),onClick:async()=>{if(d)return;let n;try{n=await g.connect([])}catch(l){L(l.name)}if(!n)return;let P=g.check(n).catch(()=>{L(),V()}),f=[].concat(c.value,R.value).map((l)=>({...l,id:l.id.startsWith("lib/")?l.id:`proj${s.value}/${l.id}`}));$(0);try{if(!await g.flashFree(n,f))Rt({title:u(h,{id:"blocks.menu.device.name",defaultMessage:"Device"}),label:u(h,{id:"blocks.downloadPrompt.flashOutSpace",defaultMessage:"The flash is running out of space."})});else await g.write(n,f,$),await g.config(n,{"latest-project":s}),n.hardReset()}catch(l){L(l.name)}V(),P.cancel()}})})})}import{nanoid as Et}from"@blockcode/utils";var tt=Et(),At=`
from blocks import *
import ${tt}
start()
`,ot={assets:[{id:"main",type:"text/x-python",content:At}],files:[{id:tt,type:"text/x-python"}]};import{jsx as et}from"preact/jsx-runtime";var $o={onNew(){return ot},onSave(t,s){let c=[];return t=t.map((n)=>{return c.push(n.extensions),{id:n.id,type:n.type,xml:n.xml}}),{meta:{extensions:Array.from(new Set(c.flat()))},files:t,assets:s}},async onThumb(){let t=O.getMainWorkspace();if(t){let s=t.getCanvas();if(s)return await xt(s,{})}},onUndo(t){if(t instanceof MouseEvent)O.getMainWorkspace()?.undo?.(!1)},onRedo(t){if(t instanceof MouseEvent)O.getMainWorkspace()?.undo?.(!0)},onEnableUndo(){let t=O.getMainWorkspace();return t?.undoStack_&&t.undoStack_.length!==0},onEnableRedo(){let t=O.getMainWorkspace();return t?.redoStack_&&t.redoStack_.length!==0},menuItems:[{icon:et(Q,{}),label:et(yt,{id:"arduino.menubar.device",defaultMessage:"Device"}),Menu:j}],tabs:[{...Ct,Content:Y},{...Mt,Content:Nt}]};export{$o as default};
