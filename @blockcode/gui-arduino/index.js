import{addLocalesMessages as yt}from"@blockcode/core";var it={"arduino.menubar.device":"Arduino","arduino.menubar.device.uno":"Arduino Uno","arduino.menubar.device.unoR4":"Arduino Uno R4","arduino.menubar.device.nano":"Arduino Nano","arduino.menubar.device.bleuno":"BLE-UNO","arduino.menubar.device.download":"Download program via USB","arduino.menubar.device.downloadBle":"Download program via Bluetooth","arduino.menubar.edit.classicEventsOpen":"Turn on Classic Event Blocks","arduino.menubar.edit.classicEventsClose":"Turn off Classic Event Blocks","arduino.extension.tags.controllers":"Controllers","arduino.extension.tags.sensors":"Sensors","arduino.extension.tags.actuators":"Actuators","arduino.extension.tags.displays":"Displays","arduino.extension.tags.modules":"Modules","arduino.extension.tags.kits":"Kits","arduino.blocks.classicEventsLabel":"Classic events turned on from Edit.","arduino.blocks.displayMatrix":"display %1","arduino.blocks.clearDisplay":"clear display","arduino.blocks.wait":"wait %1 milliseconds","arduino.blocks.break":"break","arduino.blocks.continue":"continue","arduino.blocks.elseif":"else if %1 then","arduino.blocks.else":"else","arduino.blocks.runtime":"run time %1","arduino.blocks.runtimeMilliseconds":"milliseconds","arduino.blocks.runtimeSeconds":"seconds","arduino.blocks.dataConvert":"convert %1 to %2","arduino.blocks.dataLengthOf":"length of %1","arduino.blocks.dataConstrain":"constrain %1 between %2 to %3","arduino.blocks.dataMap":"map %1 from %2 - %3 to %4 - %5","arduino.blocks.whensetup":"when Arduino setup","arduino.blocks.whenloop":"when Arduino loop","arduino.blocks.whentimer":"when timer per %1 milliseconds","arduino.blocks.timeron":"start timer","arduino.blocks.timeroff":"stop timer","arduino.blocks.operatorLarger":"larger of %1 and %2","arduino.blocks.operatorSmaller":"smaller of %1 and %2","arduino.blocks.pin":"Pins","arduino.blocks.setmode":"set pin %1 mode to %2","arduino.blocks.inputMode":"input","arduino.blocks.ouputMode":"output","arduino.blocks.inputPullUpMode":"input pull-up","arduino.blocks.setdigital":"set digital pin %1 to %2","arduino.blocks.digitalHigh":"high","arduino.blocks.digitalLow":"low","arduino.blocks.setanalog":"set pwm pin %1 to %2","arduino.blocks.isDigitalHigh":"digital pin %1 is high?","arduino.blocks.analogValue":"analog pin %1","arduino.blocks.attachinterrupt":"attach pin %1 interrupt to %2","arduino.blocks.interruptRising":"rising","arduino.blocks.interruptFalling":"falling","arduino.blocks.interruptChange":"change","arduino.blocks.interruptHigh":"high","arduino.blocks.interruptLow":"low","arduino.blocks.detachinterrupt":"detach pin %1 interrupt","arduino.blocks.protocols":"Protocols","arduino.blocks.serial":"Serial","arduino.blocks.serialBaudrate":"set baudrate to %1","arduino.blocks.serialTimeout":"set timeout to %1 milliseconds","arduino.blocks.serialPrint":"print %1 with %2","arduino.blocks.serialPrintWarp":"warp","arduino.blocks.serialPrintNoWarp":"no-warp","arduino.blocks.serialPrintHEX":"hex","arduino.blocks.serialPrintNumber":"print %1","arduino.blocks.serialAvailable":"available data?","arduino.blocks.serialAvailableLength":"available data length","arduino.blocks.serialReadString":"read a string","arduino.blocks.serialReadStringUntil":"read a string until %1","arduino.blocks.serialReadParse":"read a %1 number","arduino.blocks.serialReadParseInteger":"int","arduino.blocks.serialReadParseFloat":"float","arduino.blocks.serialRead":"read a byte","arduino.blocks.serialReadBytes":"read %1 bytes","arduino.blocks.text":"Text","arduino.blocks.textEquals":"%1 equals %2 (not case-sensitive)?","arduino.blocks.textRemove":"remove letters from %1 to %2 of %3","arduino.blocks.textReplace":"replace %1 of %2 with %3","arduino.blocks.textReplaceLetter":"replace letter %1 of %2 with %3","arduino.blocks.textSubstring":"substring of %1 from %2 to %3","arduino.blocks.textWith":"%1 %2 with %3?","arduino.blocks.textStartsWith":"starts","arduino.blocks.textEndsWith":"ends","arduino.blocks.textCase":"get %1 of %2","arduino.blocks.textLowerCase":"lower-case","arduino.blocks.textUpperCase":"upper-case","arduino.blocks.textTrim":"remove %1 leading and trailing whitespace","arduino.blocks.textConvert":"convert %1 to %2","arduino.blocks.textConvertFrom":"convert %1 to String"};var ot={"arduino.menubar.device":"Arduino","arduino.menubar.device.uno":"Arduino Uno","arduino.menubar.device.unoR4":"Arduino Uno R4","arduino.menubar.device.nano":"Arduino Nano","arduino.menubar.device.bleuno":"BLE-UNO","arduino.menubar.device.download":"通过 USB 下载程序","arduino.menubar.device.downloadBle":"通过蓝牙下载程序","arduino.menubar.edit.classicEventsOpen":"打开经典事件积木","arduino.menubar.edit.classicEventsClose":"关闭经典事件积木","arduino.extension.tags.controllers":"控制器","arduino.extension.tags.sensors":"传感器","arduino.extension.tags.actuators":"执行器","arduino.extension.tags.displays":"显示器","arduino.extension.tags.modules":"智能模块","arduino.extension.tags.kits":"套件","arduino.blocks.classicEventsLabel":"经典事件积木请从“编辑”菜单开启。","arduino.blocks.displayMatrix":"显示 %1","arduino.blocks.clearDisplay":"清除显示","arduino.blocks.wait":"等待 %1 毫秒","arduino.blocks.break":"跳出重复执行","arduino.blocks.continue":"跳到下一次执行","arduino.blocks.elseif":"否则，如果 %1 那么","arduino.blocks.else":"否则","arduino.blocks.runtime":"运行时长 %1","arduino.blocks.runtimeMilliseconds":"毫秒","arduino.blocks.runtimeSeconds":"秒","arduino.blocks.dataConvert":"将 %1 类型转为 %2","arduino.blocks.dataLengthOf":"%1 长度","arduino.blocks.dataConstrain":"约束 %1 在 %2 和 %3 之间","arduino.blocks.dataMap":"映射 %1 从 %2 - %3 到 %4 - %5","arduino.blocks.whensetup":"当 Arduino 启动","arduino.blocks.whenloop":"当 Arduino 循环运行","arduino.blocks.whentimer":"当定时器每间隔 %1 毫秒","arduino.blocks.timeron":"开启定时器","arduino.blocks.timeroff":"关闭定时器","arduino.blocks.operatorLarger":"%1 和 %2 之中最大","arduino.blocks.operatorSmaller":"%1 和 %2 之中最小","arduino.blocks.pin":"引脚","arduino.blocks.setmode":"将引脚 %1 设为 %2 模式","arduino.blocks.inputMode":"输入","arduino.blocks.ouputMode":"输出","arduino.blocks.inputPullUpMode":"上拉输入","arduino.blocks.setdigital":"将数字引脚 %1 设为 %2","arduino.blocks.digitalHigh":"高电平","arduino.blocks.digitalLow":"低电平","arduino.blocks.setanalog":"将 PWM 引脚 %1 设为 %2","arduino.blocks.isDigitalHigh":"数字引脚 %1 是高电平？","arduino.blocks.analogValue":"模拟引脚 %1","arduino.blocks.attachinterrupt":"将引脚 %1 中断模式设为 %2","arduino.blocks.interruptRising":"电平上升","arduino.blocks.interruptFalling":"电平下降","arduino.blocks.interruptChange":"电平改变","arduino.blocks.interruptHigh":"高电平","arduino.blocks.interruptLow":"低电平","arduino.blocks.detachinterrupt":"取消引脚 %1 中断","arduino.blocks.protocols":"数据协议","arduino.blocks.serial":"串口","arduino.blocks.serialBaudrate":"将波特率设为 %1","arduino.blocks.serialTimeout":"将超时设为 %1 毫秒","arduino.blocks.serialPrint":"用 %2 模式打印 %1","arduino.blocks.serialPrintWarp":"换行","arduino.blocks.serialPrintNoWarp":"不换行","arduino.blocks.serialPrintHEX":"16进制","arduino.blocks.serialPrintNumber":"打印 %1","arduino.blocks.serialAvailable":"存在可读取数据?","arduino.blocks.serialAvailableLength":"可读取数据长度","arduino.blocks.serialReadString":"读取文本","arduino.blocks.serialReadStringUntil":"读取文本直到 %1","arduino.blocks.serialReadParse":"读取 %1","arduino.blocks.serialReadParseInteger":"整数","arduino.blocks.serialReadParseFloat":"浮点数","arduino.blocks.serialRead":"读取 1 个字节","arduino.blocks.serialReadBytes":"读取 %1 个字节","arduino.blocks.text":"文本","arduino.blocks.textEquals":"%1 和 %2 相同（忽视大小写）？","arduino.blocks.textRemove":"删除 %3 从第 %1 个到第 %2 个字符","arduino.blocks.textReplace":"将 %2 中的 %1 替换为 %3","arduino.blocks.textReplaceLetter":"将 %2 中的第 %1 个字符替换为 %3","arduino.blocks.textSubstring":"截取 %1 从第 %2 个到第 %3 个字符","arduino.blocks.textWith":"%1 %2 %3?","arduino.blocks.textStartsWith":"开始于","arduino.blocks.textEndsWith":"结束于","arduino.blocks.textCase":"将 %2 字母转为 %1","arduino.blocks.textLowerCase":"小写","arduino.blocks.textUpperCase":"大写","arduino.blocks.textTrim":"清除 %1 前后空白字符","arduino.blocks.textConvert":"将 %1 转为 %2","arduino.blocks.textConvertFrom":"将 %1 转为文本"};var nt={"arduino.menubar.device":"Arduino","arduino.menubar.device.uno":"Arduino Uno","arduino.menubar.device.unoR4":"Arduino Uno R4","arduino.menubar.device.nano":"Arduino Nano","arduino.menubar.device.bleuno":"BLE-UNO","arduino.menubar.device.download":"通過 USB 下載程式","arduino.menubar.device.downloadBle":"通過藍牙下載程式","arduino.menubar.edit.classicEventsOpen":"開啟舊樣式事件積木","arduino.menubar.edit.classicEventsClose":"關閉舊樣式事件積木","arduino.extension.tags.controllers":"控制器","arduino.extension.tags.sensors":"傳感器","arduino.extension.tags.actuators":"執行器","arduino.extension.tags.displays":"顯示器","arduino.extension.tags.modules":"智能模組","arduino.extension.tags.kits":"套件","arduino.blocks.classicEventsLabel":"经典事件積木請從「編輯」菜單開啟。","arduino.blocks.displayMatrix":"顯示圖示 %1","arduino.blocks.clearDisplay":"清空畫面","arduino.blocks.wait":"等待 %1 毫秒","arduino.blocks.break":"跳出重複","arduino.blocks.continue":"跳到下一次","arduino.blocks.elseif":"否則，如果 %1 那麼","arduino.blocks.else":"否則","arduino.blocks.runtime":"運行時長 %1","arduino.blocks.runtimeMilliseconds":"毫秒","arduino.blocks.runtimeSeconds":"秒","arduino.blocks.dataConvert":"將 %1 類型轉為 %2","arduino.blocks.dataLengthOf":"%1 長度","arduino.blocks.dataConstrain":"約束 %1 在 %2 和 %3 之間","arduino.blocks.dataMap":"映射 %1 從 %2 - %3 到 %4 - %5","arduino.blocks.whensetup":"當 Arduino 啟動","arduino.blocks.whenloop":"當 Arduino 循環運行","arduino.blocks.whentimer":"當定時器每間隔 %1 毫秒","arduino.blocks.timeron":"開啟定時器","arduino.blocks.timeroff":"關閉定時器","arduino.blocks.operatorLarger":"%1 和 %2 之中最大","arduino.blocks.operatorSmaller":"%1 和 %2 之中最小","arduino.blocks.pin":"引腳","arduino.blocks.setmode":"將引腳 %1 設為 %2 模式","arduino.blocks.inputMode":"輸入","arduino.blocks.ouputMode":"輸出","arduino.blocks.inputPullUpMode":"上拉輸入","arduino.blocks.setdigital":"將數字引腳 %1 設為 %2","arduino.blocks.digitalHigh":"高電平","arduino.blocks.digitalLow":"低電平","arduino.blocks.setanalog":"將 PWM 引腳 %1 設為 %2","arduino.blocks.isDigitalHigh":"數字引腳 %1 是高電平？","arduino.blocks.analogValue":"模擬引腳 %1","arduino.blocks.attachinterrupt":"將引腳 %1 中斷模式設為 %2","arduino.blocks.interruptRising":"電平上升","arduino.blocks.interruptFalling":"電平下降","arduino.blocks.interruptChange":"電平改變","arduino.blocks.interruptHigh":"高電平","arduino.blocks.interruptLow":"低電平","arduino.blocks.detachinterrupt":"取消引腳 %1 中斷","arduino.blocks.protocol":"數據協議","arduino.blocks.serial":"串口","arduino.blocks.serialBaudrate":"將波特率設為 %1","arduino.blocks.serialTimeout":"將超時設為 %1 毫秒","arduino.blocks.serialPrint":"用 %2 模式打印 %1","arduino.blocks.serialPrintWarp":"換行","arduino.blocks.serialPrintNoWarp":"不換行","arduino.blocks.serialPrintHEX":"16進制","arduino.blocks.serialPrintNumber":"打印 %1","arduino.blocks.serialAvailable":"存在可讀取數據?","arduino.blocks.serialAvailableLength":"可讀取數據長度","arduino.blocks.serialReadString":"讀取文本","arduino.blocks.serialReadStringUntil":"讀取文本直到 %1","arduino.blocks.serialReadParse":"讀取 %1","arduino.blocks.serialReadParseInteger":"整數","arduino.blocks.serialReadParseFloat":"浮點數","arduino.blocks.serialRead":"讀取 1 個字節","arduino.blocks.serialReadBytes":"讀取 %1 個字節","arduino.blocks.text":"文本","arduino.blocks.textEquals":"%1 和 %2 相同（忽視大小寫）？","arduino.blocks.textRemove":"刪除 %3 從第 %1 個到第 %2 個字符","arduino.blocks.textReplace":"將 %2 中的 %1 替換為 %3","arduino.blocks.textReplaceLetter":"將 %2 中的第 %1 個字符替換為 %3","arduino.blocks.textSubstring":"截取 %1 從第 %2 個到第 %3 個字符","arduino.blocks.textWith":"%1 %2 %3?","arduino.blocks.textStartsWith":"開始於","arduino.blocks.textEndsWith":"結束於","arduino.blocks.textCase":"將 %2 字母轉為 %1","arduino.blocks.textLowerCase":"小寫","arduino.blocks.textUpperCase":"大寫","arduino.blocks.textTrim":"清除 %1 前後空白字符","arduino.blocks.textConvert":"將 %1 轉為 %2","arduino.blocks.textConvertFrom":"將 %1 轉為文本"};yt({en:it,"zh-Hans":ot,"zh-Hant":nt});import{svgAsDataUri as Le}from"@blockcode/utils";import{ScratchBlocks as S,blocksTab as Se,CodeReview as Ae}from"@blockcode/blocks";import{codeTab as xe,terminalTab as Me}from"@blockcode/code";import{monaco as $t}from"@blockcode/code";var we=$t.languages.CompletionItemKind,rt=()=>["void","unsignedchar","byte","char","int","word","long","float","string","array","double","volatile","const","min","max","abs","constrain","map","pow","sqrt","ceil","exp","fabs","floor","fma","fmax","fmin","fmod","ldexp","log","log10","round","signbit","sq","square","trunc","sin","cos","tan","atan2","cosh","degrees","hypot","radians","sinh","tanh","randomSeed","random","pinMode","digitalWrite","digitalRead","analogReference","analogRead","analogWrite","tone","noTone","shifOut","shiftln","pulseln","delay","millis","micros","lowByte","highBye","bitRead","bitWrite","bitSet","bitClear","bit","attachlnterrupt","detachlnterrupt","interrupts","nolnterrupts","Serial","available","begin","end","find","findUntil","flush","parseFloat","parselnt","read","readBytes","readBytesUntil","setTimeout","write","SerialEvent","Stream","Mouse","Keyboard","include"];import{useCallback as Tt}from"preact/hooks";import{useAppContext as Kt,useProjectContext as qt}from"@blockcode/core";import{BlocksEditor as zt}from"@blockcode/blocks";import{translate as d,themeColors as y}from"@blockcode/core";import{keyMirror as Ut}from"@blockcode/utils";var r=Ut({BLEUNO:null,ArduinoUno:null,ArduinoUnoR4:null,ArduinoNano:null});var at=(t)=>({id:"pin",name:d("arduino.blocks.pin","Pins"),themeColor:y.blocks.motion.primary,inputColor:y.blocks.motion.secondary,otherColor:y.blocks.motion.tertiary,order:0,blocks:[{id:"setmode",text:d("arduino.blocks.setmode","set pin %1 mode to %2"),inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_PINS":"UNO_PINS"},MODE:{menu:[[d("arduino.blocks.inputMode","input"),"INPUT"],[d("arduino.blocks.ouputMode","output"),"OUTPUT"],[d("arduino.blocks.inputPullUpMode","input pull-up"),"INPUT_PULLUP"]]}},ino(e){let i=e.getFieldValue("PIN")||0,o=e.getFieldValue("MODE")||"INPUT";return`pinMode(${i}, ${o});
`}},"---",{id:"setdigital",text:d("arduino.blocks.setdigital","set digital pin %1 to %2"),inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_PINS":"UNO_PINS"},VALUE:{inputMode:!0,type:"number",defaultValue:"1",menu:[[d("arduino.blocks.digitalHigh","high"),"1"],[d("arduino.blocks.digitalLow","low"),"0"]]}},ino(e){let i=e.getFieldValue("PIN")||0,o=this.valueToCode(e,"VALUE",this.ORDER_NONE);return`digitalWrite(${i}, ${o});
`}},{id:"setanalog",text:d("arduino.blocks.setanalog","set pwm pin %1 to %2"),inputs:{PIN:{menu:t===r.ArduinoUnoR4?"R4_PWM_PINS":"PWM_PINS"},VALUE:{shadow:"slider255"}},ino(e){let i=e.getFieldValue("PIN")||0,o=this.valueToCode(e,"VALUE",this.ORDER_NONE);return`analogWrite(${i}, ${o});
`}},{id:"slider255",inline:!0,output:"number",inputs:{VALUE:{type:"slider",min:0,max:255,step:1,defaultValue:128}},ino(e){return[e.getFieldValue("VALUE")||0,this.ORDER_ATOMIC]}},{id:"digital",text:d("arduino.blocks.isDigitalHigh","digital pin %1 is high?"),output:"boolean",inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_PINS":"UNO_PINS"}},ino(e){return[`digitalRead(${e.getFieldValue("PIN")||0}) == HIGH`,this.ORDER_ATOMIC]}},{id:"analog",text:d("arduino.blocks.analogValue","analog pin %1"),output:"number",inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_ANALOG_PINS":"UNO_ANALOG_PINS"}},ino(e){return[`analogRead(${e.getFieldValue("PIN")||0})`,this.ORDER_ATOMIC]}},"---",{id:"attachinterrupt",text:d("arduino.blocks.attachinterrupt","attach pin %1 interrupt to %2"),substack:!0,inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_PINS":"UNO_PINS"},INTERRUPT:{menu:[[d("arduino.blocks.interruptRising","rising"),"RISING"],[d("arduino.blocks.interruptFalling","falling"),"FALLING"],[d("arduino.blocks.interruptChange","change"),"CHANGE"],[d("arduino.blocks.interruptLow","low"),"LOW"]]}},ino(e){let i=e.getFieldValue("PIN")||0,o=e.getFieldValue("INTERRUPT")||"RISING",n=`interrupt_${i}_${o}`,a=this.statementToCode(e,"SUBSTACK")||"";return this.definitions_[`declare_${n}`]=`void ${n}();`,this.definitions_[n]=`void ${n}() {
${a}}`,`attachInterrupt(digitalPinToInterrupt(${i}), ${n}, ${o});
`}},{id:"detachinterrupt",text:d("arduino.blocks.detachinterrupt","detach pin %1 interrupt"),inputs:{PIN:{menu:[r.ArduinoNano,r.BLEUNO].includes(t)?"NANO_PINS":"UNO_PINS"}},ino(e){return`detachInterrupt(digitalPinToInterrupt(${e.getFieldValue("PIN")||0}));
`}},"---",{id:"setMatrix",hidden:t!==r.ArduinoUnoR4,text:d("arduino.blocks.displayMatrix","display [MATRIX]"),inputs:{MATRIX:{shadow:"matrixR4"}},ino(e){if(this.definitions_.include_Arduino_LED_Matrix='#include "Arduino_LED_Matrix.h"',this.definitions_.variable_matrix="ArduinoLEDMatrix _matrix;",this.definitions_.variable_matrix_frame="uint32_t _MATRIX_FRAME_[] = {0x0,0x0,0x0};",!this.setup_.includes("_matrix.begin();"))this.setup_+=this.INDENT+`_matrix.begin();
`;let i=this.valueToCode(e,"MATRIX",this.ORDER_NONE).split(","),o="";return o+=`_MATRIX_FRAME_[0] = 0x${i[0]};
`,o+=`_MATRIX_FRAME_[1] = 0x${i[1]};
`,o+=`_MATRIX_FRAME_[2] = 0x${i[2]};
`,o+=`_matrix.loadFrame(_MATRIX_FRAME_);
`,o}},{id:"clearMatrix",hidden:t!==r.ArduinoUnoR4,text:d("arduino.blocks.clearDisplay","clear display"),ino(e){if(this.definitions_.include_Arduino_LED_Matrix='#include "Arduino_LED_Matrix.h"',this.definitions_.variable_matrix="ArduinoLEDMatrix _matrix;",this.definitions_.variable_matrix_frame="uint32_t _MATRIX_FRAME_[] = {0x0,0x0,0x0}",!this.setup_.includes(`_matrix.begin();
`))this.setup_+=this.INDENT+`_matrix.begin();
`;let i="";return i+=`_MATRIX_FRAME_[0] = 0x0;
`,i+=`_MATRIX_FRAME_[1] = 0x0;
`,i+=`_MATRIX_FRAME_[2] = 0x0;
`,i+=`_matrix.loadFrame(_MATRIX_FRAME_);
`,i}},{id:"matrixR4",inline:!0,output:"string",inputs:{MATRIX:{type:"matrix",width:12,height:8}},ino(e){let i=e.getFieldValue("MATRIX"),o=[];for(let n=0;n<3;n++){let a=i.slice(n*32,(n+1)*32),s=parseInt(a,2).toString(16);o.push(s)}return[o.join(","),this.ORDER_ATOMIC]}}],menus:{UNO_PINS:{items:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]]},NANO_PINS:{items:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"],["A6","A6"],["A7","A7"]]},PWM_PINS:{items:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]]},R4_PWM_PINS:{items:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"],["A0","A0"]]},UNO_ANALOG_PINS:{items:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]]},NANO_ANALOG_PINS:{items:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"],["A6","A6"],["A7","A7"]]}}});import{translate as c,themeColors as $}from"@blockcode/core";import{ScratchBlocks as A}from"@blockcode/blocks";var st=()=>({id:"text",name:c("arduino.blocks.text","Text"),themeColor:$.blocks.looks.primary,inputColor:$.blocks.looks.secondary,otherColor:$.blocks.looks.tertiary,order:1,blocks:[{id:"join",text:A.Msg.OPERATORS_JOIN,output:"string",inputs:{STRING1:{type:"string",defaultValue:"hello"},STRING2:{type:"string",defaultValue:"arduino"}},ino(t){let e=this.valueToCode(t,"STRING1",this.ORDER_NONE),i=this.valueToCode(t,"STRING2",this.ORDER_NONE);return[`(${e} + ${i})`,this.ORDER_ADDITION]}},{id:"letter_of",text:A.Msg.OPERATORS_LETTEROF,output:"string",inputs:{LETTER:{type:"integer",defaultValue:1},STRING:{type:"string",defaultValue:"arduino"}},ino(t){let e=this.getAdjusted(t,"LETTER");return[`${this.valueToCode(t,"STRING",this.ORDER_NONE)}.charAt(${e})`,this.ORDER_FUNCTION_CALL]}},{id:"length",text:A.Msg.OPERATORS_LENGTH,output:"number",inputs:{STRING:{type:"string",defaultValue:"arduino"}},ino(t){let e=this.valueToCode(t,"STRING",this.ORDER_NONE);return code+=`${e}.length()`,[code,this.ORDER_FUNCTION_CALL]}},{id:"contains",text:A.Msg.OPERATORS_CONTAINS,output:"boolean",inputs:{STRING1:{type:"string",defaultValue:"arduino"},STRING2:{type:"string",defaultValue:"ino"}},ino(t){let e=this.valueToCode(t,"STRING1",this.ORDER_NONE),i=this.valueToCode(t,"STRING2",this.ORDER_NONE);return code+=`(${e}.indexOf(${i}) != -1)`,[code,this.ORDER_EQUALITY]}},{id:"equals",text:c("arduino.blocks.textEquals","%1 equals %2 (not case-sensitive)?"),output:"boolean",inputs:{STRING1:{type:"string",defaultValue:"arduino"},STRING2:{type:"string",defaultValue:"Arduino"}},ino(t){let e=this.valueToCode(t,"STRING1",this.ORDER_NONE),i=this.valueToCode(t,"STRING2",this.ORDER_NONE);return code+=`${e}.equalsIgnoreCase(${i})
`,[code,this.ORDER_EQUALITY]}},"---",{id:"remove",text:c("arduino.blocks.textRemove","remove letters from %1 to %2 of %3"),inputs:{FROM:{type:"integer",defaultValue:1},TO:{type:"integer",defaultValue:2},STRING:{type:"string",defaultValue:"arduino"}},ino(t){let e=this.getAdjusted(t,"FROM"),i=this.valueToCode(t,"TO",this.ORDER_NONE);return`${this.valueToCode(t,"STRING",this.ORDER_NONE)}.remove(${e}, (${i} - ${e}));
`}},{id:"replace",text:c("arduino.blocks.textReplace","replace %1 of %2 with %3"),inputs:{STRING1:{type:"string",defaultValue:"a"},STRING2:{type:"string",defaultValue:"arduino"},STRING3:{type:"string",defaultValue:"The A"}},ino(t){let e=this.valueToCode(t,"STRING1",this.ORDER_NONE),i=this.valueToCode(t,"STRING2",this.ORDER_NONE),o=this.valueToCode(t,"STRING3",this.ORDER_NONE);return`${i}.replace(${e}, ${o});
`}},{id:"replace_letter",text:c("arduino.blocks.textReplaceLetter","replace letter %1 of %2 with %3"),inputs:{INDEX:{type:"integer",defaultValue:1},STRING:{type:"string",defaultValue:"arduino"},LETTER:{type:"string",defaultValue:"A"}},ino(t){let e=this.getAdjusted(t,"INDEX",this.ORDER_NONE),i=this.valueToCode(t,"STRING",this.ORDER_NONE),o=this.valueToCode(t,"LETTER",this.ORDER_NONE);return`${i}.setCharAt(${e}, ${o})
`}},{id:"substring",text:c("arduino.blocks.textSubstring","substring of %1 from %2 to %3"),output:"string",inputs:{STRING:{type:"string",defaultValue:"arduino"},FROM:{type:"integer",defaultValue:5},TO:{type:"integer",defaultValue:7}},ino(t){let e=this.getAdjusted(t,"FROM",this.ORDER_NONE),i=this.valueToCode(t,"TO",this.ORDER_NONE);return[`${this.valueToCode(t,"STRING",this.ORDER_NONE)}.substring(${e}, ${i})`,this.ORDER_FUNCTION_CALL]}},{id:"with",text:c("arduino.blocks.textWith","%1 %2 with %3 ?"),output:"boolean",inputs:{STRING1:{type:"string",defaultValue:"arduino"},WITH:{type:"string",menu:[[c("arduino.blocks.textStartsWith","starts"),"START"],[c("arduino.blocks.textEndsWith","ends"),"END"]]},STRING2:{type:"string",defaultValue:"a"}},ino(t){let e=this.valueToCode(t,"STRING1",this.ORDER_NONE),i=this.valueToCode(t,"STRING2",this.ORDER_NONE),o=t.getFieldValue("WITH")||"START";return[`${e}.${o.toLowerCase()}sWith(${i})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"case",text:c("arduino.blocks.textCase","get %1 case of %2"),inputs:{WITH:{menu:[[c("arduino.blocks.textLowerCase","lower"),"LOWER"],[c("arduino.blocks.textUpperCase","upper"),"UPPER"]]},STRING:{type:"string",defaultValue:"Arduino"}},ino(t){let e=t.getFieldValue("WITH")||"LOWER";return`${this.valueToCode(t,"STRING",this.ORDER_NONE)}.${e.toLowerCase()}Case();
`}},{id:"trim",text:c("arduino.blocks.textTrim","remove %1 leading and trailing whitespace"),inputs:{STRING:{type:"string",defaultValue:"arduino"}},ino(t){return`${this.valueToCode(t,"STRING",this.ORDER_NONE)}.trim();
`}},"---",{id:"convert",text:c("arduino.blocks.textConvert","convert %1 to %2"),output:!0,inputs:{STRING:{type:"string",defaultValue:"a"},TYPE:{menu:["int","float","char array","byte array"]}},ino(t){let e=this.valueToCode(t,"STRING",this.ORDER_NONE),i=t.getFieldValue("TYPE")||"int",o=`String(${e})`;if(i==="int")o+=".toInt()";else if(i==="float")o+=".toFloat()";else if(i==="char array")o+=".toCharArray()";else if(i==="byte array")o+=".getBytes()";return[o,this.ORDER_FUNCTION_CALL]}},{id:"convert_from",text:c("arduino.blocks.textConvertFrom","convert %1 to String"),output:!0,inputs:{NUM:{type:"number",defaultValue:1}},ino(t){return[`String(${this.valueToCode(t,"NUM",this.ORDER_NONE)})`,this.ORDER_FUNCTION_CALL]}}]});import{translate as R,themeColors as U}from"@blockcode/core";import{ScratchBlocks as je}from"@blockcode/blocks";var ut=()=>({id:"serial",name:R("arduino.blocks.serial","Serial"),themeColor:U.blocks.sounds.primary,inputColor:U.blocks.sounds.secondary,otherColor:U.blocks.sounds.tertiary,order:2,blocks:[{id:"baudrate",text:R("arduino.blocks.serialBaudrate","set baudrate to %1"),inputs:{BAUDRATE:{menu:{inputMode:!0,defaultValue:"115200",items:["4800","9600","38400","57600","115200"]}}},ino(t){return`Serial.begin(${this.valueToCode(t,"BAUDRATE",this.ORDER_NONE)});
`}},{id:"timeout",text:R("arduino.blocks.serialTimeout","set timeout to %1 milliseconds"),inputs:{TIMEOUT:{type:"integer",defaultValue:1000}},ino(t){return`Serial.setTimeout(${this.valueToCode(t,"TIMEOUT",this.ORDER_NONE)});
`}},"---",{id:"print",text:R("arduino.blocks.serialPrint","print %1 with %2"),inputs:{STRING:{type:"string",defaultValue:"hello"},MODE:{menu:[[R("arduino.blocks.serialPrintWarp","warp"),"WARP"],[R("arduino.blocks.serialPrintNoWarp","no-warp"),"NOWARP"],[R("arduino.blocks.serialPrintHEX","hex"),"HEX"]]}},ino(t){let e=this.valueToCode(t,"STRING",this.ORDER_NONE),i=t.getFieldValue("MODE")||"WARP",o="Serial";if(i==="WARP")o+=`.println(${e});
`;else if(i==="NOWARP")o+=`.print(${e});
`;else if(i==="HEX")o+=`.print(${e}, HEX);
`;return o}},{id:"print_number",text:R("arduino.blocks.serialPrintNumber","print %1"),inputs:{NUM:{type:"number",defaultValue:0}},ino(t){return`Serial.println(${this.valueToCode(t,"NUM",this.ORDER_NONE)});
`}},"---",{id:"available",text:R("arduino.blocks.serialAvailable","available data?"),output:"boolean",ino(t){return["(Serial.available() > 0)",this.ORDER_RELATIONAL]}},{id:"available_length",text:R("arduino.blocks.serialAvailableLength","available data length"),output:"number",ino(t){return["Serial.available()",this.ORDER_FUNCTION_CALL]}},"---",{id:"read_string",text:R("arduino.blocks.serialReadString","read a string"),output:"string",ino(t){return["Serial.readString()",this.ORDER_FUNCTION_CALL]}},{id:"read_string_until",text:R("arduino.blocks.serialReadStringUntil","read a string until %1"),output:"string",inputs:{CHAR:{type:"string",defaultValue:"a"}},ino(t){return[`Serial.readStringUntil(${this.valueToCode(t,"CHAR",this.ORDER_NONE)})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"read_parse",text:R("arduino.blocks.serialReadParse","read a %1 number"),output:"number",inputs:{TYPE:{menu:[[R("arduino.blocks.serialReadParseInteger","int"),"INT"],[R("arduino.blocks.serialReadParseFloat","float"),"FLOAT"]]}},ino(t){let e=t.getFieldValue("TYPE")||"INT",i="Serial";if(e==="INT")i+=`.parseInt()
`;else if(e==="FLOAT")i+=`.parseFloat()
`;return[i,this.ORDER_FUNCTION_CALL]}},"---",{id:"read",text:R("arduino.blocks.serialRead","read a byte"),output:!0,ino(t){return["Serial.readBytes(1)",this.ORDER_FUNCTION_CALL]}},{id:"read_bytes",text:R("arduino.blocks.serialReadBytes","read %1 bytes"),output:!0,inputs:{LEN:{type:"integer",defaultValue:2}},ino(t){return[`Serial.readBytes(${this.valueToCode(t,"LEN",this.ORDER_NONE)})`,this.ORDER_FUNCTION_CALL]}}]});import{translate as b,themeColors as F}from"@blockcode/core";import{ScratchBlocks as lt}from"@blockcode/blocks";var dt=(t)=>{return lt.Blocks.event_whensetuploop={init(){this.jsonInit({message0:b("arduino.blocks.whensetup","when Arduino setup"),message1:"%1",message2:lt.Msg.CONTROL_FOREVER,message3:"%1",message4:"%1",lastDummyAlign4:"RIGHT",args1:[{type:"input_statement",name:"SUBSTACK1"}],args3:[{type:"input_statement",name:"SUBSTACK2"}],args4:[{type:"field_image",src:"./assets/blocks-media/repeat.svg",width:24,height:24,alt:"*",flip_rtl:!0}],category:"event",extensions:["colours_event"]}),this.setPreviousStatement(!1),this.setNextStatement(!1)}},{id:"event",name:"%{BKY_CATEGORY_EVENTS}",themeColor:F.blocks.events.primary,inputColor:F.blocks.events.secondary,otherColor:F.blocks.events.tertiary,blocks:[{label:b("arduino.blocks.classicEventsLabel","Classic events turned on from Edit."),hidden:t},{id:"whensetuploop",custom:!0,hidden:!t,ino(e){let i=this.statementToCode(e,"SUBSTACK1")||"";this.setup_+=i;let o=this.statementToCode(e,"SUBSTACK2")||"";this.loop_+=o}},"---",{id:"whensetup",text:b("arduino.blocks.whensetup","when Arduino setup"),hat:!0,ino(e){let i=this.statementToCode(e)||"";this.setup_+=i}},{id:"whenloop",text:b("arduino.blocks.whenloop","when Arduino loop"),hat:!0,ino(e){let i=this.statementToCode(e)||"";this.loop_+=i}},"---",{id:"whentimer",text:b("arduino.blocks.whentimer","when timer per %1 milliseconds"),hat:!0,inputs:{TIME:{type:"integer",defaultValue:500}},ino(e){this.definitions_.include_mstimer2="#include <MsTimer2.h>";let i=this.valueToCode(e,"TIME",this.ORDER_NONE)||500,o=`msTimer_${i}`,n=this.statementToCode(e)||"";this.definitions_[`declare_${o}`]=`void ${o}();`,this.definitions_[o]=`void ${o}() {
${n}}`;let a=this.INDENT+`MsTimer2::set(${i}, ${o});
`;this.setup_=a+this.setup_}},{id:"timeron",text:b("arduino.blocks.timeron","start timer"),ino(e){return this.definitions_.include_mstimer2="#include <MsTimer2.h>",`MsTimer2::start();
`}},{id:"timeroff",text:b("arduino.blocks.timeroff","stop timer"),ino(e){return this.definitions_.include_mstimer2="#include <MsTimer2.h>",`MsTimer2::stop();
`}}]}};import{translate as T,themeColors as G}from"@blockcode/core";import{ScratchBlocks as k}from"@blockcode/blocks";var Rt=()=>({id:"control",name:"%{BKY_CATEGORY_CONTROL}",themeColor:G.blocks.control.primary,inputColor:G.blocks.control.secondary,otherColor:G.blocks.control.tertiary,blocks:[{id:"wait",text:T("arduino.blocks.wait","wait %1 milliseconds"),inputs:{MS:{type:"integer",defaultValue:500}},ino(t){return`delay(${this.valueToCode(t,"MS",this.ORDER_NONE)});
`}},"---",{id:"repeat",text:k.Msg.CONTROL_REPEAT,repeat:!0,inputs:{TIMES:{type:"integer",defaultValue:10}},ino(t){let e=this.valueToCode(t,"TIMES",this.ORDER_NONE),i=this.statementToCode(t,"SUBSTACK");i=this.addLoopTrap(i,t.id);let o="",n=this.getLoopName();return o+=`for (int ${n} = 0; ${n} < ${e}; ${n}++) {
`,o+=i,o+=`}
`,o}},{id:"forever",text:k.Msg.CONTROL_FOREVER,repeat:!0,end:!0,ino(t){let e=this.statementToCode(t,"SUBSTACK");e=this.addLoopTrap(e,t.id);let i="";return i+=`while (true) {
`,i+=e,i+=`}
`,i}},"---",{id:"if",text:k.Msg.CONTROL_IF,substack:!0,inputs:{CONDITION:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"CONDITION",this.ORDER_NONE)||"false",i=this.statementToCode(t,"SUBSTACK"),o="";return o+=`if (${e}) {
`,o+=i,o+=`}
`,o}},{id:"elseif",text:T("arduino.blocks.elseif","else if %1 then"),substack:!0,inputs:{CONDITION:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"CONDITION",this.ORDER_NONE)||"false",i=this.statementToCode(t,"SUBSTACK"),o="";return o+=`else if (${e}) {
`,o+=i,o+=`}
`,o}},{id:"else",text:T("arduino.blocks.else","else"),substack:!0,ino(t){let e=this.statementToCode(t,"SUBSTACK"),i="";return i+=`else {
`,i+=e,i+=`}
`,i}},"---",{id:"repeat_until",text:k.Msg.CONTROL_REPEATUNTIL,repeat:!0,inputs:{CONDITION:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"CONDITION",this.ORDER_NONE)||"true",i=this.statementToCode(t,"SUBSTACK");i=this.addLoopTrap(i,t.id);let o="";return o+=`while (!(${e})) {
`,o+=i,o+=`}
`,o}},{id:"while",text:k.Msg.CONTROL_WHILE,repeat:!0,inputs:{CONDITION:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"CONDITION",this.ORDER_NONE)||"true",i=this.statementToCode(t,"SUBSTACK");i=this.addLoopTrap(i,t.id);let o="";return o+=`while ((${e})) {
`,o+=i,o+=`}
`,o}},{id:"continue",text:T("arduino.blocks.continue","continue"),end:!0,ino(t){let e="";return e+=`continue;
`,e}},{id:"break",text:T("arduino.blocks.break","break"),end:!0,ino(t){let e="";return e+=`break;
`,e}},"---",{id:"runtime",text:T("arduino.blocks.runtime","run time %1"),output:"number",inputs:{UNIT:{menu:[[T("arduino.blocks.runtimeMilliseconds","milliseconds"),"MS"],[T("arduino.blocks.runtimeSeconds","seconds"),"SEC"]]}},ino(t){return`(millis()${t.getFieldValue("UNIT")==="SEC"?"/1000":""})`}}]});import{translate as Ft,themeColors as w}from"@blockcode/core";import{ScratchBlocks as li}from"@blockcode/blocks";var Ot=()=>({id:"protocol",name:Ft("arduino.blocks.protocols","Protocols"),themeColor:w.blocks.sensing.primary,inputColor:w.blocks.sensing.secondary,otherColor:w.blocks.sensing.tertiary,order:5,blocks:[]});import{translate as _,themeColors as H}from"@blockcode/core";import{ScratchBlocks as l}from"@blockcode/blocks";var ct=()=>({id:"operator",name:"%{BKY_CATEGORY_OPERATORS}",themeColor:H.blocks.operators.primary,inputColor:H.blocks.operators.secondary,otherColor:H.blocks.operators.tertiary,blocks:[{id:"calculate",text:"%1 %2 %3",output:"number",inputs:{NUM1:{type:"number",defaultValue:0},SYMBOL:{menu:[["+","+"],["-","-"],["×","*"],["÷","/"]]},NUM2:{type:"number",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE),o=t.getFieldValue("SYMBOL")||"+",n={"+":this.ORDER_ADDITION,"-":this.ORDER_SUBTRACTION,"*":this.ORDER_MULTIPLICATION,"/":this.ORDER_DIVISION};return[`(${e} ${o} ${i})`,n[o]]}},"---",{id:"random",text:l.Msg.OPERATORS_RANDOM,output:"number",inputs:{FROM:{type:"integer",defaultValue:1},TO:{type:"integer",defaultValue:10}},ino(t){let e=this.valueToCode(t,"FROM",this.ORDER_NONE),i=this.valueToCode(t,"TO",this.ORDER_NONE);return[`random(${e}, ${i})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"compare",text:"%1 %2 %3",output:"boolean",inputs:{NUM1:{type:"number",defaultValue:0},SYMBOL:{menu:[[">",">"],["<","<"],["=","=="],["≥",">="],["≤","<="],["≠","!="]]},NUM2:{type:"number",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE),o=t.getFieldValue("SYMBOL")||">",n={">":this.ORDER_RELATIONAL,"<":this.ORDER_RELATIONAL,"==":this.ORDER_EQUALITY,">=":this.ORDER_RELATIONAL,"<=":this.ORDER_RELATIONAL,"!=":this.ORDER_EQUALITY};return[`(${e} ${o} ${i})`,n[o]]}},"---",{id:"and",text:l.Msg.OPERATORS_AND,output:"boolean",inputs:{OPERAND1:{type:"boolean"},OPERAND2:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"OPERAND1",this.ORDER_NONE),i=this.valueToCode(t,"OPERAND2",this.ORDER_NONE);return[`(${e} && ${i})`,this.ORDER_LOGICAL_AND]}},{id:"or",text:l.Msg.OPERATORS_OR,output:"boolean",inputs:{OPERAND1:{type:"boolean"},OPERAND2:{type:"boolean"}},ino(t){let e=this.valueToCode(t,"OPERAND1",this.ORDER_NONE),i=this.valueToCode(t,"OPERAND2",this.ORDER_NONE);return[`(${e} || ${i})`,this.ORDER_LOGICAL_OR]}},{id:"not",text:l.Msg.OPERATORS_NOT,output:"boolean",inputs:{OPERAND:{type:"boolean"}},ino(t){return[`(!${this.valueToCode(t,"OPERAND",this.ORDER_NONE)})`,this.ORDER_LOGICAL_NOT]}},"---",{id:"bitwise",text:"%1 %2 %3",output:"number",inputs:{NUM1:{type:"integer",defaultValue:0},SYMBOL:{menu:[["&","&"],["|","|"],["^","^"],["<<","<<"],[">>",">>"]]},NUM2:{type:"integer",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE),o=t.getFieldValue("SYMBOL")||"&",n={"&":this.ORDER_BITWISE_AND,"|":this.ORDER_BITWISE_OR,"^":this.ORDER_BITWISE_XOR,"<<":this.ORDER_BITWISE_SHIFT,">>":this.ORDER_BITWISE_SHIFT};return[`(${e} ${o} ${i})`,n[o]]}},{id:"bitwise_not",text:"~ %1",output:"number",inputs:{NUM:{type:"integer",defaultValue:0}},ino(t){return[`(~${this.valueToCode(t,"NUM",this.ORDER_NONE)})`,this.ORDER_BITWISE_NOT]}},"---",{id:"larger",text:_("arduino.blocks.operatorLarger","larger of %1 and %2"),output:"number",inputs:{NUM1:{type:"number",defaultValue:0},NUM2:{type:"number",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE);return[`max(${e}, ${i})`,this.ORDER_FUNCTION_CALL]}},{id:"smaller",text:_("arduino.blocks.operatorSmaller","smaller of %1 and %2"),output:"number",inputs:{NUM1:{type:"number",defaultValue:0},NUM2:{type:"number",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE);return[`min(${e}, ${i})`,this.ORDER_FUNCTION_CALL]}},{id:"mod",text:l.Msg.OPERATORS_MOD,output:"number",inputs:{NUM1:{type:"integer",defaultValue:0},NUM2:{type:"integer",defaultValue:0}},ino(t){let e=this.valueToCode(t,"NUM1",this.ORDER_NONE),i=this.valueToCode(t,"NUM2",this.ORDER_NONE);return[`(${e} % ${i})`,this.ORDER_MODULUS]}},{id:"round",text:l.Msg.OPERATORS_ROUND,output:"number",inputs:{NUM:{type:"number",defaultValue:0}},ino(t){return[`round(${this.valueToCode(t,"NUM",this.ORDER_NONE)})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"mathop",text:l.Msg.MATHOP,output:"number",inputs:{OPERATOR:{menu:[[l.Msg.OPERATORS_MATHOP_ABS,"abs"],[l.Msg.OPERATORS_MATHOP_FLOOR,"floor"],[l.Msg.OPERATORS_MATHOP_CEILING,"ceiling"],[l.Msg.OPERATORS_MATHOP_SQRT,"sqrt"],[l.Msg.OPERATORS_MATHOP_SIN,"sin"],[l.Msg.OPERATORS_MATHOP_COS,"cos"],[l.Msg.OPERATORS_MATHOP_TAN,"tan"],[l.Msg.OPERATORS_MATHOP_ASIN,"asin"],[l.Msg.OPERATORS_MATHOP_ACOS,"acos"],[l.Msg.OPERATORS_MATHOP_ATAN,"atan"],[l.Msg.OPERATORS_MATHOP_LN,"log"],[l.Msg.OPERATORS_MATHOP_LOG,"log10"],[l.Msg.OPERATORS_MATHOP_EEXP,"exp"],[l.Msg.OPERATORS_MATHOP_10EXP,"pow10"]]},NUM:{type:"integer",defaultValue:0}},ino(t){let e=t.getFieldValue("OPERATOR")||"abs",i=this.valueToCode(t,"NUM",this.ORDER_NONE),o="";if(e==="pow10")o+=`pow(10, ${i})`;else o+=`${e}(${i})`;return[o,this.ORDER_FUNCTION_CALL]}},"---",{id:"convert",text:_("arduino.blocks.dataConvert","convert %1 to %2"),output:!0,inputs:{DATA:{type:"string",defaultValue:"3.1415"},TYPE:{menu:["int","float","String"]}},ino(t){let e=this.valueToCode(t,"DATA",this.ORDER_NONE),i=t.getFieldValue("TYPE")||"int",o=`String(${e})`;switch(i){case"int":o+=".toInt()";break;case"float":o+=".toFloat()";break;case"String":break}return[o,this.ORDER_FUNCTION_CALL]}},"---",{id:"sizeof",text:_("arduino.blocks.dataLengthOf","length of %1"),output:"number",inputs:{DATA:{type:"string",defaultValue:"arduino"}},ino(t){return[`strlen(${this.valueToCode(t,"DATA",this.ORDER_NONE)})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"constrain",text:_("arduino.blocks.dataConstrain","constrain %1 between %2 to %3"),output:"number",inputs:{DATA:{type:"integer",defaultValue:0},FROM:{type:"integer",defaultValue:0},TO:{type:"integer",defaultValue:255}},ino(t){let e=this.valueToCode(t,"DATA",this.ORDER_NONE),i=this.valueToCode(t,"FROM",this.ORDER_NONE),o=this.valueToCode(t,"TO",this.ORDER_NONE);return[`constrain(${e}, ${i}, ${o})`,this.ORDER_FUNCTION_CALL]}},{id:"map",text:_("arduino.blocks.dataMap","map %1 from %2 - %3 to %4 - %5"),output:"number",inputs:{DATA:{type:"integer",defaultValue:0},FROMLOW:{type:"integer",defaultValue:0},FROMHIGH:{type:"integer",defaultValue:1023},TOLOW:{type:"integer",defaultValue:0},TOHIGHT:{type:"integer",defaultValue:255}},ino(t){let e=this.valueToCode(t,"DATA",this.ORDER_NONE),i=this.valueToCode(t,"FROMLOW",this.ORDER_NONE),o=this.valueToCode(t,"FROMHIGH",this.ORDER_NONE),n=this.valueToCode(t,"TOLOW",this.ORDER_NONE),a=this.valueToCode(t,"TOHIGHT",this.ORDER_NONE);return[`map(${e}, ${i}, ${o}, ${n}, ${a})`,this.ORDER_FUNCTION_CALL]}}]});var W=["int","float","boolean","char","byte","String"],pt=()=>({id:"data",skipXML:!0,blocks:[{id:"setvariableto",ino(t){let e=t.getFieldValue("TYPE")||"int",i=this.getVariableName(t.getFieldValue("VARIABLE")),o=`${e} ${i};`;if(t.getRootBlock().type==="event_whensetup")return this.definitions_[`variable_${i}`]=o,"";return o+`
`}},{id:"changevariableby",ino(t){let e=this.getVariableName(t.getFieldValue("VARIABLE")),i=this.valueToCode(t,"VALUE",this.ORDER_NONE);return`${e} = ${i};
`}},{id:"variable",ino(t){return[this.getVariableName(t.getFieldValue("VARIABLE")),this.ORDER_ATOMIC]}},{id:"insertatlist",ino(t){let e=t.getFieldValue("TYPE")||"int",i="arr"+this.getVariableName(t.getFieldValue("LIST")),o=this.valueToCode(t,"INDEX",this.ORDER_NONE),n=`${e} ${i}[${o}];`;if(t.getRootBlock().type==="event_whensetup")return this.definitions_[`variable_${i}`]=n,"";return n+`
`}},{id:"replaceitemoflist",ino(t){let e="arr"+this.getVariableName(t.getFieldValue("LIST")),i=this.valueToCode(t,"ITEM",this.ORDER_NONE),o=this.valueToCode(t,"INDEX",this.ORDER_NONE);return`${e}[${o}] = ${i};
`}},{id:"listcontents",ino(t){return["arr"+this.getVariableName(t.getFieldValue("LIST")),this.ORDER_ATOMIC]}},{id:"itemoflist",ino(t){let e="arr"+this.getVariableName(t.getFieldValue("LIST")),i=this.valueToCode(t,"INDEX",this.ORDER_NONE);return[`${e}[${i}]`,this.ORDER_MEMBER]}},{id:"lengthoflist",ino(t){let e="arr"+this.getVariableName(t.getFieldValue("LIST"));return[`(sizeof(${e}) / sizeof(${e}[0]))`,this.ORDER_DIVIDE]}}]});import{ScratchBlocks as Ni}from"@blockcode/blocks";var Gt={argument_reporter_string_number:"String",argument_reporter_boolean:"bool",argument_reporter_number:"float"},Et=0,wt=1,Ht=2,Wt=3,Bt={[Et]:"void",[wt]:"bool",[Ht]:"float",[Wt]:"String"},Nt=()=>({id:"procedures",skipXML:!0,blocks:[{id:"definition",ino(t){let e=t.childBlocks_[0],i=this.getFunctionName(e.getProcCode()),o=this.statementToCode(t),n=e.childBlocks_.map((u)=>`${Gt[u.type]} ${this.getVariableName(u.getFieldValue("VALUE"))}`),a=Bt[e.return_??Et];this.definitions_[`declare_${i}`]=`${a} ${i}();`;let s="";s+=`${i}(${n.join(", ")}) {
`,s+=o,s+="}",this.definitions_[i]=`${a} ${s}`}},{id:"call",ino(t){let e=this.getFunctionName(t.getProcCode()),i=t.argumentIds_.map((n)=>this.valueToCode(t,n,this.ORDER_NONE)||"false"),o=`${e}(${i.join(", ")})`;if(t.return_)return[o,this.ORDER_FUNCTION_CALL];return o+`;
`}},{id:"return",ino(t){return`return ${this.valueToCode(t,"VALUE",this.ORDER_NONE)};
`}},{id:"return_string",ino(t){return`return String(${this.valueToCode(t,"STR",this.ORDER_NONE)});
`}}]});import{ClangGenerator as Yt}from"@blockcode/blocks";var Xt=`/* Generate by BlockCode */
`;class x extends Yt{constructor(){super("INO")}init(t){super.init(t),this.definitions_.include_arduino="#include <Arduino.h>",this.setup_="",this.loop_="",this.onDefinitions?.()}finish(t){let e=[],i=[],o=[],n=[],a=[],s=[];for(let p in this.definitions_){let g=this.definitions_[p];if(p.match("include"))e.push(g);else if(p.match("declare"))i.push(g);else if(p.match("define"))o.push(g);else if(p.match("variable"))n.push(g);else if(p.match("setup"))s.push(g);else a.push(g)}let u="";if(e.length>0)u+=e.join(`
`)+`

`;if(i.length>0)u+=i.join(`
`)+`

`;if(o.length>0)u+=o.join(`
`)+`

`;if(n.length>0)u+=n.join(`
`)+`

`;if(s.length>0)this.setup_=this.INDENT+s.join(`
${this.INDENT}`)+`
${this.setup_}`;let E=`void setup() {
${this.setup_}}

void loop() {
${this.loop_}}

`+a.join(`

`);return delete this.definitions_,delete this.functionNames_,delete this.setup_,delete this.loop_,this.variableDB_.reset(),Xt+u.replace(/\n\n+/g,`

`)+t+E.replace(/\n\n+/g,`

`)}}function ht(t,e){let i=at(t),o=st(),n=ut(),a=dt(e),s=Rt(),u=Ot(),E=ct(),p=pt(),g=Nt();return[i,o,n,a,s,u,E,p,g]}import{Text as v}from"@blockcode/core";import{jsx as f}from"preact/jsx-runtime";var gt=[{tag:"controller",label:f(v,{id:"arduino.extension.tags.controllers",defaultMessage:"Controllers"})},{tag:"sensor",label:f(v,{id:"arduino.extension.tags.sensors",defaultMessage:"Sensors"})},{tag:"actuator",label:f(v,{id:"arduino.extension.tags.actuators",defaultMessage:"Actuators"})},{tag:"display",label:f(v,{id:"arduino.extension.tags.displays",defaultMessage:"Displays"})},{tag:"module",label:f(v,{id:"arduino.extension.tags.modules",defaultMessage:"Modules"})},{tag:"kit",label:f(v,{id:"arduino.extension.tags.kits",defaultMessage:"Kits"})}];import{jsx as Zt}from"preact/jsx-runtime";var Qt=new x,Jt=()=>["arduino"];function bt(){let{tabIndex:t}=Kt(),{meta:e}=qt(),i=Tt(()=>{return ht(e.value.boardType,e.value.classicEvents)},[e.value.boardType,e.value.classicEvents]),o=Tt((n,a,s,u)=>{for(let E in s)for(let p of s[E])if(p.header)a(`include_${E}_${p.name}`,`#include "${p.name}"`)},[]);return Zt(zt,{enableCodePreview:!0,enableProcedureReturns:!0,disableSensingBlocks:!0,extensionTags:gt,disableGenerateCode:t.value!==0,variableTypes:W,generator:Qt,onDefinitions:o,onBuildinExtensions:i,onExtensionsFilter:Jt})}function B(t){let e=globalThis.document,i=e.createElement("style");i.appendChild(e.createTextNode(t)),e.head.append(i)}B(".CNbKOG_device-icon{width:20px;height:20px}.CNbKOG_check-icon{margin-right:calc(var(--space)/2);visibility:hidden;width:14px}.CNbKOG_check-icon.CNbKOG_checked{visibility:visible}.CNbKOG_blank-check-item>div{padding-left:calc(14px + var(--space)/2)}");var N={deviceIcon:"CNbKOG_device-icon",blankCheckItem:"CNbKOG_blank-check-item",checked:"CNbKOG_checked",checkIcon:"CNbKOG_check-icon"};var Y="./assets/icon-device-sma7ahy6.png";import{jsx as te}from"preact/jsx-runtime";function mt(){return te("img",{className:N.deviceIcon,src:Y})}import{useProjectContext as ee,Text as M}from"@blockcode/core";import{jsx as I}from"preact/jsx-runtime";function _t(){let{meta:t}=ee();if(t.value.boardType===r.BLEUNO)return I(M,{id:"arduino.menubar.device.bleuno",defaultMessage:"BLE-UNO/NANO"});if(t.value.boardType===r.ArduinoUnoR4)return I(M,{id:"arduino.menubar.device.unoR4",defaultMessage:"Arduino Uno R4"});if(t.value.boardType===r.ArduinoNano)return I(M,{id:"arduino.menubar.device.nano",defaultMessage:"Arduino Nano"});return I(M,{id:"arduino.menubar.device.uno",defaultMessage:"Arduino Uno"})}import{useCallback as Q}from"preact/hooks";import{nanoid as j,classNames as Dt,sleepMs as ce}from"@blockcode/utils";import{useProjectContext as pe,setAlert as D,delAlert as Ee,openPromptModal as Ne}from"@blockcode/core";import{ArduinoUtils as J}from"@blockcode/board";import{xmlEscape as ie,Base64Utils as X}from"@blockcode/utils";var oe=window.electron?.compileOffline||!1,ne=oe?"http://localhost:18125/compile":"http://120.76.201.204:18125/compile",re={[r.ArduinoUno]:"arduino:avr:uno",[r.ArduinoNano]:"arduino:avr:nano",[r.BLEUNO]:"arduino:avr:uno",[r.BLENANO]:"arduino:avr:nano"},ae=new TextEncoder,se=(t)=>{if(t instanceof ArrayBuffer)return X.arrayBufferToBase64(t);else if(t instanceof Uint8Array)return X.arrayBufferToBase64(t.buffer);let e=ae.encode(t).buffer;return X.arrayBufferToBase64(e)};async function vt(t,e){let i={fqbn:re[t],sketch:e.map(({name:s,content:u})=>({name:s,content:se(u)})),resultType:"json"},o=JSON.stringify({json:JSON.stringify(i)}),a=await(await fetch(ne,{method:"POST",headers:{"Content-Type":"application/json"},body:o})).json();if(a?.success&&a?.hex)return atob(a.hex);else if(a?.status?.success&&a?.data?.hex)return atob(a.data.hex);else{let s=a?.message??a?.data?.details??"";throw s=ie(s),Error(s.trim())}}import{Spinner as he,Text as L,MenuSection as ge,MenuItem as Lt}from"@blockcode/core";import{useEffect as le,useCallback as de}from"preact/hooks";import{classNames as K}from"@blockcode/utils";import{useProjectContext as Re,setMeta as ft,Text as q,MenuSection as kt,MenuItem as z}from"@blockcode/core";var P="./assets/icon-check-5hn8sb1h.svg";import{jsx as m,jsxs as C,Fragment as Oe}from"preact/jsx-runtime";function Ct({itemClassName:t}){let{meta:e}=Re();le(()=>{if(!e.value.boardType)ft("boardType",r.ArduinoUno)},[]);let i=de((o)=>()=>{ft({boardType:o})},[]);return C(Oe,{children:[C(kt,{children:[C(z,{className:t,onClick:i(r.ArduinoUno),children:[m("img",{className:K(N.checkIcon,{[N.checked]:e.value.boardType===r.ArduinoUno}),src:P}),m(q,{id:"arduino.menubar.device.uno",defaultMessage:"Arduino Uno"})]}),C(z,{className:t,onClick:i(r.ArduinoNano),children:[m("img",{className:K(N.checkIcon,{[N.checked]:e.value.boardType===r.ArduinoNano}),src:P}),m(q,{id:"arduino.menubar.device.nano",defaultMessage:"Arduino Nano"})]})]}),m(kt,{children:C(z,{className:t,onClick:i(r.BLEUNO),children:[m("img",{className:K(N.checkIcon,{[N.checked]:e.value.boardType===r.BLEUNO}),src:P}),m(q,{id:"arduino.menubar.device.bleuno",defaultMessage:"BLE-UNO"})]})})]})}import{jsx as h,jsxs as At,Fragment as _e}from"preact/jsx-runtime";var O=null,tt=()=>{Ee(O),O=null},Te=()=>{if(!O)O=j();D("compiling",{id:O})},be=(t)=>{if(!O)O=j();D("compileError",{id:O,icon:null,button:{label:h(L,{id:"gui.alert.compileViewError",defaultMessage:"View Message"}),onClick(){Ne({title:h(L,{id:"gui.alert.compileError",defaultMessage:"Compilation Error"}),content:`<pre>${t}</pre>`})}},onClose:tt})},St=(t)=>{if(!O)O=j();if(t<100)D({id:O,icon:h(he,{level:"success"}),message:h(L,{id:"gui.alert.downloadingProgress",defaultMessage:"Downloading...{progress}%",progress:t})});else D("downloadCompleted",{id:O}),setTimeout(tt,2000)},Z=(t)=>{if(t==="NotFoundError")return;D("connectionError",1000)},me=async(t,e,i)=>{Te();let o;try{o=await vt(e,i)}catch(n){be(n.message)}if(!o){t.disconnect();return}St(0);try{await J.write(t,o,St),await ce(500)}catch(n){console.log(n),Z(n.name),tt()}finally{t.disconnect()}};function xt({itemClassName:t}){let{meta:e,file:i,assets:o}=pe(),n=Q((u)=>me(u,e.value.boardType,[].concat({name:"main.ino",content:i.value.content},o.value.map(({name:E,content:p})=>({name:E,content:p}))))),a=Q(async()=>{if(O)return;let u;try{u=await J.connect({baudRate:115200})}catch(E){Z(E.name)}if(!u)return;await n(u)},[]),s=Q(async()=>{if(O)return;let u;try{u=await J.connectBLE()}catch(E){Z(E.name)}if(!u)return;await n(u)},[]);return At(_e,{children:[At(ge,{children:[e.value.boardType===r.BLEUNO&&h(Lt,{disabled:O,className:Dt(t,N.blankCheckItem),label:h(L,{id:"arduino.menubar.device.downloadBle",defaultMessage:"Download program via Bluetooth (BLE)"}),onClick:s}),h(Lt,{disabled:O,className:Dt(t,N.blankCheckItem),label:h(L,{id:"arduino.menubar.device.download",defaultMessage:"Download program via Serial Port"}),onClick:a})]}),h(Ct,{itemClassName:t})]})}import{useEffect as ve,useCallback as fe}from"preact/hooks";import{useProjectContext as ke,setMeta as Mt,Text as It,MenuSection as Ce,MenuItem as De}from"@blockcode/core";import{jsx as V}from"preact/jsx-runtime";function Pt({itemClassName:t}){let{meta:e}=ke();ve(()=>{if(!e.value.classicEvents)Mt("classicEvents",!1)},[]);let i=fe(()=>{let o=!e.value.classicEvents;Mt({classicEvents:o})},[]);return V(Ce,{children:V(De,{className:t,onClick:i,children:e.value.classicEvents?V(It,{id:"arduino.menubar.edit.classicEventsClose",defaultMessage:"Turn off Old-style Event Blocks"}):V(It,{id:"arduino.menubar.edit.classicEventsOpen",defaultMessage:"Turn on Old-style Event Blocks"})})})}var Vt={files:[{id:"main",type:"text/x-c"}]};import{jsx as et}from"preact/jsx-runtime";var Ho={onNew(){return Vt},onSave(t,e,i){let o=[];return t=t.map((n)=>{return o.push(n.extensions),{id:n.id,type:n.type,xml:n.xml}}),{files:t,assets:e,meta:{extensions:Array.from(new Set(o.flat())),boardType:i.boardType??r.ArduinoUno,classicEvents:i.classicEvents??!1}}},async onThumb(){let t=S.getMainWorkspace();if(t){let e=t.getCanvas();if(e)return await Le(e,{})}},onUndo(t){if(t instanceof MouseEvent)S.getMainWorkspace()?.undo(!1)},onRedo(t){if(t instanceof MouseEvent)S.getMainWorkspace()?.undo(!0)},onEnableUndo(){let t=S.getMainWorkspace();return t?.undoStack_&&t.undoStack_.length!==0},onEnableRedo(){let t=S.getMainWorkspace();return t?.redoStack_&&t.redoStack_.length!==0},menuItems:[{id:"edit",Menu:Pt},{icon:et(mt,{}),label:et(_t,{}),Menu:xt}],tabs:[{...Se,Content:bt},{...xe,Content:()=>et(Ae,{onRegisterCompletionItems:rt})},{...Me,disabled:!0}]};export{Ho as default};
