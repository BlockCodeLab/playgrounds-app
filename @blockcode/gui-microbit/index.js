import{addLocalesMessages as D}from"@blockcode/core";var p={"microbit.menubar.device":"micro:bit","microbit.menubar.device.sync":"Sync blocks"};var u={"microbit.menubar.device":"micro:bit","microbit.menubar.device.sync":"同步脚本"};var g={"microbit.menubar.device":"micro:bit","microbit.menubar.device.sync":"同步腳本"};D({en:p,"zh-Hans":u,"zh-Hant":g});import{svgAsDataUri as $}from"@blockcode/utils";import{ScratchBlocks as i,MicroPythonGenerator as q,blocksTab as J,codeReviewTab as w1}from"@blockcode/blocks";import{Text as K}from"@blockcode/core";import{BlocksEditor as Q,CodeReview as A1}from"@blockcode/blocks";import{useAppContext as z}from"@blockcode/core";var M="./assets/icon-device-k1eg3dd5.svg";var s="./assets/icon-device-connected-3gcajtt2.svg";import{jsx as v}from"preact/jsx-runtime";function b(){let{appState:o}=z();return o.value?.device?v("img",{src:s}):v("img",{src:M})}import{useCallback as H}from"preact/hooks";import{nanoid as x}from"@blockcode/utils";import{useProjectContext as F,setAlert as c,delAlert as U,openPromptModal as L1}from"@blockcode/core";import{MPYUtils as C}from"@blockcode/board";import{Spinner as E,Text as w,MenuSection as _,MenuItem as G}from"@blockcode/core";import{jsx as n,Fragment as O}from"preact/jsx-runtime";var r=null,l=()=>{U(r),r=null},h=(o)=>{if(!r)r=x();if(o<100)c({id:r,icon:n(E,{level:"success"}),message:n(w,{id:"gui.alert.downloadingProgress",defaultMessage:"Downloading...{progress}%",progress:o})});else c("downloadCompleted",{id:r}),setTimeout(l,2000)},a=(o)=>{if(o==="NotFoundError")return;c("connectionError",1000)};function Z({itemClassName:o}){let{files:e,assets:d}=F(),f=H(async()=>{if(r)return;let t;try{t=await C.connect([])}catch(m){a(m.name)}if(!t)return;let P=C.check(t).catch(()=>{a(),l()}),I=[].concat(e.value,d.value);h(0);try{await C.write(t,I,h),t.hardReset()}catch(m){a(m.name)}l(),P.cancel()},[]);return n(O,{children:n(_,{children:n(G,{disabled:r,className:o,label:n(w,{id:"gui.menubar.device.download",defaultMessage:"Download program"}),onClick:f})})})}import{nanoid as R}from"@blockcode/utils";var y=R(),Y=`
from blocks import *
import ${y}
start()
`,A={assets:[{id:"main",type:"text/x-python",content:Y}],files:[{id:y,type:"text/x-python"}]};import{jsx as L}from"preact/jsx-runtime";var S=new q,V=()=>["device"],N1={onNew(){return A},onSave(o,e){let d=[];return o=o.map((t)=>{return d.push(t.extensions),{id:t.id,type:t.type,xml:t.xml}}),{meta:{extensions:Array.from(new Set(d.flat()))},files:o,assets:e}},async onThumb(){let o=i.getMainWorkspace();if(o){let e=o.getCanvas();if(e)return await $(e,{})}},onUndo(o){if(o instanceof MouseEvent)i.getMainWorkspace()?.undo(!1)},onRedo(o){if(o instanceof MouseEvent)i.getMainWorkspace()?.undo(!0)},onEnableUndo(){let o=i.getMainWorkspace();return o?.undoStack_&&o.undoStack_.length!==0},onEnableRedo(){let o=i.getMainWorkspace();return o?.redoStack_&&o.redoStack_.length!==0},menuItems:[{icon:L(b,{}),label:L(K,{id:"microbit.menubar.device",defaultMessage:"Device"}),Menu:Z}],tabs:[{...J,Content:()=>L(Q,{generator:S,onExtensionsFilter:V})}].concat([])};export{N1 as default};
