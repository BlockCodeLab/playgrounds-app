import{addLocalesMessages as q,Text as N}from"@blockcode/core";import{MathUtils as C}from"@blockcode/utils";var E=["GET","POST","PUT","PATCH","DELETE","HEAD","OPTIONS"];function u(n){return{get key(){return"request"},getOptions(e){let t=n.getData(e,"request.options");if(!t)t={headers:Object.create(null),params:Object.create(null),body:Object.create(null)};return t},async fetch(e,t,s){let{headers:a,params:l,body:c}=this.getOptions(e),i={method:E.includes(t)?t:"GET",headers:a};if(l)s+=`?${Object.entries(l).map(([d,b])=>`${encodeURIComponent(d)}=${encodeURIComponent(b)}`).join("&")}`;if(i.method!=="GET"&&i.method!=="HEAD"&&c)i.body=JSON.stringify(c);await fetch(`${s}`,i).then((d)=>{n.setData(e,"request.response",d),n.run("request.success")}).catch((d)=>{n.run("request.fails")}).finally(()=>{n.setData(e,"request.options",null)})},async getData(e){let t=n.getData(e,"request.response");if(t instanceof Response){t={text:await t.text(),json:{},status:t.status};try{t.json=JSON.parse(t.text)}catch(s){}n.setData(e,"request.response",t)}return t},async getText(e){return(await this.getData(e))?.text??""},async getJson(e,t){let s=await this.getData(e);if(!s?.json)return"";let a=s.json;t=`${t}`.split(".");for(let l of t)if(a=Array.isArray(a)?a.at(C.serialToIndex(l,a.length)):a[l],a!==0&&!a)return"";return a},getStatusCode(e){return n.getData(e,"request.response")?.status??0},setHeaders(e,t,s){let a=this.getOptions(e);a.headers[t]=s,n.setData(e,"request.options",a)},setParams(e,t,s){let a=this.getOptions(e);a.params[t]=s,n.setData(e,"request.options",a)},setBody(e,t,s){let a=this.getOptions(e);a.body[t]=s,n.setData(e,"request.options",a)},clear(e){n.setData(e,"request.options",null),n.setData(e,"request.response",null)}}}import{Text as r}from"@blockcode/core";import{jsx as o}from"preact/jsx-runtime";var f=(n)=>[{id:"request",text:o(r,{id:"blocks.request.request",defaultMessage:"request content [MOTHOD] to [URL]"}),inputs:{MOTHOD:{type:"string",defaultValue:"GET",menu:[["GET","GET"],["POST","POST"],["PUT","PUT"],["PATCH","PATCH"],["DELETE","DELETE"],["HEAD","HEAD"],["OPTIONS","OPTIONS"]]},URL:{type:"string",defaultValue:"https://make.blockcode.fun/hello.txt"}},mpy(e){let t=this.quote_(e.getFieldValue("MOTHOD"))||'"GET"',s=this.valueToCode(e,"URL",this.ORDER_NONE)||'""',a="";if(a+=`await request.fetch(str(${t}), str(${s})`,n.editor==="@blockcode/gui-arcade")a+=', lambda: runtime.fire("REQUEST_SUCCESS"), lambda: runtime.fire("REQUEST_FAILS")';return a+=`)
`,a},emu(e){let t=this.quote_(e.getFieldValue("MOTHOD"))||'"GET"',s=this.valueToCode(e,"URL",this.ORDER_NONE)||'""';return`await runtime.extensions.request.fetch(target, ${t}, ${s});
`}},"---",{id:"clear_cache",text:o(r,{id:"blocks.request.clearCache",defaultMessage:"clear request cache"}),mpy(e){return`request.clear_cache()
`},emu(e){return`runtime.extensions.request.clear(target);
`}},"---",{id:"get_content",text:o(r,{id:"blocks.request.getContent",defaultMessage:"item [PATH] of responded JSON data"}),inputs:{PATH:{type:"string",defaultValue:"path.2.item"}},output:"string",mpy(e){return[`request.get_content(${this.valueToCode(e,"PATH",this.ORDER_NONE)||'""'})`,this.ORDER_FUNCTION_CALL]},emu(e){return[`(await runtime.extensions.request.getJson(target, ${this.valueToCode(e,"PATH",this.ORDER_NONE)||'""'}))`,this.ORDER_FUNCTION_CALL]}},{id:"get_text",text:o(r,{id:"blocks.request.getText",defaultMessage:"text content"}),output:"string",mpy(e){return["request.get_text()",this.ORDER_FUNCTION_CALL]},emu(e){return["(await runtime.extensions.request.getText(target))",this.ORDER_FUNCTION_CALL]}},"---",{id:"when_responds",text:o(r,{id:"blocks.request.whenResponds",defaultMessage:"when a site responds"}),hat:!0,mpy(e){let t=this.statementToCode(e);t=this.addEventTrap(t,e.id),t=t.replace(`():
`,`(target):
`);let s="";return s+=`@when(request.REQUEST_SUCCESS, target)
`,s+=t,s},emu(e){let t=this.statementToCode(e);return t=this.addEventTrap(t,e.id),t=t.replace(`(done) => {
`,`(target, done) => {
`),`runtime.when('request.success', ${t}, target);
`}},{id:"when_fails",text:o(r,{id:"blocks.request.whenFails",defaultMessage:"when a request fails"}),hat:!0,mpy(e){let t=this.statementToCode(e);t=this.addEventTrap(t,e.id),t=t.replace(`():
`,`(target):
`);let s="";return s+=`@when(request.REQUEST_FAILS, target)
`,s+=t,s},emu(e){let t=this.statementToCode(e);return t=this.addEventTrap(t,e.id),t=t.replace(`(done) => {
`,`(target, done) => {
`),`runtime.when('request.fails', ${t}, target);
`}},{id:"status_code",text:o(r,{id:"blocks.request.statusCode",defaultMessage:"status code"}),output:"number",mpy(e){return["(request.response.status if request.response else 0)",this.ORDER_FUNCTION_CALL]},emu(e){return["runtime.extensions.request.getStatusCode(target)",this.ORDER_FUNCTION_CALL]}},{id:"is_responds",text:o(r,{id:"blocks.request.isResponds",defaultMessage:"site responds?"}),output:"boolean",mpy(e){return["bool(request.response)",this.ORDER_FUNCTION_CALL]},emu(e){return["Boolean(runtime.extensions.request.getStatusCode(target))",this.ORDER_FUNCTION_CALL]}},"---",{id:"set_content_type",text:o(r,{id:"blocks.request.setContentType",defaultMessage:"set content type to [CONTENTTYPE]"}),inputs:{CONTENTTYPE:{type:"string",defaultValue:"text/plain",menu:[["application/json","application/json"],["text/plain","text/plain"]]}},mpy(e){return`request.set_header('Content-Type', str(${this.quote_(e.getFieldValue("CONTENTTYPE")||"text/plain")}))
`},emu(e){return`runtime.extensions.request.setHeaders(target, 'Content-Type', ${this.quote_(e.getFieldValue("CONTENTTYPE"))||'"text/plain"'});
`}},{id:"set_header",text:o(r,{id:"blocks.request.setHeader",defaultMessage:"set headers [HEADER] to [VALUE]"}),inputs:{HEADER:{type:"string",defaultValue:"Content-Type"},VALUE:{type:"string",defaultValue:"text/plain"}},mpy(e){let t=this.valueToCode(e,"HEADER",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`request.set_header(str(${t}), str(${s}))
`},emu(e){let t=this.valueToCode(e,"HEADER",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`runtime.extensions.request.setHeaders(target, ${key}, ${s});
`}},{id:"set_param",text:o(r,{id:"blocks.request.setParam",defaultMessage:"set param [KEY] to [VALUE]"}),inputs:{KEY:{type:"string",defaultValue:o(r,{id:"blocks.request.key",defaultMessage:"key"})},VALUE:{type:"string",defaultValue:o(r,{id:"blocks.request.value",defaultMessage:"value"})}},mpy(e){let t=this.valueToCode(e,"KEY",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`request.set_param(str(${t}), str(${s}))
`},emu(e){let t=this.valueToCode(e,"KEY",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`runtime.extensions.request.setParams(target, ${t}, ${s});
`}},{id:"set_body",text:o(r,{id:"blocks.request.setBody",defaultMessage:"set body [KEY] to [VALUE]"}),inputs:{KEY:{type:"string",defaultValue:o(r,{id:"blocks.request.key",defaultMessage:"key"})},VALUE:{type:"string",defaultValue:o(r,{id:"blocks.request.value",defaultMessage:"value"})}},mpy(e){let t=this.valueToCode(e,"KEY",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`request.set_body(str(${t}), str(${s}))
`},emu(e){let t=this.valueToCode(e,"KEY",this.ORDER_NONE)||'""',s=this.valueToCode(e,"VALUE",this.ORDER_NONE)||'""';return`runtime.extensions.request.setBody(target, ${t}, ${s});
`}}];var p="./assets/request-594ef3q8.py";var h="./assets/aiohttp-0qva3nva.py";var _="./assets/aiohttp_ws-cykkq64e.py";var m={en:{"blocks.request.name":"HTTP Request","blocks.request.request":"send [MOTHOD] request to [URL]","blocks.request.getText":"text content","blocks.request.getContent":"item [PATH] of responded JSON data","blocks.request.clearCache":"clear request cache","blocks.request.whenResponds":"when a site responded","blocks.request.whenFails":"when a request fails","blocks.request.statusCode":"status code","blocks.request.isResponds":"is responded?","blocks.request.setHeader":"set headers [HEADER] to [VALUE]","blocks.request.setContentType":"set content type to [CONTENTTYPE]","blocks.request.setParam":"set param [KEY] to [VALUE]","blocks.request.setBody":"set body [KEY] to [VALUE]","blocks.request.key":"key","blocks.request.value":"value"},"zh-Hans":{"blocks.request.name":"HTTP 请求","blocks.request.request":"用 [MOTHOD] 方法从 [URL] 请求数据","blocks.request.getText":"文本内容","blocks.request.getContent":"JSON 数据路径 [PATH] 的项","blocks.request.clearCache":"清除请求应答缓存","blocks.request.whenResponds":"当网站有应答","blocks.request.whenFails":"当请求失败","blocks.request.statusCode":"应答状态码","blocks.request.isResponds":"网站有应答？","blocks.request.setHeader":"将标头 [HEADER] 设为 [VALUE]","blocks.request.setContentType":"将内容类型设为 [CONTENTTYPE]","blocks.request.setParam":"将请求参数 [KEY] 设为 [VALUE]","blocks.request.setBody":"将提交数据 [KEY] 设为 [VALUE]","blocks.request.key":"键","blocks.request.value":"值"},"zh-Hant":{"blocks.request.name":"HTTP 請求","blocks.request.request":"用 [MOTHOD] 方法從 [URL] 請求數據","blocks.request.getText":"文本內容","blocks.request.getContent":"JSON 數據路徑 [PATH] 的項","blocks.request.clearCache":"清除請求應答緩存","blocks.request.whenResponds":"當網站有應答","blocks.request.whenFails":"當請求失敗","blocks.request.statusCode":"應答狀態碼","blocks.request.isResponds":"網站有應答？","blocks.request.setHeader":"將標頭 [HEADER] 信息設為 [VALUE]","blocks.request.setContentType":"將內容類型設為 [CONTENTTYPE]","blocks.request.setParam":"將請求參數項 [KEY] 設為 [VALUE]","blocks.request.setBody":"將請求數據項 [KEY] 設為 [VALUE]","blocks.request.key":"鍵","blocks.request.value":"值"}};var y="./assets/icon-hvra75p0.svg";import{jsx as L}from"preact/jsx-runtime";q(m);var W={icon:y,name:L(N,{id:"blocks.request.name",defaultMessage:"Request"}),files:[{name:"request",type:"text/x-python",uri:p},{name:"_aiohttp/__init__",type:"text/x-python",uri:h},{name:"_aiohttp/aiohttp_ws",type:"text/x-python",uri:_}],emulator:u,blocks:f};export{W as default};
