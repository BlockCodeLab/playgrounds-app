import{addLocalesMessages as V}from"@blockcode/core";var d={"esp32.menubar.device":"Device","esp32.menubar.device.connect":"Connect","esp32.menubar.device.disconnect":"Disconnect","esp32.menubar.device.sync":"Sync blocks"};var G={"esp32.menubar.device":"设备","esp32.menubar.device.connect":"连接","esp32.menubar.device.disconnect":"断开连接","esp32.menubar.device.sync":"同步脚本"};var M={"esp32.menubar.device":"設備","esp32.menubar.device.connect":"連接","esp32.menubar.device.disconnect":"斷開連接","esp32.menubar.device.sync":"同步腳本"};V({en:d,"zh-Hans":G,"zh-Hant":M});import{svgAsDataUri as w}from"@blockcode/utils";import{ScratchBlocks as v,MicroPythonGenerator as D,blocksTab as a,codeReviewTab as o}from"@blockcode/blocks";import{Text as c}from"@blockcode/core";import{BlocksEditor as k,CodeReview as A}from"@blockcode/blocks";import{useAppContext as F}from"@blockcode/core";var N="./assets/icon-device-9de6fxnz.svg";var O="./assets/icon-device-connected-3gcajtt2.svg";import{jsx as $}from"preact/jsx-runtime";function q(){let{appState:C}=F();return C.value?.device?$("img",{src:O}):$("img",{src:N})}import{nanoid as R}from"@blockcode/utils";import{useProjectContext as T,setAlert as y,delAlert as i,openPromptModal as U}from"@blockcode/core";import{MPYUtils as h}from"@blockcode/board";import{Spinner as B,Text as Z,MenuSection as P,MenuItem as I}from"@blockcode/core";import{jsx as n,Fragment as S}from"preact/jsx-runtime";var f=null,z=()=>{i(f),f=null},t=(C)=>{if(!f)f=R();if(C<100)y({id:f,icon:n(B,{level:"success"}),message:n(Z,{id:"blocks.alert.downloading",defaultMessage:"Downloading...{progress}%",progress:C})});else y("downloadCompleted",{id:f}),setTimeout(z,2000)},b=(C)=>{if(C==="NotFoundError")return;y("connectionError",1000)};function E({itemClassName:C}){let{key:m,files:g,assets:u}=T();return n(S,{children:n(P,{children:n(I,{disabled:f,className:C,label:n(Z,{id:"blocks.menu.device.download",defaultMessage:"Download program"}),onClick:async()=>{if(f)return;let L;try{L=await h.connect([])}catch(p){b(p.name)}if(!L)return;let Q=h.check(L).catch(()=>{b(),z()}),_=[].concat(g.value,u.value).map((p)=>({...p,id:p.id.startsWith("lib/")?p.id:`proj${m.value}/${p.id}`}));t(0);try{if(!await h.flashFree(L,_))U({title:n(Z,{id:"blocks.menu.device.name",defaultMessage:"Device"}),label:n(Z,{id:"blocks.downloadPrompt.flashOutSpace",defaultMessage:"The flash is running out of space."})});else await h.write(L,_,t),await h.config(L,{"latest-project":m}),L.hardReset()}catch(p){b(p.name)}z(),Q.cancel()}})})})}import{nanoid as Y}from"@blockcode/utils";var J=Y(),x=`
from blocks import *
import ${J}
start()
`,K={assets:[{id:"main",type:"text/x-python",content:x}],files:[{id:J,type:"text/x-python"}]};import{jsx as H}from"preact/jsx-runtime";var j=new D,s=()=>["mpy"],Q1={onNew(){return K},onSave(C,m){let g=[];return C=C.map((L)=>{return g.push(L.extensions),{id:L.id,type:L.type,xml:L.xml}}),{meta:{extensions:Array.from(new Set(g.flat()))},files:C,assets:m}},async onThumb(){let C=v.getMainWorkspace();if(C){let m=C.getCanvas();if(m)return await w(m,{})}},onUndo(C){if(C instanceof MouseEvent)v.getMainWorkspace()?.undo?.(!1)},onRedo(C){if(C instanceof MouseEvent)v.getMainWorkspace()?.undo?.(!0)},onEnableUndo(){let C=v.getMainWorkspace();return C?.undoStack_&&C.undoStack_.length!==0},onEnableRedo(){let C=v.getMainWorkspace();return C?.redoStack_&&C.redoStack_.length!==0},menuItems:[{icon:H(q,{}),label:H(c,{id:"esp32.menubar.device",defaultMessage:"Device"}),Menu:E}],tabs:[{...a,Content:()=>H(k,{disableMonitor:!0,generator:j,onExtensionsFilter:s})},{...o,Content:A}]};export{Q1 as default};
