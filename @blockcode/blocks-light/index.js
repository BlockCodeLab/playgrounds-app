import{addLocalesMessages as u,Text as e}from"@blockcode/core";var n={en:{"blocks.light.name":"Light","blocks.light.led":"set PIN [PIN] LED [STATE]","blocks.light.led.off":"off","blocks.light.led.on":"on","blocks.light.ledToggle":"toggle PIN [PIN] LED state","blocks.light.ledIsOn":"PIN [PIN] LED is on?","blocks.light.brightness":"PIN [PIN] ambient light brightness"},"zh-Hans":{"blocks.light.name":"灯光","blocks.light.led":"[STATE] 引脚 [PIN] 的 LED 灯","blocks.light.led.off":"关闭","blocks.light.led.on":"开启","blocks.light.ledToggle":"切换引脚 [PIN] 的 LED 灯状态","blocks.light.ledIsOn":"引脚 [PIN] 的 LED 灯开启？","blocks.light.brightness":"引脚 [PIN] 的环境光亮度"},"zh-Hant":{"blocks.light.name":"燈光","blocks.light.led":"[STATE] 引腳 [PIN] 的 LED 燈","blocks.light.led.off":"關閉","blocks.light.led.on":"開啟","blocks.light.ledToggle":"切換引腳 [PIN] 的 LED 燈狀態","blocks.light.ledIsOn":"引腳 [PIN] 的 LED 燈開啟？","blocks.light.brightness":"引腳 [PIN] 的環境光亮度"}};var s="./assets/icon-5ej94635.png";var g="./assets/light-t6ppwjh1.py";import{jsx as l}from"preact/jsx-runtime";u(n);var b={icon:s,name:l(e,{id:"blocks.light.name",defaultMessage:"Light"}),files:[{name:"light",type:"text/x-python",uri:g}],blocks:[{id:"setLED",text:l(e,{id:"blocks.light.led",defaultMessage:"set PIN [PIN] LED [STATE]"}),inputs:{PIN:{type:"integer",defaultValue:"1"},STATE:{inputMode:!0,type:"integer",defaultValue:"1",menu:[[l(e,{id:"blocks.light.led.on",defaultMessage:"on"}),"1"],[l(e,{id:"blocks.light.led.off",defaultMessage:"off"}),"0"]]}},mpy(t){let i=this.valueToCode(t,"PIN",this.ORDER_NONE)||"1",o=this.valueToCode(t,"STATE",this.ORDER_NONE)||"1";return`light.set_led(${i}, ${o})
`}},{id:"toggleLED",text:l(e,{id:"blocks.light.ledToggle",defaultMessage:"toggle PIN [PIN] LED"}),inputs:{PIN:{type:"integer",defaultValue:"1"}},mpy(t){return`light.toggle_led(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"7"})
`}},{id:"isLEDOn",text:l(e,{id:"blocks.light.ledIsOn",defaultMessage:"PIN [PIN] LED is on?"}),inputs:{PIN:{type:"integer",defaultValue:"1"}},output:"boolean",mpy(t){return[`light.is_led_on(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"7"})`,this.ORDER_FUNCTION_CALL]}},"---",{id:"getBrightness",text:l(e,{id:"blocks.light.brightness",defaultMessage:"PIN [PIN] ambient light brightness"}),inputs:{PIN:{type:"integer",defaultValue:"1"}},output:"number",mpy(t){return[`light.get_brightness(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"2"})`,this.ORDER_FUNCTION_CALL]}}]};export{b as default};
