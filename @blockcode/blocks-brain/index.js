import{getUserConfig as i,setUserConfig as C}from"@blockcode/utils";import{addLocalesMessages as v,openPromptModal as z,Text as r}from"@blockcode/core";import{fetchSpark as w,getUserConfig as d}from"@blockcode/utils";var _=4,R="https://spark-api-open.xf-yun.com/v1/chat/completions",c="qQIJHdBFkpbHDoMnPqnW:oeanHZdXCBHIHTOYvVim",O="db45f79e",N="MWFiNjVmNDA4YjNhODFkZGE0MGQ1YWRj",L="6a3dfe79b9e9ec588ca65bf3b9d9c847",g=(o=c)=>({"Content-Type":"application/json",Authorization:`Bearer ${o}`}),D=(o,e={})=>({model:e.model??"lite",user:e.user??"default",messages:o,temperature:0.4,top_k:3,max_tokens:70,stream:!1});function f(o){return{get key(){return"brain"},getHistory(e){return o.getData(e,"brain.history")??[]},addHistory(e,t){let a=this.getHistory(e);if(a.push(t),a.length>_)a.shift();o.setData(e,"brain.history",a)},getPrompts(e){return o.getData(e,"brain.prompts")??[]},addPrompt(e,t){let a=this.getPrompts(e);a.push(t),o.setData(e,"brain.prompts",a)},clear(e){o.setData(e,"brain.history",null),o.setData(e,"brain.prompts",null),o.setData(e,"brain.result",null)},getAnswer(e){return o.getData(e,"brain.result")??""},async askSpark(e,t,a="lite"){let b=d("SparkAI.APIPassword")||c,h=d("SparkAI.APPID")||O,A=d("SparkAI.APISecret")||N,T=d("SparkAI.APIKey")||L,S=e.id();this.addHistory(e,{role:"user",content:`${t}`});let M=this.getPrompts(e),y=[].concat({role:"system",content:`现在开始你的回答不能超过100字。${M.join("；")}。`},this.getHistory(e)),n;try{n=await w(R,{method:"POST",mode:"no-cors",headers:g(b),body:JSON.stringify(D(y,{model:a,user:S})),auth:{appId:h,apiSecret:A,apiKey:T}}),n=await n.json()}catch(E){console.error(E)}if(n?.choices?.[0]?.message?.content)this.addHistory(e,n.choices[0].message),o.setData(e,"brain.result",n.choices[0].message.content)}}}import{getUserConfig as u}from"@blockcode/utils";import{Text as l}from"@blockcode/core";import{jsx as p}from"preact/jsx-runtime";var P=[{id:"addPrompt",text:p(l,{id:"blocks.brain.addPrompt",defaultMessage:"add [PROMPT] prompt to Brain"}),inputs:{PROMPT:{type:"string",defaultValue:p(l,{id:"blocks.brain.prompt",defaultMessage:"your role is a cat"})}},emu(o){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,o);let t=this.valueToCode(o,"PROMPT",this.ORDER_NONE)||"";return e+=`runtime.extensions.brain.addPrompt(target, ${t});
`,e},mpy(o){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,o);let t=this.valueToCode(o,"PROMPT",this.ORDER_NONE)||"";return e+=`brain.set_prompt((target.id if 'target' in dir() else 'default'), ${t})
`,e}},{id:"askQuestion",text:p(l,{id:"blocks.brain.askQuestion",defaultMessage:"ask Brain [QUESTION] and wait"}),inputs:{QUESTION:{type:"string",defaultValue:p(l,{id:"blocks.brain.question",defaultMessage:"Who are you?"})}},emu(o){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,o);let t=this.valueToCode(o,"QUESTION",this.ORDER_NONE)||'""';return e+=`await runtime.extensions.brain.askSpark(target, ${t})
`,e},mpy(o){let e=u("SparkAI.Model")??"lite",t=u("SparkAI.APIPassword")??c,a="";if(this.STATEMENT_PREFIX)a+=this.injectId(this.STATEMENT_PREFIX,o);let b=this.valueToCode(o,"QUESTION",this.ORDER_NONE)||'""';return a+=`await brain.ask_spark((target.id if 'target' in dir() else 'default'), ${b}, '${t}', '${e}')
`,a}},{id:"answer",text:p(l,{id:"blocks.brain.answer",defaultMessage:"answer"}),output:"string",emu(){return["runtime.extensions.brain.getAnswer(target)",this.ORDER_FUNCTION_CALL]},mpy(){return["brain.get_answer(target.id if 'target' in dir() else 'default')",this.ORDER_FUNCTION_CALL]}},"---",{id:"clearPrompt",text:p(l,{id:"blocks.brain.clearHistory",defaultMessage:"delete all history"}),emu(o){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,o);return e+=`runtime.extensions.brain.clear(target);
`,e},mpy(o){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,o);return e+=`brain.clear(target.id if 'target' in dir() else 'default')
`,e}}];var k={en:{"blocks.brain.name":"Brain","blocks.brain.openplatform":"iFLYTEK Open Platform authorization","blocks.brain.openplatform.APIPassword":"HTTP authorization APIPassword","blocks.brain.openplatform.APPID":"WebSocket authorization APPID","blocks.brain.openplatform.APISecret":"WebSocket authorization APISecret","blocks.brain.openplatform.APIKey":"WebSocket authorization APIKey","blocks.brain.openplatform.description1":"Please register your own ","blocks.brain.openplatform.description2":"iFLYTEK Open Platform (Chinese)","blocks.brain.openplatform.description3":" account, the test account we provide does not guarantee that every request will be successful.","blocks.brain.addPrompt":"add prompt [PROMPT] to Brain","blocks.brain.prompt":"dialogue with the character of a cat","blocks.brain.clearHistory":"delete prompts and result","blocks.brain.askQuestion":"ask Brain [QUESTION] and wait","blocks.brain.question":"hello","blocks.brain.answer":"answer"},"zh-Hans":{"blocks.brain.name":"智脑","blocks.brain.openplatform":"讯飞开放平台认证信息","blocks.brain.openplatform.APIPassword":"HTTP 服务鉴权 APIPassword","blocks.brain.openplatform.APPID":"WebSocket 服务鉴权 APPID","blocks.brain.openplatform.APISecret":"WebSocket 服务鉴权 APISecret","blocks.brain.openplatform.APIKey":"WebSocket 服务鉴权 APIKey","blocks.brain.openplatform.description1":"请注册您自己的","blocks.brain.openplatform.description2":"讯飞开放平台","blocks.brain.openplatform.description3":"账号，我们提供的测试账号不保证每次请求都成功。","blocks.brain.addPrompt":"将指令说明 [PROMPT] 加入智脑","blocks.brain.prompt":"用一只猫的性格对话","blocks.brain.clearHistory":"删除指令和结果","blocks.brain.askQuestion":"询问智脑 [QUESTION] 并等待","blocks.brain.question":"你好","blocks.brain.answer":"回答"},"zh-Hant":{"blocks.brain.name":"智腦","blocks.brain.openplatform":"訊飛開放平台認證信息","blocks.brain.openplatform.APIPassword":"HTTP 服務鑒權 APIPassword","blocks.brain.openplatform.APPID":"WebSocket 服務鑒權 APPID","blocks.brain.openplatform.APISecret":"WebSocket 服務鑒權 APISecret","blocks.brain.openplatform.APIKey":"WebSocket 服務鑒權 APIKey","blocks.brain.openplatform.description1":"請註冊您自己的","blocks.brain.openplatform.description2":"訊飛開放平台","blocks.brain.openplatform.description3":"賬號，我們提供的測試賬號不保證每次請求都成功。","blocks.brain.addPrompt":"將指令說明 [PROMPT] 加入智腦","blocks.brain.prompt":"用一隻貓的性格對話","blocks.brain.clearHistory":"刪除指令和結果","blocks.brain.askQuestion":"詢問智腦 [QUESTION] 並等待","blocks.brain.question":"你好","blocks.brain.answer":"回答"}};var m="./assets/icon-xdp12efg.svg";var I="./assets/brain-ppde05f4.py";import{jsx as s,jsxs as H,Fragment as W}from"preact/jsx-runtime";v(k);var s1={icon:m,name:s(r,{id:"blocks.brain.name",defaultMessage:"Brain"}),files:[{name:"brain",type:"text/x-python",uri:I}],statusButton:{onClick(){return new Promise((o)=>{z({title:s(r,{id:"blocks.brain.name",defaultMessage:"Brain"}),label:s(r,{id:"blocks.brain.name",defaultMessage:"Brain"}),inputItems:[{name:"apipassword",label:s(r,{id:"blocks.brain.openplatform.APIPassword",defaultMessage:"HTTP authorization APIPassword"}),placeholder:"APIPassword",defaultValue:i("SparkAI.APIPassword")??""},{name:"appid",label:s(r,{id:"blocks.brain.openplatform.APPID",defaultMessage:"WebSocket authorization APPID"}),placeholder:"APPID",defaultValue:i("SparkAI.APPID")??""},{name:"apisecret",label:s(r,{id:"blocks.brain.openplatform.APISecret",defaultMessage:"WebSocket authorization APISecret"}),placeholder:"APISecret",defaultValue:i("SparkAI.APISecret")??""},{name:"apikey",label:s(r,{id:"blocks.brain.openplatform.APIKey",defaultMessage:"WebSocket authorization APIKey"}),placeholder:"APIKey",defaultValue:i("SparkAI.APIKey")??""}],body:H(W,{children:[s(r,{id:"blocks.brain.openplatform.description1",defaultMessage:"Please register your own "}),s("a",{href:"https://xinghuo.xfyun.cn/sparkapi",target:"_blank",children:s(r,{id:"blocks.brain.openplatform.description2",defaultMessage:"iFLYTEK Open Platform (Chinese)"})}),s(r,{id:"blocks.brain.openplatform.description3",defaultMessage:" account, the test account we provide does not guarantee that every request will be successful."})]}),onSubmit:(e)=>{C("SparkAI.APIPassword",e.apipassword??""),C("SparkAI.APPID",e.appid??""),C("SparkAI.APISecret",e.apisecret??""),C("SparkAI.APIKey",e.apikey??""),o()}})})},onStatusUpdate(){let o=i("SparkAI.APIPassword"),e=i("SparkAI.APPID"),t=i("SparkAI.APISecret"),a=i("SparkAI.APIKey");return o||e&&t&&a}},emulator:f,blocks:P};export{s1 as default};
