import{addLocalesMessages as _,Text as h}from"@blockcode/core";import{Text as d}from"@blockcode/core";import{jsx as l}from"preact/jsx-runtime";var c=[{id:"ledState",text:l(d,{id:"blocks.leds.ledState",defaultMessage:"pin [PIN] LED [STATE]"}),inputs:{PIN:{type:"integer",defaultValue:"1"},STATE:{menu:"LedStates"}},ino(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=this.valueToCode(e,"STATE",this.ORDER_NONE);return this.definitions_[`setup_pin_${t}`]=`pinMode(${t}, OUTPUT);`,`digitalWrite(${t}, ${i==1?"HIGH":"LOW"});
`},mpy(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=this.valueToCode(e,"STATE",this.ORDER_NONE),o=`pin_${t}`;return this.definitions_.import_pin="from machine import Pin",this.definitions_.import_pwm="from machine import PWM",this.definitions_[o]=`${o} = PWM(Pin(${t}), freq=1000)`,`${o}.duty(${i==1?1023:0})
`}},{id:"toggleLed",text:l(d,{id:"blocks.leds.toggleLed",defaultMessage:"toggle pin [PIN] LED state"}),inputs:{PIN:{type:"integer",defaultValue:"1"}},ino(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=this.valueToCode(e,"STATE",this.ORDER_NONE);return this.definitions_[`setup_pin_${t}`]=`pinMode(${t}, OUTPUT);`,`digitalWrite(${t}, digitalRead(${t}) ? LOW : HIGH);
`},mpy(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=`pin_${t}`;return this.definitions_.import_pin="from machine import Pin",this.definitions_.import_pwm="from machine import PWM",this.definitions_[i]=`${i} = PWM(Pin(${t}), freq=1000)`,`${i}.duty(0 if ${i}.duty() else 1023)
`}},{id:"brightness",text:l(d,{id:"blocks.leds.brightness",defaultMessage:"set pin [PIN] LED brightness [LEVEL]"}),inputs:{PIN:{type:"integer",defaultValue:"1"},LEVEL:{shadow:"brightnessLevel",defaultValue:"10"}},ino(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=this.valueToCode(e,"LEVEL",this.ORDER_NONE);return this.definitions_[`setup_pin_${t}`]=`pinMode(${t}, OUTPUT);`,`analogWrite(${t}, round(${i} * 12.75f));
`},mpy(e){let t=this.valueToCode(e,"PIN",this.ORDER_NONE),i=this.valueToCode(e,"LEVEL",this.ORDER_NONE),o=`pin_${t}`;return this.definitions_.import_pin="from machine import Pin",this.definitions_.import_pwm="from machine import PWM",this.definitions_[o]=`${o} = PWM(Pin(${t}), freq=1000)`,`${o}.duty(round(${i} * 51.15))
`}},{id:"brightnessLevel",shadow:!0,output:"number",inputs:{LEVEL:{type:"slider",defaultValue:0,min:0,max:20}},ino(e){return[e.getFieldValue("LEVEL")||0,this.ORDER_NONE]},mpy(e){return[e.getFieldValue("LEVEL")||0,this.ORDER_NONE]}},"---",{id:"trafficLedsInit",text:l(d,{id:"blocks.leds.trafficLeds.init",defaultMessage:"set traffic leds green pin [G] yellow pin [Y] red pin [R] "}),inputs:{G:{type:"integer",defaultValue:"1"},Y:{type:"integer",defaultValue:"2"},R:{type:"integer",defaultValue:"3"}},ino(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"Y",this.ORDER_NONE),o=this.valueToCode(e,"G",this.ORDER_NONE);this.definitions_[`setup_pin_${t}`]=`pinMode(${t}, OUTPUT);`,this.definitions_[`setup_pin_${i}`]=`pinMode(${i}, OUTPUT);`,this.definitions_[`setup_pin_${o}`]=`pinMode(${o}, OUTPUT);`;let s="";return s+=`void setTrafficLeds(bool g, bool y, bool r) {
`,s+=`  digitalWrite(${t}, r);
`,s+=`  digitalWrite(${i}, y);
`,s+=`  digitalWrite(${o}, g);
`,s+="}",this.definitions_.declare_setTrafficLeds="void setTrafficLeds(bool g, bool y, bool r);",this.definitions_.setTrafficLeds=s,""},mpy(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"Y",this.ORDER_NONE),o=this.valueToCode(e,"G",this.ORDER_NONE),s=`pin_${t}`,r=`pin_${i}`,a=`pin_${o}`;this.definitions_.import_pin="from machine import Pin",this.definitions_.import_pwm="from machine import PWM",this.definitions_[s]=`${s} = PWM(Pin(${t}), freq=1000)`,this.definitions_[r]=`${r} = PWM(Pin(${i}), freq=1000)`,this.definitions_[a]=`${a} = PWM(Pin(${o}), freq=1000)`;let n="";return n+=`def set_traffic_leds(g, y, r):
`,n+=`  ${s}.duty(1023 if r else 0)
`,n+=`  ${r}.duty(1023 if y else 0)
`,n+=`  ${a}.duty(1023 if g else 0)
`,this.definitions_.set_traffic_leds=n,""}},{id:"trafficLedsColor",text:l(d,{id:"blocks.leds.trafficLeds.color",defaultMessage:"set traffic leds [G] green [Y] yellow [R] red"}),inputs:{R:{menu:"LedStates"},Y:{menu:"LedStates"},G:{menu:"LedStates"}},ino(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"Y",this.ORDER_NONE),o=this.valueToCode(e,"G",this.ORDER_NONE),s="setTrafficLeds(";return s+=`${o==1?"HIGH":"LOW"}, `,s+=`${i==1?"HIGH":"LOW"}, `,s+=`${t==1?"HIGH":"LOW"});
`,s},mpy(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"Y",this.ORDER_NONE),o=this.valueToCode(e,"G",this.ORDER_NONE),s="set_traffic_leds(";return s+=`${o==1?"True":"False"}, `,s+=`${i==1?"True":"False"}, `,s+=`${t==1?"True":"False"})
`,s}},"---",{id:"rgbLedInit",text:l(d,{id:"blocks.leds.rgbLed.init",defaultMessage:"set RGB LED red pin [R] green pin[G] blue pin [B]"}),inputs:{R:{type:"integer",defaultValue:"1"},G:{type:"integer",defaultValue:"2"},B:{type:"integer",defaultValue:"3"}},ino(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"G",this.ORDER_NONE),o=this.valueToCode(e,"B",this.ORDER_NONE);this.definitions_[`setup_pin_${t}`]=`pinMode(${t}, OUTPUT);`,this.definitions_[`setup_pin_${i}`]=`pinMode(${i}, OUTPUT);`,this.definitions_[`setup_pin_${o}`]=`pinMode(${o}, OUTPUT);`;let s="";return s+=`void setRGBLed(int rgb[]) {
`,s+=`  analogWrite(${t}, rgb[0]);
`,s+=`  analogWrite(${i}, rgb[1]);
`,s+=`  analogWrite(${o}, rgb[2]);
`,s+="}",this.definitions_.declare_setRGBLed="void setRGBLed(int rgb[]);",this.definitions_.setRGBLed=s,""},mpy(e){let t=this.valueToCode(e,"R",this.ORDER_NONE),i=this.valueToCode(e,"G",this.ORDER_NONE),o=this.valueToCode(e,"B",this.ORDER_NONE),s=`pin_${t}`,r=`pin_${i}`,a=`pin_${o}`;this.definitions_.import_pin="from machine import Pin",this.definitions_.import_pwm="from machine import PWM",this.definitions_[s]=`${s} = PWM(Pin(${t}), freq=1000)`,this.definitions_[r]=`${r} = PWM(Pin(${i}), freq=1000)`,this.definitions_[a]=`${a} = PWM(Pin(${o}), freq=1000)`;let n="";return n+=`def set_rgb_led(rgb):
`,n+=`  ${s}.duty(round(rgb[0] / 255 * 1023))
`,n+=`  ${r}.duty(round(rgb[1] / 255 * 1023))
`,n+=`  ${a}.duty(round(rgb[2] / 255 * 1023))
`,this.definitions_.set_rgb_led=n,""}},{id:"rgbLedColor",text:l(d,{id:"blocks.leds.rgbLed.color",defaultMessage:"set RGB LED color [COLOR]"}),inputs:{COLOR:{type:"color"}},ino(e){return`{ int rgb[3]=${this.valueToCode(e,"COLOR",this.ORDER_NONE)}; setRGBLed(rgb); }
`},mpy(e){return`set_rgb_led(${this.valueToCode(e,"COLOR",this.ORDER_NONE)})
`}},{id:"rgbLedOff",text:l(d,{id:"blocks.leds.rgbLed.off",defaultMessage:"turn off RGB LED"}),ino(e){return`{ int rgb[3]={0}; setRGBLed(rgb); }
`},mpy(e){return`set_rgb_led((0,0,0))
`}}],f={LedStates:{type:"integer",inputMode:!0,defaultValue:"1",items:[[l(d,{id:"blocks.leds.state.on",defaultMessage:"on"}),"1"],[l(d,{id:"blocks.leds.state.off",defaultMessage:"off"}),"0"]]}};var p={en:{"blocks.leds.name":"LED","blocks.leds.ledState":"pin [PIN] LED [STATE]","blocks.leds.state.on":"on","blocks.leds.state.off":"off","blocks.leds.toggleLed":"toggle pin [PIN] LED state","blocks.leds.brightness":"set pin [PIN] LED brightness [LEVEL]","blocks.leds.trafficLeds.init":"set traffic leds red pin [R] yellow pin [Y] green pin [G]","blocks.leds.trafficLeds.color":"set traffic leds [R] red [Y] yellow [G] green","blocks.leds.rgbLed.init":"set RGB LED red pin [R] green pin[G] blue pin [B]","blocks.leds.rgbLed.color":"set RGB LED color [COLOR]","blocks.leds.rgbLed.off":"turn off RGB LED"},"zh-Hans":{"blocks.leds.name":"LED 灯","blocks.leds.ledState":"[STATE]引脚[PIN] LED 灯","blocks.leds.state.on":"开启","blocks.leds.state.off":"关闭","blocks.leds.toggleLed":"切换引脚[PIN] LED 灯状态","blocks.leds.brightness":"将引脚[PIN] LED 灯亮度设为[LEVEL]","blocks.leds.trafficLeds.init":"初始交通灯绿灯引脚[G]黄灯引脚[Y]红灯引脚[R]","blocks.leds.trafficLeds.color":"设置交通灯[G]绿灯[Y]黄灯[R]红灯","blocks.leds.rgbLed.init":"初始 RGB 灯红色引脚[R]绿色引脚[G]蓝色引脚[B]","blocks.leds.rgbLed.color":"将 RGB 灯颜色设为[COLOR]","blocks.leds.rgbLed.off":"关闭 RGB 灯"},"zh-Hant":{"blocks.leds.name":"LED 燈","blocks.leds.ledState":"[STATE]引腳[PIN] LED 燈","blocks.leds.state.on":"開啟","blocks.leds.state.off":"關閉","blocks.leds.toggleLed":"切換引腳[PIN] LED 燈狀態","blocks.leds.brightness":"將引腳[PIN] LED 燈亮度設為[LEVEL]","blocks.leds.trafficLeds.init":"初始交通燈紅燈引腳[R]黃燈引腳[Y]綠燈引腳[G]","blocks.leds.trafficLeds.color":"設置交通燈[R]紅燈[Y]黃燈[G]綠燈","blocks.leds.rgbLed.init":"初始 RGB 燈紅色引腳[R]綠色引腳[G]藍色引腳[B]","blocks.leds.rgbLed.color":"將 RGB 燈顏色設為[COLOR]","blocks.leds.rgbLed.off":"關閉 RGB 燈"}};var u="./assets/icon-5ej94635.png";import{jsx as R}from"preact/jsx-runtime";_(p);var D={icon:u,name:R(h,{id:"blocks.leds.name",defaultMessage:"LED"}),blocks:c,menus:f};export{D as default};
