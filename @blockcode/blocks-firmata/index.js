import{addLocalesMessages as e0,Text as t0}from"@blockcode/core";var c=typeof Reflect=="object"?Reflect:null,_=c&&typeof c.apply=="function"?c.apply:function(l,F,i){return Function.prototype.apply.call(l,F,i)},h;c&&typeof c.ownKeys=="function"?h=c.ownKeys:Object.getOwnPropertySymbols?h=function(l){return Object.getOwnPropertyNames(l).concat(Object.getOwnPropertySymbols(l))}:h=function(l){return Object.getOwnPropertyNames(l)};function $(l){console&&console.warn&&console.warn(l)}var g=Number.isNaN||function(l){return l!==l};function d(){d.init.call(this)}d.EventEmitter=d;d.prototype._events=void 0;d.prototype._eventsCount=0;d.prototype._maxListeners=void 0;var M=10;function A(l){if(typeof l!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof l)}Object.defineProperty(d,"defaultMaxListeners",{enumerable:!0,get:function(){return M},set:function(l){if(typeof l!="number"||l<0||g(l))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+l+".");M=l}});d.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};d.prototype.setMaxListeners=function(l){if(typeof l!="number"||l<0||g(l))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+l+".");return this._maxListeners=l,this};function Z(l){return l._maxListeners===void 0?d.defaultMaxListeners:l._maxListeners}d.prototype.getMaxListeners=function(){return Z(this)};d.prototype.emit=function(l){for(var F=[],i=1;i<arguments.length;i++)F.push(arguments[i]);var e=l==="error",t=this._events;if(t!==void 0)e=e&&t.error===void 0;else if(!e)return!1;if(e){var E;if(F.length>0&&(E=F[0]),E instanceof Error)throw E;var r=new Error("Unhandled error."+(E?" ("+E.message+")":""));throw r.context=E,r}var f=t[l];if(f===void 0)return!1;if(typeof f=="function")_(f,this,F);else for(var C=f.length,n=b(f,C),i=0;i<C;++i)_(n[i],this,F);return!0};function m(l,F,i,e){var t,E,r;if(A(i),E=l._events,E===void 0?(E=l._events=Object.create(null),l._eventsCount=0):(E.newListener!==void 0&&(l.emit("newListener",F,i.listener?i.listener:i),E=l._events),r=E[F]),r===void 0)r=E[F]=i,++l._eventsCount;else if(typeof r=="function"?r=E[F]=e?[i,r]:[r,i]:e?r.unshift(i):r.push(i),t=Z(l),t>0&&r.length>t&&!r.warned){r.warned=!0;var f=new Error("Possible EventEmitter memory leak detected. "+r.length+" "+String(F)+" listeners added. Use emitter.setMaxListeners() to increase limit");f.name="MaxListenersExceededWarning",f.emitter=l,f.type=F,f.count=r.length,$(f)}return l}d.prototype.addListener=function(l,F){return m(this,l,F,!1)};d.prototype.on=d.prototype.addListener;d.prototype.prependListener=function(l,F){return m(this,l,F,!0)};function j(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function z(l,F,i){var e={fired:!1,wrapFn:void 0,target:l,type:F,listener:i},t=j.bind(e);return t.listener=i,e.wrapFn=t,t}d.prototype.once=function(l,F){return A(F),this.on(l,z(this,l,F)),this};d.prototype.prependOnceListener=function(l,F){return A(F),this.prependListener(l,z(this,l,F)),this};d.prototype.removeListener=function(l,F){var i,e,t,E,r;if(A(F),e=this._events,e===void 0)return this;if(i=e[l],i===void 0)return this;if(i===F||i.listener===F)--this._eventsCount===0?this._events=Object.create(null):(delete e[l],e.removeListener&&this.emit("removeListener",l,i.listener||F));else if(typeof i!="function"){for(t=-1,E=i.length-1;E>=0;E--)if(i[E]===F||i[E].listener===F){r=i[E].listener,t=E;break}if(t<0)return this;t===0?i.shift():Q(i,t),i.length===1&&(e[l]=i[0]),e.removeListener!==void 0&&this.emit("removeListener",l,r||F)}return this};d.prototype.off=d.prototype.removeListener;d.prototype.removeAllListeners=function(l){var F,i,e;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[l]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete i[l]),this;if(arguments.length===0){var t=Object.keys(i),E;for(e=0;e<t.length;++e)E=t[e],E!=="removeListener"&&this.removeAllListeners(E);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(F=i[l],typeof F=="function")this.removeListener(l,F);else if(F!==void 0)for(e=F.length-1;e>=0;e--)this.removeListener(l,F[e]);return this};function x(l,F,i){var e=l._events;if(e===void 0)return[];var t=e[F];return t===void 0?[]:typeof t=="function"?i?[t.listener||t]:[t]:i?X(t):b(t,t.length)}d.prototype.listeners=function(l){return x(this,l,!0)};d.prototype.rawListeners=function(l){return x(this,l,!1)};d.listenerCount=function(l,F){return typeof l.listenerCount=="function"?l.listenerCount(F):w.call(l,F)};d.prototype.listenerCount=w;function w(l){var F=this._events;if(F!==void 0){var i=F[l];if(typeof i=="function")return 1;if(i!==void 0)return i.length}return 0}d.prototype.eventNames=function(){return this._eventsCount>0?h(this._events):[]};function b(l,F){for(var i=new Array(F),e=0;e<F;++e)i[e]=l[e];return i}function Q(l,F){for(;F+1<l.length;F++)l[F]=l[F+1];l.pop()}function X(l){for(var F=new Array(l.length),i=0;i<F.length;++i)F[i]=l[i].listener||l[i];return F}var d0=d.prototype;var a="0000ffe0-0000-1000-8000-00805f9b34fb",k="0000ffe2-0000-1000-8000-00805f9b34fb",v="0000ffe1-0000-1000-8000-00805f9b34fb",P=20,L=16,G=48;var Y=80,J=85,q=86,R=100,K=81;var B=32;var y=[P,L],S={filters:[{services:[a]}]};class p extends d{constructor(){super();this.bleService=null,this.serialChar=null,this.atChar=null,this.respQueue=[],this._encoder=new TextEncoder,this._decoder=new TextDecoder,this._inFlash=!1,this.bleBusy=!1}requestPort(l=[]){return navigator.bluetooth.requestDevice(S).then((F)=>{return F.addEventListener("gattserverdisconnected",this.handleDisconnectError.bind(this)),F.gatt.connect()}).then((F)=>{this.bleServer=F,this.emit("open"),this.bleServer.getPrimaryService(a).then((i)=>i.getCharacteristic(v)).then((i)=>i.startNotifications()).then((i)=>{this.serialChar=i,this.serialChar.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(a).then((i)=>i.getCharacteristic(k)).then((i)=>i.startNotifications()).then((i)=>{this.atChar=i,this.atChar.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}).catch((F)=>{this.emit("error",F),console.log(F)})}init(l){this.bleServer=l,this.emit("open"),this.bleServer.getPrimaryService(a).then((F)=>F.getCharacteristic(v)).then((F)=>F.startNotifications()).then((F)=>{this.serialChar=F,F.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(a).then((F)=>F.getCharacteristic(k)).then((F)=>F.startNotifications()).then((F)=>{this.atChar=F,F.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}async disconnect(){this.emit("close"),await this.bleServer.disconnect()}async connect(){await this.bleServer.connect()}getConnectStates(){return this.bleServer.connected}handleDisconnectError(l){console.log("disconnect "+l),this.emit("close")}serialNotify(l){if(!this._inFlash){let F=l.target.value,i=new Uint8Array(F.buffer);this.emit("data",i)}}bleAtNotify(l){console.log("bleAt_notify----"+this._decoder.decode(l.target.value))}waitForResponse(l,F,i=5000){return new Promise((e,t)=>{let E,r=(f)=>{let C=f.target.value;for(let n=0;n<C.byteLength;n++){let D=C.getUint8(n);this.respQueue.push(D)}if(this.bufferEqual(F,new Uint8Array(this.respQueue)))console.log("rr "+this.respQueue),clearTimeout(E),l.removeEventListener("characteristicvaluechanged",r),e(this.respQueue)};E=setTimeout(()=>{l.removeEventListener("characteristicvaluechanged",r),t(new Error("Timeout waiting for the expected response."))},i),console.log("监听啦"),this.respQueue=[],l.addEventListener("characteristicvaluechanged",r)})}async sendATMessage(l){console.log("发送了 "+l),l=l+`\r
`;let F=this._encoder.encode(l);await this.atChar.writeValue(F)}async sendSerialMessage(l){await this.serialChar.writeValue(l)}async sendSerialMessageWithResp(l,F=0){if(this.bleBusy){if(F<30)setTimeout(()=>this.sendSerialMessageWithResp(l,F+1),10);else console.error("Max retries reached.");return}try{this.bleBusy=!0,await this.sendSerialMessage(l)}finally{this.bleBusy=!1}}async sendSerialAndTestRet(l,F){await this.sendSerialMessage(l);let i=await this.waitForResponse(this.serialChar,F);return this.bufferEqual(F,new Uint8Array(i))}async flash(l){this._inFlash=!0;let F=this.parseIntelHex(l);console.log("开始烧录啦");try{await this.sendATMessage("AT+TARGE_RESET"),await new Promise((U)=>setTimeout(U,100));let i=new Uint8Array([G,B]),e=new Uint8Array(y);if(!await this.sendSerialAndTestRet(i,e))throw new Error("stk500 sync error");let E=new Uint8Array([Y,B]);if(!await this.sendSerialAndTestRet(E,e))throw new Error("stk500 enter progmodel error");let f=new Uint8Array([q,172,128,0,0,B]),C=new Uint8Array([P,0,L]);if(!await this.sendSerialAndTestRet(f,C))throw new Error("stk500 universal error");await this.upload(F);let D=new Uint8Array([K,B]);if(!await this.sendSerialAndTestRet(D,e))throw new Error("stk500 leaveProgMode error");else console.log("leaveProgMode")}catch(i){console.log(i)}finally{this._inFlash=!1}console.log("烧录成功啦")}async upload(l){let i=0,e=null,t=null;try{while(i<l.length)console.log("program page"),t=i>>1,await this.loadAddress(t),e=l.slice(i,l.length>128?i+128:l.length-1),await this.loadPage(e),console.log("programmed page"),i=i+e.length,await new Promise((E)=>setTimeout(E,4)),console.log("page done")}catch(E){throw E}return console.log("upload done"),!0}async loadAddress(l){let F=l&255,i=l>>8&255,e=new Uint8Array([J,F,i,B]),t=new Uint8Array(y);if(console.log("loadAddress"),!await this.sendSerialAndTestRet(e,t))throw new Error("stk500 loadAddress error")}async loadPage(l){let F=l.length&255,i=l.length>>8,e=new Uint8Array([R,i,F,70]);await this.sendSerialMessage(e);let t=0;console.log("loadAddress");let E=l.length;while(t<E){let n=Math.min(30,E-t);console.log("splitLength:",n);let D=l.slice(t,t+n);await this.sendSerialMessage(new Uint8Array(D)),t+=n}let r=new Uint8Array([B]),f=new Uint8Array(y);if(!await this.sendSerialAndTestRet(r,f))throw new Error("stk500 loadPage error")}mergeUint8Arrays(...l){let F=l.reduce((t,E)=>t+E.length,0),i=new Uint8Array(F),e=0;for(let t of l)i.set(t,e),e+=t.length;return i}parseIntelHex(l){let F=[],i=typeof l==="string"?l:new TextDecoder("utf-8").decode(l);var e=0;for(let E of i.split(/\s*\n\s*/)){if(E.length<1)continue;if(E[0]!=":")throw new Error("Hex file has a line not starting with ':'");let r=parseInt(E.substring(1,3),16),f=parseInt(E.substring(3,7),16)+e,C=parseInt(E.substring(7,9),16);if(E.length!=r*2+11)throw new Error("Error in hex file: "+E);var t=0;for(let n=0;n<r+5;n++)t+=parseInt(E.substring(n*2+1,n*2+3),16);if(t&=255,t!=0)throw new Error("Checksum error in hex file: "+E);switch(C){case 0:while(F.length<f+r)F.push(0);for(let n=0;n<r;n++)F[f+n]=parseInt(E.substring(n*2+9,n*2+11),16);break;case 1:break;case 2:e=parseInt(E.substring(9,13),16)*16;break;default:console.log(C,r,f,t,E)}}return F}bufferEqual(l,F){if(l.length!==F.length)return!1;for(let i=0;i<l.length;i++)if(l[i]!==F[i])return!1;return!0}}var T="./assets/FirmataTest-3ksse6n1.hex";class u extends d{constructor(l){super();this._ble=l,this._ble.on("close",(F)=>{this.emit("close",F)}),this._ble.on("open",(F)=>{this.emit("open",F)}),this._ble.on("error",(F)=>{this.emit("error",F)}),this._ble.on("data",(F)=>{this.emit("data",F)})}connect(){this._ble.requestPort()}disConnect(){this._ble.disConnect()}async write(l,F){console.log(l),await this._ble.sendSerialMessageWithResp(l),console.log(F),F()}async flash(l){await this._ble.flash(l)}async flashHex(){let F=await(await fetch(T)).arrayBuffer();await this.flash(F)}}import{Firmata as F0}from"@blockcode/utils";class N{constructor(){this.arduinoBle=new p,this.bleSerialPort=new u(this.arduinoBle),this.board=null}get key(){return"firmata"}async connect(l){this.arduinoBle.init(l),await new Promise((F)=>setTimeout(F,1000)),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),await this.arduinoBle.sendATMessage("AT+ALL"),this.board=new F0(this.bleSerialPort,{skipCapabilities:!0}),this.board.on("ready",()=>{console.log("  ✔ ready"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}),this.board.on("reportVersionTimeout",()=>{console.log("timeOut----"),this.flashAndReInit()})}async flashAndReInit(){await this.flash(),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}async disconnect(){await this.arduinoBle.disconnect()}async flash(){await this.arduinoBle.sendATMessage("AT+BAUD=4"),await this.bleSerialPort.flashHex()}getAnalogValue(l){let F=parseInt(l),i=this.board.pins[this.board.analogPins[F]];if(console.log(i),i)if(i.report&&i.report===1)return i.value;else return console.log("-------new report analog --------"),this.board.reportAnalogPin(F,1),"0"}getDigitalValue(l){let F=parseInt(l),i=this.board.pins[F];if(i)if(i.report&&i.report===1)return i.value;else return console.log("-------new report digital --------"),this.board.pinMode(F,this.board.MODES.PULLUP),this.board.reportDigitalPin(F,1),0}writePWM(l,F){let i=parseInt(l),e=parseInt(F);this.board.pinMode(i,this.board.MODES.PWM),this.board.pwmWrite(i,e)}writeDigital(l,F){let i=parseInt(l),e=parseInt(F),t=this.board.pins[i];if(t&&t.mode&&t.mode!=this.board.MODES.OUTPUT)this.board.pinMode(i,this.board.MODES.OUTPUT);this.board.digitalWrite(i,e)}getRUS04Distance(l){let F=parseInt(l);return new Promise((i,e)=>{this.board.getRUS04(F,(t)=>{console.log("-----aaa---",t),this.lastRus04=t,i(t)}),setTimeout(()=>{i(this.lastRus04)},1000)})}getDHTTemp(l){let F=parseInt(l);return new Promise((i,e)=>{this.board.getDHTTemp(this.board.analogPins[F],(t)=>{console.log("-----aaa---",t),this.lastDHTTemp=t,i(t)}),setTimeout(()=>{i(this.lastDHTTemp)},2000)})}getDHTHum(l){let F=parseInt(l);return new Promise((i,e)=>{this.board.getDHTHum(this.board.analogPins[F],(t)=>{console.log("-----aaa---",t),this.lastDHTTemp=t,i(t)}),setTimeout(()=>{i(this.lastDHTTemp)},2000)})}}function I(l,F){let i=new N;return l.on("connecting",(e)=>{console.log("onnconetec"),i.connect(e)}),l.on("disconnect",()=>{i.disconnect()}),i}import{Text as o}from"@blockcode/core";import{jsx as s}from"preact/jsx-runtime";var V=[{id:"readAnalog",text:s(o,{id:"blocks.firmata.readAnalog",defaultMessage:"read analog [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(l){return[`runtime.extensions.firmata.getAnalogValue(${l.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDigital",text:s(o,{id:"blocks.firmata.readDigital",defaultMessage:"read digital [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(l){return[`runtime.extensions.firmata.getDigitalValue(${l.getFieldValue("digitalPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDistance",text:s(o,{id:"blocks.firmata.readDistance",defaultMessage:"read Distance [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(l){return[`runtime.extensions.firmata.getRUS04Distance(${l.getFieldValue("digitalPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readTemp",text:s(o,{id:"blocks.firmata.readTemp",defaultMessage:"read temperature [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(l){return[`runtime.extensions.firmata.getDHTTemp(${l.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readHum",text:s(o,{id:"blocks.firmata.readHum",defaultMessage:"read humidity [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(l){return[`runtime.extensions.firmata.getDHTHum(${l.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"setPWM",text:s(o,{id:"blocks.firmata.setPWM",defaultMessage:"set PWM  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"50"}},emu(l){let F=l.getFieldValue("pwmPin")||"3",i=this.quote_(this.valueToCode(l,"VALUE",this.ORDER_NONE))||"50",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,l);return e+=`runtime.extensions.firmata.writePWM(${F}, ${i});
`,e}},{id:"setDigital",text:s(o,{id:"blocks.firmata.setDigital",defaultMessage:"set digital  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"digitalPin"},VALUE:{menu:"highLow"}},emu(l){let F=l.getFieldValue("digitalPin")||"0",i=l.getFieldValue("highLow")||"0",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,l);return e+=`runtime.extensions.firmata.writeDigital(${F}, ${i});
`,e}}],H={analogPin:{type:"string",defaultValue:"0",items:[["A0","0"],["A1","1"],["A2","2"],["A3","3"],["A4","4"],["A5","5"]]},digitalPin:{type:"string",defaultValue:"0",items:[["D0","0"],["D1","1"],["D2","2"],["D3","3"],["D4","4"],["D5","5"],["D6","6"],["D7","7"],["D8","8"],["D9","9"],["D10","10"],["D11","11"],["D12","12"],["D13","13"]]},pwmPin:{type:"string",defaultValue:"3",items:[["D3","3"],["D5","5"],["D6","6"],["D9","9"],["D10","10"],["D11","11"]]},highLow:{type:"string",defaultValue:"0",items:[[s(o,{id:"blocks.firmata.high",defaultMessage:"high"}),"1"],[s(o,{id:"blocks.firmata.low",defaultMessage:"low"}),"0"]]}};var O={en:{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"block [KEY]","blocks.firmata.connect":"block","blocks.firmata.readAnalog":"read analog [PIN] value","blocks.firmata.readDigital":"read digital [PIN] value","blocks.firmata.readDistance":"read Distance [PIN] value","blocks.firmata.readTemp":"read temperature [PIN] value","blocks.firmata.readHum":"read humidity [PIN] value","blocks.firmata.setPWM":"set PWM [PIN] value [VALUE]","blocks.firmata.setDigital":"set digital [PIN] value [VALUE]","blocks.firmata.high":"high","blocks.firmata.low":"low"},"zh-Hans":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"积木 [KEY]","blocks.firmata.connect":"连接","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"距离传感器 [PIN] 检测到的距离","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.high":"高","blocks.firmata.low":"低"},"zh-Hant":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"積木 [KEY]","blocks.firmata.connect":"连接","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"距离传感器 [PIN] 检测到的距离","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.high":"高","blocks.firmata.low":"低"}};var W="./assets/icon-1syrnfvn.svg";import{jsx as E0}from"preact/jsx-runtime";e0(O);var w0={icon:W,name:E0(t0,{id:"blocks.firmata.name",defaultMessage:"Arduino Firmata"}),statusButton:{connectionOptions:{bluetooth:{filters:[{services:["0000ffe0-0000-1000-8000-00805f9b34fb"]}]}}},emulator:I,blocks:V,menus:H};export{w0 as default};
