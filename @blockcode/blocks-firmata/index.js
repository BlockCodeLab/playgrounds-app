import{addLocalesMessages as h0,Text as y0}from"@blockcode/core";import{setAlert as H,Text as W}from"@blockcode/core";import{Firmata as $}from"@blockcode/utils";var s=typeof Reflect=="object"?Reflect:null,m=s&&typeof s.apply=="function"?s.apply:function(F,i,l){return Function.prototype.apply.call(F,i,l)},h;s&&typeof s.ownKeys=="function"?h=s.ownKeys:Object.getOwnPropertySymbols?h=function(F){return Object.getOwnPropertyNames(F).concat(Object.getOwnPropertySymbols(F))}:h=function(F){return Object.getOwnPropertyNames(F)};function S(F){console&&console.warn&&console.warn(F)}var w=Number.isNaN||function(F){return F!==F};function f(){f.init.call(this)}f.EventEmitter=f;f.prototype._events=void 0;f.prototype._eventsCount=0;f.prototype._maxListeners=void 0;var z=10;function y(F){if(typeof F!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof F)}Object.defineProperty(f,"defaultMaxListeners",{enumerable:!0,get:function(){return z},set:function(F){if(typeof F!="number"||F<0||w(F))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+F+".");z=F}});f.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};f.prototype.setMaxListeners=function(F){if(typeof F!="number"||F<0||w(F))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+F+".");return this._maxListeners=F,this};function x(F){return F._maxListeners===void 0?f.defaultMaxListeners:F._maxListeners}f.prototype.getMaxListeners=function(){return x(this)};f.prototype.emit=function(F){for(var i=[],l=1;l<arguments.length;l++)i.push(arguments[l]);var E=F==="error",e=this._events;if(e!==void 0)E=E&&e.error===void 0;else if(!E)return!1;if(E){var t;if(i.length>0&&(t=i[0]),t instanceof Error)throw t;var C=new Error("Unhandled error."+(t?" ("+t.message+")":""));throw C.context=t,C}var d=e[F];if(d===void 0)return!1;if(typeof d=="function")m(d,this,i);else for(var D=d.length,r=N(d,D),l=0;l<D;++l)m(r[l],this,i);return!0};function b(F,i,l,E){var e,t,C;if(y(l),t=F._events,t===void 0?(t=F._events=Object.create(null),F._eventsCount=0):(t.newListener!==void 0&&(F.emit("newListener",i,l.listener?l.listener:l),t=F._events),C=t[i]),C===void 0)C=t[i]=l,++F._eventsCount;else if(typeof C=="function"?C=t[i]=E?[l,C]:[C,l]:E?C.unshift(l):C.push(l),e=x(F),e>0&&C.length>e&&!C.warned){C.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+C.length+" "+String(i)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=F,d.type=i,d.count=C.length,S(d)}return F}f.prototype.addListener=function(F,i){return b(this,F,i,!1)};f.prototype.on=f.prototype.addListener;f.prototype.prependListener=function(F,i){return b(this,F,i,!0)};function K(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function k(F,i,l){var E={fired:!1,wrapFn:void 0,target:F,type:i,listener:l},e=K.bind(E);return e.listener=l,E.wrapFn=e,e}f.prototype.once=function(F,i){return y(i),this.on(F,k(this,F,i)),this};f.prototype.prependOnceListener=function(F,i){return y(i),this.prependListener(F,k(this,F,i)),this};f.prototype.removeListener=function(F,i){var l,E,e,t,C;if(y(i),E=this._events,E===void 0)return this;if(l=E[F],l===void 0)return this;if(l===i||l.listener===i)--this._eventsCount===0?this._events=Object.create(null):(delete E[F],E.removeListener&&this.emit("removeListener",F,l.listener||i));else if(typeof l!="function"){for(e=-1,t=l.length-1;t>=0;t--)if(l[t]===i||l[t].listener===i){C=l[t].listener,e=t;break}if(e<0)return this;e===0?l.shift():F0(l,e),l.length===1&&(E[F]=l[0]),E.removeListener!==void 0&&this.emit("removeListener",F,C||i)}return this};f.prototype.off=f.prototype.removeListener;f.prototype.removeAllListeners=function(F){var i,l,E;if(l=this._events,l===void 0)return this;if(l.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):l[F]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete l[F]),this;if(arguments.length===0){var e=Object.keys(l),t;for(E=0;E<e.length;++E)t=e[E],t!=="removeListener"&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(i=l[F],typeof i=="function")this.removeListener(F,i);else if(i!==void 0)for(E=i.length-1;E>=0;E--)this.removeListener(F,i[E]);return this};function v(F,i,l){var E=F._events;if(E===void 0)return[];var e=E[i];return e===void 0?[]:typeof e=="function"?l?[e.listener||e]:[e]:l?l0(e):N(e,e.length)}f.prototype.listeners=function(F){return v(this,F,!0)};f.prototype.rawListeners=function(F){return v(this,F,!1)};f.listenerCount=function(F,i){return typeof F.listenerCount=="function"?F.listenerCount(i):P.call(F,i)};f.prototype.listenerCount=P;function P(F){var i=this._events;if(i!==void 0){var l=i[F];if(typeof l=="function")return 1;if(l!==void 0)return l.length}return 0}f.prototype.eventNames=function(){return this._eventsCount>0?h(this._events):[]};function N(F,i){for(var l=new Array(i),E=0;E<i;++E)l[E]=F[E];return l}function F0(F,i){for(;i+1<F.length;i++)F[i]=F[i+1];F.pop()}function l0(F){for(var i=new Array(F.length),l=0;l<i.length;++l)i[l]=F[l].listener||F[l];return i}var _0=f.prototype;var p="./assets/FirmataExpress.ino-jw5jnwgv.hex";var a="0000ffe0-0000-1000-8000-00805f9b34fb",I="0000ffe2-0000-1000-8000-00805f9b34fb",T="0000ffe1-0000-1000-8000-00805f9b34fb",L=20,V=16,E0=48;var e0=80,t0=85,C0=86,r0=100,f0=81;var B=32;var u=[L,V],d0={filters:[{services:[a]}]};class _ extends f{constructor(){super();this.bleService=null,this.serialChar=null,this.atChar=null,this.respQueue=[],this._encoder=new TextEncoder,this._decoder=new TextDecoder,this._inFlash=!1,this.bleBusy=!1}requestPort(F=[]){return navigator.bluetooth.requestDevice(d0).then((i)=>{return i.addEventListener("gattserverdisconnected",this.handleDisconnectError.bind(this)),i.gatt.connect()}).then((i)=>{this.bleServer=i,this.emit("open"),this.bleServer.getPrimaryService(a).then((l)=>l.getCharacteristic(T)).then((l)=>l.startNotifications()).then((l)=>{this.serialChar=l,this.serialChar.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(a).then((l)=>l.getCharacteristic(I)).then((l)=>l.startNotifications()).then((l)=>{this.atChar=l,this.atChar.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}).catch((i)=>{this.emit("error",i),console.log(i)})}async init(F){this.bleServer=F,this.emit("open"),this.bleServer.getPrimaryService(a).then((i)=>i.getCharacteristic(T)).then((i)=>i.startNotifications()).then((i)=>{this.serialChar=i,i.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(a).then((i)=>i.getCharacteristic(I)).then((i)=>i.startNotifications()).then((i)=>{this.atChar=i,i.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))}),await new Promise((i)=>setTimeout(i,1000)),await this.sendATMessage("AT+BAUD=3"),await this.sendATMessage("AT+BLEUSB=3"),await this.sendATMessage("AT+ALL")}async disconnect(){this.emit("close"),await this.bleServer.disconnect()}async connect(){await this.bleServer.connect()}getConnectStates(){return this.bleServer.connected}handleDisconnectError(F){console.log("disconnect "+F),this.emit("close")}serialNotify(F){if(!this._inFlash){let i=F.target.value,l=new Uint8Array(i.buffer);this.emit("data",l)}}bleAtNotify(F){console.log("bleAt_notify----"+this._decoder.decode(F.target.value))}waitForResponse(F,i,l=5000){return new Promise((E,e)=>{let t,C=(d)=>{let D=d.target.value;for(let r=0;r<D.byteLength;r++){let A=D.getUint8(r);this.respQueue.push(A)}if(this.bufferEqual(i,new Uint8Array(this.respQueue)))console.log("rr "+this.respQueue),clearTimeout(t),F.removeEventListener("characteristicvaluechanged",C),E(this.respQueue)};t=setTimeout(()=>{F.removeEventListener("characteristicvaluechanged",C),e(new Error("Timeout waiting for the expected response."))},l),console.log("监听啦"),this.respQueue=[],F.addEventListener("characteristicvaluechanged",C)})}async sendATMessage(F){console.log("发送了 "+F),F=F+`\r
`;let i=this._encoder.encode(F);await this.atChar.writeValue(i)}async sendSerialMessage(F){await this.serialChar.writeValue(F)}async sendSerialMessageWithResp(F,i=0){if(this.bleBusy){if(i<30)setTimeout(()=>this.sendSerialMessageWithResp(F,i+1),10);else console.error("Max retries reached.");return}try{this.bleBusy=!0,await this.sendSerialMessage(F)}finally{this.bleBusy=!1}}async sendSerialAndTestRet(F,i){let l=this.waitForResponse(this.serialChar,i);await this.sendSerialMessage(F);let E=await l;return this.bufferEqual(i,new Uint8Array(E))}async flash(F){this._inFlash=!0;let i=this.parseIntelHex(F);try{await this.sendATMessage("AT+TARGE_RESET"),await new Promise((R)=>setTimeout(R,100));let l=new Uint8Array([E0,B]),E=new Uint8Array(u);if(!await this.sendSerialAndTestRet(l,E))throw new Error("stk500 sync error");let t=new Uint8Array([e0,B]);if(!await this.sendSerialAndTestRet(t,E))throw new Error("stk500 enter progmodel error");let d=new Uint8Array([C0,172,128,0,0,B]),D=new Uint8Array([L,0,V]);if(!await this.sendSerialAndTestRet(d,D))throw new Error("stk500 universal error");await this.upload(i);let A=new Uint8Array([f0,B]);if(!await this.sendSerialAndTestRet(A,E))throw new Error("stk500 leaveProgMode error");else console.log("leaveProgMode")}catch(l){console.log(l)}finally{this._inFlash=!1}}async upload(F){let l=0,E=null,e=null;try{while(l<F.length)console.log("program page"),e=l>>1,await this.loadAddress(e),E=F.slice(l,F.length>128?l+128:F.length-1),await this.loadPage(E),console.log("programmed page"),l=l+E.length,await new Promise((t)=>setTimeout(t,4)),console.log("page done")}catch(t){throw t}return console.log("upload done"),!0}async loadAddress(F){let i=F&255,l=F>>8&255,E=new Uint8Array([t0,i,l,B]),e=new Uint8Array(u);if(console.log("loadAddress"),!await this.sendSerialAndTestRet(E,e))throw new Error("stk500 loadAddress error")}async loadPage(F){let i=F.length&255,l=F.length>>8,E=new Uint8Array([r0,l,i,70]);await this.sendSerialMessage(E);let e=0;console.log("loadAddress");let t=F.length;while(e<t){let r=Math.min(60,t-e);console.log("splitLength:",r);let A=F.slice(e,e+r);await this.sendSerialMessage(new Uint8Array(A)),e+=r}let C=new Uint8Array([B]),d=new Uint8Array(u);if(!await this.sendSerialAndTestRet(C,d))throw new Error("stk500 loadPage error")}mergeUint8Arrays(...F){let i=F.reduce((e,t)=>e+t.length,0),l=new Uint8Array(i),E=0;for(let e of F)l.set(e,E),E+=e.length;return l}parseIntelHex(F){let i=[],l=typeof F==="string"?F:new TextDecoder("utf-8").decode(F);var E=0;for(let t of l.split(/\s*\n\s*/)){if(t.length<1)continue;if(t[0]!=":")throw new Error("Hex file has a line not starting with ':'");let C=parseInt(t.substring(1,3),16),d=parseInt(t.substring(3,7),16)+E,D=parseInt(t.substring(7,9),16);if(t.length!=C*2+11)throw new Error("Error in hex file: "+t);var e=0;for(let r=0;r<C+5;r++)e+=parseInt(t.substring(r*2+1,r*2+3),16);if(e&=255,e!=0)throw new Error("Checksum error in hex file: "+t);switch(D){case 0:while(i.length<d+C)i.push(0);for(let r=0;r<C;r++)i[d+r]=parseInt(t.substring(r*2+9,r*2+11),16);break;case 1:break;case 2:E=parseInt(t.substring(9,13),16)*16;break;default:console.log(D,C,d,e,t)}}return i}bufferEqual(F,i){if(F.length!==i.length)return!1;for(let l=0;l<F.length;l++)if(F[l]!==i[l])return!1;return!0}}class M extends f{constructor(F){super();this._ble=new _,this._ble.on("close",(i)=>{this.emit("close",i)}),this._ble.on("open",(i)=>{this.emit("open",i)}),this._ble.on("error",(i)=>{this.emit("error",i)}),this._ble.on("data",(i)=>{this.emit("data",i)})}async init(F){await this._ble.init(F)}connect(){this._ble.requestPort()}disConnect(){this._ble.disConnect()}async write(F,i){console.log("send: "+new Uint8Array(F)),await this._ble.sendSerialMessageWithResp(F),i()}async flash(F){await this._ble.sendATMessage("AT+BAUD=4"),await this._ble.flash(F),await new Promise((i)=>{setTimeout(i,100)}),await this._ble.sendATMessage("AT+BAUD=3"),await this._ble.sendATMessage("AT+BLEUSB=3"),await new Promise((i)=>{setTimeout(i,100)})}async flashHex(){let i=await(await fetch(p)).arrayBuffer();await this.flash(i)}}import{Serial as D0}from"@blockcode/core";var U=20,O=16,o0=48,n0=80,s0=85,B0=86,c0=100,A0=81,c=32,g=[U,O];class Z extends D0{constructor(F){super(F);this._port=F,this.respQueue=[],this._inFlash=!1,this._writer=null,this._writeQueue=[],this._writing=!1}async write(F,i){console.log(F),await this._write(F,"binary"),console.log(i),i()}_write(F,i="text"){return new Promise((l,E)=>{if(this._writeQueue.push({data:i==="text"?encoder.encode(F):F,resolve:l,reject:E}),!this._writing)this._processWriteQueue()})}async _processWriteQueue(){if(this._writeQueue.length===0||this._writing)return;this._writing=!0;let{data:F,resolve:i,reject:l}=this._writeQueue.shift();try{this._writer=this.port.writable.getWriter(),await this._writer.write(F),this._writer.releaseLock(),this._writer=null,i()}catch(E){l(E)}finally{if(this._writing=!1,this._writeQueue.length>0)this._processWriteQueue()}}async flashHex(){let i=await(await fetch(p)).arrayBuffer();await this.close(),await this.open({baudRate:115200}),await new Promise((l)=>setTimeout(l,100)),await this.flash(i),await new Promise((l)=>setTimeout(l,100)),await this.close(),await new Promise((l)=>setTimeout(l,100)),await this.open({baudRate:57600}),await new Promise((l)=>setTimeout(l,2000))}waitForResponse(F,i=5000){return new Promise((l,E)=>{let e,t=(C)=>{for(let d=0;d<C.length;d++)this.respQueue.push(C[d]);if(this.bufferEqual(F,new Uint8Array(this.respQueue)))clearTimeout(e),this.removeListener("data",t),l(this.respQueue)};e=setTimeout(()=>{this.removeListener("data",t),E(new Error("Timeout waiting for response"))},i),this.respQueue=[],this.on("data",t)})}async sendSerialAndTestRet(F,i){let l=this.waitForResponse(i);await this._write(F,"binary");let E=await l;return this.bufferEqual(i,new Uint8Array(E))}async flash(F){console.log("flash ---"),this._inFlash=!0,this._port.setSignals({dataTerminalReady:!0,requestToSend:!0}),await new Promise((l)=>setTimeout(l,150));let i=this.parseIntelHex(F);try{let l=new Uint8Array([o0,c]),E=new Uint8Array(g);if(!await this.sendSerialAndTestRet(l,E))throw new Error("stk500 sync error");let e=new Uint8Array([n0,c]);if(!await this.sendSerialAndTestRet(e,E))throw new Error("stk500 enter progmodel error");let t=new Uint8Array([B0,172,128,0,0,c]),C=new Uint8Array([U,0,O]);if(!await this.sendSerialAndTestRet(t,C))throw new Error("stk500 universal error");await this.upload(i);let d=new Uint8Array([A0,c]);if(!await this.sendSerialAndTestRet(d,E))throw new Error("stk500 leaveProgMode error")}catch(l){console.error(l)}finally{this._inFlash=!1}}async upload(F){let l=0;try{while(l<F.length){let E=l>>1;await this.loadAddress(E);let e=F.slice(l,Math.min(l+128,F.length));await this.loadPage(e),l=l+e.length,await new Promise((t)=>setTimeout(t,4))}return!0}catch(E){throw E}}async loadAddress(F){let i=F&255,l=F>>8&255,E=new Uint8Array([s0,i,l,c]),e=new Uint8Array(g);if(!await this.sendSerialAndTestRet(E,e))throw new Error("stk500 loadAddress error")}async loadPage(F){let i=F.length&255,l=F.length>>8,E=this.mergeUint8Arrays(new Uint8Array([c0,l,i,70]),F,new Uint8Array([c])),e=new Uint8Array(g);if(!await this.sendSerialAndTestRet(E,e))throw new Error("stk500 loadPage error")}mergeUint8Arrays(...F){let i=F.reduce((e,t)=>e+t.length,0),l=new Uint8Array(i),E=0;for(let e of F)l.set(e,E),E+=e.length;return l}parseIntelHex(F){let i=[],l=typeof F==="string"?F:new TextDecoder("utf-8").decode(F),E=0;for(let e of l.split(/\s*\n\s*/)){if(e.length<1)continue;if(e[0]!=":")throw new Error("Hex file has a line not starting with ':'");let t=parseInt(e.substring(1,3),16),C=parseInt(e.substring(3,7),16)+E,d=parseInt(e.substring(7,9),16);if(e.length!=t*2+11)throw new Error("Error in hex file: "+e);let D=0;for(let r=0;r<t+5;r++)D+=parseInt(e.substring(r*2+1,r*2+3),16);if(D&=255,D!=0)throw new Error("Checksum error in hex file: "+e);switch(d){case 0:while(i.length<C+t)i.push(0);for(let r=0;r<t;r++)i[C+r]=parseInt(e.substring(r*2+9,r*2+11),16);break;case 1:break;case 2:E=parseInt(e.substring(9,13),16)*16;break}}return i}bufferEqual(F,i){if(F.length!==i.length)return!1;for(let l=0;l<F.length;l++)if(F[l]!==i[l])return!1;return!0}}import{Serial as U0}from"@blockcode/core";import{jsx as Q}from"preact/jsx-runtime";class X{constructor(){this.type="ble",this.uniSerialPort=null,this.board=null}get key(){return"firmata"}async connect(){this.board.on("ready",()=>{console.log("✔ ready"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}),this.board.on("reportVersionTimeout",()=>{console.log("timeOut----"),this.flashAndReInit()})}async flashAndReInit(){if(await this.flash(),this.type==="ble")this.board.reportVersion(()=>{}),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")});else this.board.reportVersion(()=>{}),this.board.queryFirmware(()=>{this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})})}async disconnect(){await this.arduinoBle.disconnect()}async flash(){let F=H({message:Q(W,{id:"blocks.firmata.firmware",defaultMessage:"Updating firmware..."})});await this.uniSerialPort.flashHex(),H({id:F,message:Q(W,{id:"blocks.firmata.completed",defaultMessage:"Updating firmware completed."})},2000)}getAnalogValue(F){let i=parseInt(F),l=this.board.pins[this.board.analogPins[i]];if(l)if(l.report&&l.report===1)return l.value;else return console.log("-------new report analog --------"),this.board.reportAnalogPin(i,1),l.value}getDigitalValue(F){let i=parseInt(F),l=this.board.pins[i];if(l)if(l.report&&l.report===1)return Boolean(l.value);else return console.log("-------new report digital --------"),this.board.pinMode(i,this.board.MODES.PULLUP),this.board.reportDigitalPin(i,1),Boolean(l.value)}writePWM(F,i){let l=parseInt(F),E=parseInt(i);this.board.pinMode(l,this.board.MODES.PWM),this.board.pwmWrite(l,E)}writeDigital(F,i){let l=parseInt(F),E=parseInt(i),e=this.board.pins[l];if(e&&e.mode&&e.mode!=this.board.MODES.OUTPUT)this.board.pinMode(l,this.board.MODES.OUTPUT);this.board.digitalWrite(l,E)}getSonarDistance(F,i){let l=parseInt(F),E=parseInt(i),e=this.board.pins[l];if(e)if(e.report&&e.report===1)return e.value;else return console.log("-------new report digital --------"),this.board.reportSonarData(l,E),!1}getDHTTemp(F){let i=parseInt(F),l=this.board.pins[i];if(l)if(l.report&&l.report===1)return l.value[1];else return console.log("-------new report digital --------"),this.board.reportDHTData(i),!1}getDHTHum(F){let i=parseInt(F),l=this.board.pins[i];if(l)if(l.report&&l.report===1)return l.value[0];else return console.log("-------new report digital --------"),this.board.reportDHTData(i),!1}playTone(F,i,l){let E=parseInt(F),e=parseInt(i),t=parseInt(l),C=this.board.pins[E];if(C&&C.mode&&C.mode!=this.board.MODES.TONE)this.board.pinMode(E,this.board.MODES.TONE);this.board.play_tone(E,e,t)}writeServo(F,i){let l=parseInt(F),E=parseInt(i),e=this.board.pins[l];if(e&&e.mode&&e.mode!=this.board.MODES.SERVO)this.board.servoConfig(l,544,2400);this.board.servoWrite(l,E)}reset(){this.board.reset(),this.board.pins.forEach((F)=>{if(F&&F.report&&F.report===1)F.report=0})}}function q(F,i){let l=new X;return F.on("connecting",async(E)=>{if(E instanceof BluetoothRemoteGATTServer)l.uniSerialPort=new M,await l.uniSerialPort.init(E),l.board=new $(l.uniSerialPort,{skipCapabilities:!0}),l.connect();else if(E instanceof SerialPort)l.type="serial",l.uniSerialPort=new Z(E),await l.uniSerialPort.open({baudRate:57600}),await new Promise((e)=>setTimeout(e,2000)),l.board=new $(l.uniSerialPort,{skipCapabilities:!0}),l.connect()}),F.on("disconnect",()=>{l.disconnect()}),F.on("stop",()=>{console.log("stop"),l.reset()}),l}import{Text as o}from"@blockcode/core";import{jsx as n}from"preact/jsx-runtime";var Y=[{id:"readAnalog",text:n(o,{id:"blocks.firmata.readAnalog",defaultMessage:"read analog [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getAnalogValue(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDigital",text:n(o,{id:"blocks.firmata.readDigital",defaultMessage:"read digital [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"boolean",emu(F){return[`runtime.extensions.firmata.getDigitalValue(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDistance",text:n(o,{id:"blocks.firmata.readDistance",defaultMessage:"Read SONAR trig [PIN_T] echo [PIN_E]"}),inputs:{PIN_T:{menu:"digitalPin"},PIN_E:{menu:"digitalPin"}},output:"number",emu(F){let i=F.getFieldValue("PIN_T")||"0",l=F.getFieldValue("PIN_E")||"0";return[`runtime.extensions.firmata.getSonarDistance(${i}, ${l})`,this.ORDER_FUNCTION_CALL]}},{id:"readTemp",text:n(o,{id:"blocks.firmata.readTemp",defaultMessage:"read temperature [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTTemp(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readHum",text:n(o,{id:"blocks.firmata.readHum",defaultMessage:"read humidity [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTHum(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"setPWM",text:n(o,{id:"blocks.firmata.setPWM",defaultMessage:"set PWM  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"50"}},emu(F){let i=F.getFieldValue("PIN")||"3",l=this.quote_(this.valueToCode(F,"VALUE",this.ORDER_NONE))||"50",E="";if(this.STATEMENT_PREFIX)E+=this.injectId(this.STATEMENT_PREFIX,F);return E+=`runtime.extensions.firmata.writePWM(${i}, ${l});
`,E}},{id:"setDigital",text:n(o,{id:"blocks.firmata.setDigital",defaultMessage:"set digital  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"digitalPin"},VALUE:{menu:"highLow"}},emu(F){let i=F.getFieldValue("PIN")||"0",l=F.getFieldValue("VALUE")||"0",E="";if(this.STATEMENT_PREFIX)E+=this.injectId(this.STATEMENT_PREFIX,F);return E+=`runtime.extensions.firmata.writeDigital(${i}, ${l});
`,E}},{id:"writeServo",text:n(o,{id:"blocks.firmata.writeServo",defaultMessage:"write servo PIN [PIN] [VALUE] deg"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"90"}},emu(F){let i=F.getFieldValue("PIN")||"3",l=this.quote_(this.valueToCode(F,"VALUE",this.ORDER_NONE))||"90",E="";if(this.STATEMENT_PREFIX)E+=this.injectId(this.STATEMENT_PREFIX,F);return E+=`runtime.extensions.firmata.writeServo(${i}, ${l});
`,E}},{id:"playTone",text:n(o,{id:"blocks.firmata.playTone",defaultMessage:"tone pin [PIN] [FREQUENCY] HZ [DURATION] ms"}),inputs:{PIN:{menu:"pwmPin"},FREQUENCY:{type:"number",defaultValue:"100"},DURATION:{type:"number",defaultValue:"1000"}},emu(F){let i=F.getFieldValue("PIN")||"3",l=this.quote_(this.valueToCode(F,"FREQUENCY",this.ORDER_NONE))||"100",E=this.quote_(this.valueToCode(F,"DURATION",this.ORDER_NONE))||"100",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,F);return e+=`runtime.extensions.firmata.playTone(${i}, ${l}, ${E});
`,e}}],J={analogPin:{type:"string",defaultValue:"0",items:[["A0","0"],["A1","1"],["A2","2"],["A3","3"],["A4","4"],["A5","5"]]},digitalPin:{type:"string",defaultValue:"0",items:[["D0","0"],["D1","1"],["D2","2"],["D3","3"],["D4","4"],["D5","5"],["D6","6"],["D7","7"],["D8","8"],["D9","9"],["D10","10"],["D11","11"],["D12","12"],["D13","13"]]},pwmPin:{type:"string",defaultValue:"3",items:[["D3","3"],["D5","5"],["D6","6"],["D9","9"],["D10","10"],["D11","11"]]},highLow:{type:"string",defaultValue:"0",items:[[n(o,{id:"blocks.firmata.high",defaultMessage:"high"}),"1"],[n(o,{id:"blocks.firmata.low",defaultMessage:"low"}),"0"]]}};var j={en:{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"Updating firmware...","blocks.firmata.completed":"Updating firmware completed.","blocks.firmata.readAnalog":"read analog [PIN] value","blocks.firmata.readDigital":"read digital [PIN] value","blocks.firmata.readDistance":"Read SONAR trig [PIN_T] echo [PIN_E]","blocks.firmata.readTemp":"read temperature [PIN] value","blocks.firmata.readHum":"read humidity [PIN] value","blocks.firmata.setPWM":"set PWM [PIN] value [VALUE]","blocks.firmata.setDigital":"set digital [PIN] value [VALUE]","blocks.firmata.writeServo":"write servo PIN [PIN] [VALUE] deg","blocks.firmata.playTone":"tone pin [PIN] [FREQUENCY] HZ [DURATION] ms","blocks.firmata.high":"high","blocks.firmata.low":"low"},"zh-Hans":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"正在更新固件…","blocks.firmata.completed":"更新固件完成。","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"读取超声波距离 trig [PIN_T] echo[PIN_E]","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.writeServo":"设置舵机引脚 [PIN] 为 [VALUE] 度","blocks.firmata.playTone":"设置蜂鸣器引脚 [PIN] 频率为 [FREQUENCY] HZ 时间为 [DURATION] ms","blocks.firmata.high":"高","blocks.firmata.low":"低"},"zh-Hant":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"正在更新固件…","blocks.firmata.completed":"更新固件完成。","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"读取超声波距离 trig [PIN_T] echo[PIN_E]","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.writeServo":"设置舵机引脚 [PIN] 为 [VALUE] 度","blocks.firmata.playTone":"设置蜂鸣器引脚 [PIN] 频率为 [FREQUENCY] HZ 时间为 [DURATION] ms","blocks.firmata.high":"高","blocks.firmata.low":"低"}};var G="./assets/icon-1syrnfvn.svg";import{jsx as p0}from"preact/jsx-runtime";h0(j);var S0={icon:G,name:p0(y0,{id:"blocks.firmata.name",defaultMessage:"Arduino Firmata"}),statusButton:{connectionOptions:{serial:{filters:[]},bluetooth:{filters:[{services:["0000ffe0-0000-1000-8000-00805f9b34fb"]}]}}},emulator:q,blocks:Y,menus:J};export{S0 as default};
