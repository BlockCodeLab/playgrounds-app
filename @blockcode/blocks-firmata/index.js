import{addLocalesMessages as B0,Text as D0}from"@blockcode/core";var a=typeof Reflect=="object"?Reflect:null,d=a&&typeof a.apply=="function"?a.apply:function(F,E,C){return Function.prototype.apply.call(F,E,C)},m;a&&typeof a.ownKeys=="function"?m=a.ownKeys:Object.getOwnPropertySymbols?m=function(F){return Object.getOwnPropertyNames(F).concat(Object.getOwnPropertySymbols(F))}:m=function(F){return Object.getOwnPropertyNames(F)};function X(F){console&&console.warn&&console.warn(F)}var v=Number.isNaN||function(F){return F!==F};function e(){e.init.call(this)}e.EventEmitter=e;e.prototype._events=void 0;e.prototype._eventsCount=0;e.prototype._maxListeners=void 0;var b=10;function p(F){if(typeof F!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof F)}Object.defineProperty(e,"defaultMaxListeners",{enumerable:!0,get:function(){return b},set:function(F){if(typeof F!="number"||F<0||v(F))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+F+".");b=F}});e.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};e.prototype.setMaxListeners=function(F){if(typeof F!="number"||F<0||v(F))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+F+".");return this._maxListeners=F,this};function P(F){return F._maxListeners===void 0?e.defaultMaxListeners:F._maxListeners}e.prototype.getMaxListeners=function(){return P(this)};e.prototype.emit=function(F){for(var E=[],C=1;C<arguments.length;C++)E.push(arguments[C]);var B=F==="error",D=this._events;if(D!==void 0)B=B&&D.error===void 0;else if(!B)return!1;if(B){var A;if(E.length>0&&(A=E[0]),A instanceof Error)throw A;var t=new Error("Unhandled error."+(A?" ("+A.message+")":""));throw t.context=A,t}var i=D[F];if(i===void 0)return!1;if(typeof i=="function")d(i,this,E);else for(var o=i.length,n=M(i,o),C=0;C<o;++C)d(n[C],this,E);return!0};function L(F,E,C,B){var D,A,t;if(p(C),A=F._events,A===void 0?(A=F._events=Object.create(null),F._eventsCount=0):(A.newListener!==void 0&&(F.emit("newListener",E,C.listener?C.listener:C),A=F._events),t=A[E]),t===void 0)t=A[E]=C,++F._eventsCount;else if(typeof t=="function"?t=A[E]=B?[C,t]:[t,C]:B?t.unshift(C):t.push(C),D=P(F),D>0&&t.length>D&&!t.warned){t.warned=!0;var i=new Error("Possible EventEmitter memory leak detected. "+t.length+" "+String(E)+" listeners added. Use emitter.setMaxListeners() to increase limit");i.name="MaxListenersExceededWarning",i.emitter=F,i.type=E,i.count=t.length,X(i)}return F}e.prototype.addListener=function(F,E){return L(this,F,E,!1)};e.prototype.on=e.prototype.addListener;e.prototype.prependListener=function(F,E){return L(this,F,E,!0)};function z(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function w(F,E,C){var B={fired:!1,wrapFn:void 0,target:F,type:E,listener:C},D=z.bind(B);return D.listener=C,B.wrapFn=D,D}e.prototype.once=function(F,E){return p(E),this.on(F,w(this,F,E)),this};e.prototype.prependOnceListener=function(F,E){return p(E),this.prependListener(F,w(this,F,E)),this};e.prototype.removeListener=function(F,E){var C,B,D,A,t;if(p(E),B=this._events,B===void 0)return this;if(C=B[F],C===void 0)return this;if(C===E||C.listener===E)--this._eventsCount===0?this._events=Object.create(null):(delete B[F],B.removeListener&&this.emit("removeListener",F,C.listener||E));else if(typeof C!="function"){for(D=-1,A=C.length-1;A>=0;A--)if(C[A]===E||C[A].listener===E){t=C[A].listener,D=A;break}if(D<0)return this;D===0?C.shift():J(C,D),C.length===1&&(B[F]=C[0]),B.removeListener!==void 0&&this.emit("removeListener",F,t||E)}return this};e.prototype.off=e.prototype.removeListener;e.prototype.removeAllListeners=function(F){var E,C,B;if(C=this._events,C===void 0)return this;if(C.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):C[F]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete C[F]),this;if(arguments.length===0){var D=Object.keys(C),A;for(B=0;B<D.length;++B)A=D[B],A!=="removeListener"&&this.removeAllListeners(A);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(E=C[F],typeof E=="function")this.removeListener(F,E);else if(E!==void 0)for(B=E.length-1;B>=0;B--)this.removeListener(F,E[B]);return this};function y(F,E,C){var B=F._events;if(B===void 0)return[];var D=B[E];return D===void 0?[]:typeof D=="function"?C?[D.listener||D]:[D]:C?Y(D):M(D,D.length)}e.prototype.listeners=function(F){return y(this,F,!0)};e.prototype.rawListeners=function(F){return y(this,F,!1)};e.listenerCount=function(F,E){return typeof F.listenerCount=="function"?F.listenerCount(E):T.call(F,E)};e.prototype.listenerCount=T;function T(F){var E=this._events;if(E!==void 0){var C=E[F];if(typeof C=="function")return 1;if(C!==void 0)return C.length}return 0}e.prototype.eventNames=function(){return this._eventsCount>0?m(this._events):[]};function M(F,E){for(var C=new Array(E),B=0;B<E;++B)C[B]=F[B];return C}function J(F,E){for(;E+1<F.length;E++)F[E]=F[E+1];F.pop()}function Y(F){for(var E=new Array(F.length),C=0;C<E.length;++C)E[C]=F[C].listener||F[C];return E}var e0=e.prototype;var f="0000ffe0-0000-1000-8000-00805f9b34fb",N="0000ffe2-0000-1000-8000-00805f9b34fb",k="0000ffe1-0000-1000-8000-00805f9b34fb",I=20,H=16,Z=48;var G=80,q=85,R=86,K=100,S=81;var l=32;var c=[I,H],_={filters:[{services:[f]}]};class h extends e{constructor(){super();this.bleService=null,this.serialChar=null,this.atChar=null,this.respQueue=[],this._encoder=new TextEncoder,this._decoder=new TextDecoder,this._inFlash=!1,this.bleBusy=!1}requestPort(F=[]){return navigator.bluetooth.requestDevice(_).then((E)=>{return E.addEventListener("gattserverdisconnected",this.handleDisconnectError.bind(this)),E.gatt.connect()}).then((E)=>{this.bleServer=E,this.emit("open"),this.bleServer.getPrimaryService(f).then((C)=>C.getCharacteristic(k)).then((C)=>C.startNotifications()).then((C)=>{this.serialChar=C,this.serialChar.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(f).then((C)=>C.getCharacteristic(N)).then((C)=>C.startNotifications()).then((C)=>{this.atChar=C,this.atChar.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}).catch((E)=>{this.emit("error",E),console.log(E)})}init(F){this.bleServer=F,this.emit("open"),this.bleServer.getPrimaryService(f).then((E)=>E.getCharacteristic(k)).then((E)=>E.startNotifications()).then((E)=>{this.serialChar=E,E.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(f).then((E)=>E.getCharacteristic(N)).then((E)=>E.startNotifications()).then((E)=>{this.atChar=E,E.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}async disconnect(){this.emit("close"),await this.bleServer.disconnect()}async connect(){await this.bleServer.connect()}getConnectStates(){return this.bleServer.connected}handleDisconnectError(F){console.log("disconnect "+F),this.emit("close")}serialNotify(F){if(!this._inFlash){let E=F.target.value,C=new Uint8Array(E.buffer);this.emit("data",C)}}bleAtNotify(F){console.log("bleAt_notify----"+this._decoder.decode(F.target.value))}waitForResponse(F,E,C=5000){return new Promise((B,D)=>{let A,t=(i)=>{let o=i.target.value;for(let n=0;n<o.byteLength;n++){let u=o.getUint8(n);this.respQueue.push(u)}if(this.bufferEqual(E,new Uint8Array(this.respQueue)))console.log("rr "+this.respQueue),clearTimeout(A),F.removeEventListener("characteristicvaluechanged",t),B(this.respQueue)};A=setTimeout(()=>{F.removeEventListener("characteristicvaluechanged",t),D(new Error("Timeout waiting for the expected response."))},C),console.log("监听啦"),this.respQueue=[],F.addEventListener("characteristicvaluechanged",t)})}async sendATMessage(F){console.log("发送了 "+F),F=F+`\r
`;let E=this._encoder.encode(F);await this.atChar.writeValue(E)}async sendSerialMessage(F){await this.serialChar.writeValue(F)}async sendSerialMessageWithResp(F,E=0){if(this.bleBusy){if(E<30)setTimeout(()=>this.sendSerialMessageWithResp(F,E+1),10);else console.error("Max retries reached.");return}try{this.bleBusy=!0,await this.sendSerialMessage(F)}finally{this.bleBusy=!1}}async sendSerialAndTestRet(F,E){await this.sendSerialMessage(F);let C=await this.waitForResponse(this.serialChar,E);return this.bufferEqual(E,new Uint8Array(C))}async flash(F){this._inFlash=!0;let E=this.parseIntelHex(F);console.log("开始烧录啦");try{await this.sendATMessage("AT+TARGE_RESET"),await new Promise((Q)=>setTimeout(Q,100));let C=new Uint8Array([Z,l]),B=new Uint8Array(c);if(!await this.sendSerialAndTestRet(C,B))throw new Error("stk500 sync error");let A=new Uint8Array([G,l]);if(!await this.sendSerialAndTestRet(A,B))throw new Error("stk500 enter progmodel error");let i=new Uint8Array([R,172,128,0,0,l]),o=new Uint8Array([I,0,H]);if(!await this.sendSerialAndTestRet(i,o))throw new Error("stk500 universal error");await this.upload(E);let u=new Uint8Array([S,l]);if(!await this.sendSerialAndTestRet(u,B))throw new Error("stk500 leaveProgMode error");else console.log("leaveProgMode")}catch(C){console.log(C)}finally{this._inFlash=!1}console.log("烧录成功啦")}async upload(F){let C=0,B=null,D=null;try{while(C<F.length)console.log("program page"),D=C>>1,await this.loadAddress(D),B=F.slice(C,F.length>128?C+128:F.length-1),await this.loadPage(B),console.log("programmed page"),C=C+B.length,await new Promise((A)=>setTimeout(A,4)),console.log("page done")}catch(A){throw A}return console.log("upload done"),!0}async loadAddress(F){let E=F&255,C=F>>8&255,B=new Uint8Array([q,E,C,l]),D=new Uint8Array(c);if(console.log("loadAddress"),!await this.sendSerialAndTestRet(B,D))throw new Error("stk500 loadAddress error")}async loadPage(F){let E=F.length&255,C=F.length>>8,B=new Uint8Array([K,C,E,70]);await this.sendSerialMessage(B);let D=0;console.log("loadAddress");let A=F.length;while(D<A){let n=Math.min(30,A-D);console.log("splitLength:",n);let u=F.slice(D,D+n);await this.sendSerialMessage(new Uint8Array(u)),D+=n}let t=new Uint8Array([l]),i=new Uint8Array(c);if(!await this.sendSerialAndTestRet(t,i))throw new Error("stk500 loadPage error")}mergeUint8Arrays(...F){let E=F.reduce((D,A)=>D+A.length,0),C=new Uint8Array(E),B=0;for(let D of F)C.set(D,B),B+=D.length;return C}parseIntelHex(F){let E=[],C=typeof F==="string"?F:new TextDecoder("utf-8").decode(F);var B=0;for(let A of C.split(/\s*\n\s*/)){if(A.length<1)continue;if(A[0]!=":")throw new Error("Hex file has a line not starting with ':'");let t=parseInt(A.substring(1,3),16),i=parseInt(A.substring(3,7),16)+B,o=parseInt(A.substring(7,9),16);if(A.length!=t*2+11)throw new Error("Error in hex file: "+A);var D=0;for(let n=0;n<t+5;n++)D+=parseInt(A.substring(n*2+1,n*2+3),16);if(D&=255,D!=0)throw new Error("Checksum error in hex file: "+A);switch(o){case 0:while(E.length<i+t)E.push(0);for(let n=0;n<t;n++)E[i+n]=parseInt(A.substring(n*2+9,n*2+11),16);break;case 1:break;case 2:B=parseInt(A.substring(9,13),16)*16;break;default:console.log(o,t,i,D,A)}}return E}bufferEqual(F,E){if(F.length!==E.length)return!1;for(let C=0;C<F.length;C++)if(F[C]!==E[C])return!1;return!0}}var x="./assets/FirmataTest-3ksse6n1.hex";class g extends e{constructor(F){super();this._ble=F,this._ble.on("close",(E)=>{this.emit("close",E)}),this._ble.on("open",(E)=>{this.emit("open",E)}),this._ble.on("error",(E)=>{this.emit("error",E)}),this._ble.on("data",(E)=>{this.emit("data",E)})}connect(){this._ble.requestPort()}disConnect(){this._ble.disConnect()}async write(F,E){console.log(F),await this._ble.sendSerialMessageWithResp(F),console.log(E),E()}async flash(F){await this._ble.flash(F)}async flashHex(){let E=await(await fetch(x)).arrayBuffer();await this.flash(E)}}import{Firmata as E0}from"@blockcode/utils";class O{constructor(){this.arduinoBle=new h,this.bleSerialPort=new g(this.arduinoBle),this.board=null}get key(){return"firmata"}async connect(F){this.arduinoBle.init(F),await new Promise((E)=>setTimeout(E,1000)),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),await this.arduinoBle.sendATMessage("AT+ALL"),this.board=new E0(this.bleSerialPort,{skipCapabilities:!0}),this.board.on("ready",()=>{console.log("  ✔ ready"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}),this.board.on("reportVersionTimeout",()=>{console.log("timeOut----"),this.flashAndReInit()})}async flashAndReInit(){await this.flash(),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}async disconnect(){await this.arduinoBle.disconnect()}async flash(){await this.arduinoBle.sendATMessage("AT+BAUD=4"),await this.bleSerialPort.flashHex()}getAnalogValue(F){let E=parseInt(F),C=this.board.pins[this.board.analogPins[E]];if(console.log(C),C)if(C.report&&C.report===1)return C.value;else return console.log("-------new report analog --------"),this.board.reportAnalogPin(E,1),"0"}getDigitalValue(F){let E=parseInt(F),C=this.board.pins[E];if(C)if(C.report&&C.report===1)return C.value;else return console.log("-------new report digital --------"),this.board.pinMode(E,this.board.MODES.PULLUP),this.board.reportDigitalPin(E,1),0}writePWM(F,E){let C=parseInt(F),B=parseInt(E);this.board.pinMode(C,this.board.MODES.PWM),this.board.pwmWrite(C,B)}writeDigital(F,E){let C=parseInt(F),B=parseInt(E),D=this.board.pins[C];if(D&&D.mode&&D.mode!=this.board.MODES.OUTPUT)this.board.pinMode(C,this.board.MODES.OUTPUT);this.board.digitalWrite(C,B)}getRUS04Distance(F){let E=parseInt(F);return new Promise((C,B)=>{this.board.getRUS04(E,(D)=>{console.log("-----aaa---",D),this.lastRus04=D,C(D)}),setTimeout(()=>{C(this.lastRus04)},1000)})}getDHTTemp(F){let E=parseInt(F);return new Promise((C,B)=>{this.board.getDHTTemp(this.board.analogPins[E],(D)=>{console.log("-----aaa---",D),this.lastDHTTemp=D,C(D)}),setTimeout(()=>{C(this.lastDHTTemp)},2000)})}getDHTHum(F){let E=parseInt(F);return new Promise((C,B)=>{this.board.getDHTHum(this.board.analogPins[E],(D)=>{console.log("-----aaa---",D),this.lastDHTTemp=D,C(D)}),setTimeout(()=>{C(this.lastDHTTemp)},2000)})}}function V(F,E){let C=new O;return F.on("connecting",(B)=>{console.log("onnconetec"),C.connect(B)}),F.on("disconnect",()=>{C.disconnect()}),C}import{Text as r}from"@blockcode/core";import{jsx as s}from"preact/jsx-runtime";var W=[{id:"readAnalog",text:s(r,{id:"blocks.firmata.readAnalog",defaultMessage:"read analog [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getAnalogValue(${F.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDigital",text:s(r,{id:"blocks.firmata.readDigital",defaultMessage:"read digital [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDigitalValue(${F.getFieldValue("digitalPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDistance",text:s(r,{id:"blocks.firmata.readDistance",defaultMessage:"read Distance [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getRUS04Distance(${F.getFieldValue("digitalPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readTemp",text:s(r,{id:"blocks.firmata.readTemp",defaultMessage:"read temperature [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTTemp(${F.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readHum",text:s(r,{id:"blocks.firmata.readHum",defaultMessage:"read humidity [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTHum(${F.getFieldValue("analogPin")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"setPWM",text:s(r,{id:"blocks.firmata.setPWM",defaultMessage:"set PWM  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"50"}},emu(F){let E=F.getFieldValue("pwmPin")||"3",C=this.quote_(this.valueToCode(F,"VALUE",this.ORDER_NONE))||"50",B="";if(this.STATEMENT_PREFIX)B+=this.injectId(this.STATEMENT_PREFIX,F);return B+=`runtime.extensions.firmata.writePWM(${E}, ${C});
`,B}},{id:"setDigital",text:s(r,{id:"blocks.firmata.setDigital",defaultMessage:"set digital  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"digitalPin"},VALUE:{menu:"highLow"}},emu(F){let E=F.getFieldValue("digitalPin")||"0",C=F.getFieldValue("highLow")||"0",B="";if(this.STATEMENT_PREFIX)B+=this.injectId(this.STATEMENT_PREFIX,F);return B+=`runtime.extensions.firmata.writeDigital(${E}, ${C});
`,B}}],j={analogPin:{inputMode:!0,type:"string",defaultValue:"0",items:[["A0","0"],["A1","1"],["A2","2"],["A3","3"],["A4","4"],["A5","5"]]},digitalPin:{inputMode:!0,type:"string",defaultValue:"0",items:[["D0","0"],["D1","1"],["D2","2"],["D3","3"],["D4","4"],["D5","5"],["D6","6"],["D7","7"],["D8","8"],["D9","9"],["D10","10"],["D11","11"],["D12","12"],["D13","13"]]},pwmPin:{inputMode:!0,type:"string",defaultValue:"3",items:[["D3","3"],["D5","5"],["D6","6"],["D9","9"],["D10","10"],["D11","11"]]},highLow:{inputMode:!0,type:"string",defaultValue:"0",items:[[s(r,{id:"blocks.firmata.high",defaultMessage:"high"}),"1"],[s(r,{id:"blocks.firmata.low",defaultMessage:"low"}),"0"]]}};var U={en:{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"block [KEY]","blocks.firmata.connect":"block","blocks.firmata.readAnalog":"read analog [PIN] value","blocks.firmata.readDigital":"read digital [PIN] value","blocks.firmata.readDistance":"read Distance [PIN] value","blocks.firmata.readTemp":"read temperature [PIN] value","blocks.firmata.readHum":"read humidity [PIN] value","blocks.firmata.setPWM":"set PWM [PIN] value [VALUE]","blocks.firmata.setDigital":"set digital [PIN] value [VALUE]","blocks.firmata.high":"high","blocks.firmata.low":"low"},"zh-Hans":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"积木 [KEY]","blocks.firmata.connect":"连接","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"距离传感器 [PIN] 检测到的距离","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.high":"高","blocks.firmata.low":"低"},"zh-Hant":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.blockA":"積木 [KEY]","blocks.firmata.connect":"连接","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"距离传感器 [PIN] 检测到的距离","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.high":"高","blocks.firmata.low":"低"}};var $="./assets/icon-7mgxv3je.png";import{jsx as A0}from"preact/jsx-runtime";B0(U);var T0={icon:$,name:A0(D0,{id:"blocks.firmata.name",defaultMessage:"Arduino Firmata"}),statusButton:{connectionOptions:{bluetooth:{filters:[{services:["0000ffe0-0000-1000-8000-00805f9b34fb"]}]}}},emulator:V,blocks:W,menus:j};export{T0 as default};
