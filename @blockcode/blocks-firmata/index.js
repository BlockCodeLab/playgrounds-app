import{addLocalesMessages as r0,Text as C0}from"@blockcode/core";import{setAlert as T,Text as L}from"@blockcode/core";import{Firmata as E0}from"@blockcode/utils";var s=typeof Reflect=="object"?Reflect:null,_=s&&typeof s.apply=="function"?s.apply:function(F,l,i){return Function.prototype.apply.call(F,l,i)},a;s&&typeof s.ownKeys=="function"?a=s.ownKeys:Object.getOwnPropertySymbols?a=function(F){return Object.getOwnPropertyNames(F).concat(Object.getOwnPropertySymbols(F))}:a=function(F){return Object.getOwnPropertyNames(F)};function X(F){console&&console.warn&&console.warn(F)}var g=Number.isNaN||function(F){return F!==F};function C(){C.init.call(this)}C.EventEmitter=C;C.prototype._events=void 0;C.prototype._eventsCount=0;C.prototype._maxListeners=void 0;var M=10;function h(F){if(typeof F!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof F)}Object.defineProperty(C,"defaultMaxListeners",{enumerable:!0,get:function(){return M},set:function(F){if(typeof F!="number"||F<0||g(F))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+F+".");M=F}});C.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};C.prototype.setMaxListeners=function(F){if(typeof F!="number"||F<0||g(F))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+F+".");return this._maxListeners=F,this};function Z(F){return F._maxListeners===void 0?C.defaultMaxListeners:F._maxListeners}C.prototype.getMaxListeners=function(){return Z(this)};C.prototype.emit=function(F){for(var l=[],i=1;i<arguments.length;i++)l.push(arguments[i]);var e=F==="error",E=this._events;if(E!==void 0)e=e&&E.error===void 0;else if(!e)return!1;if(e){var t;if(l.length>0&&(t=l[0]),t instanceof Error)throw t;var r=new Error("Unhandled error."+(t?" ("+t.message+")":""));throw r.context=t,r}var d=E[F];if(d===void 0)return!1;if(typeof d=="function")_(d,this,l);else for(var D=d.length,f=b(d,D),i=0;i<D;++i)_(f[i],this,l);return!0};function m(F,l,i,e){var E,t,r;if(h(i),t=F._events,t===void 0?(t=F._events=Object.create(null),F._eventsCount=0):(t.newListener!==void 0&&(F.emit("newListener",l,i.listener?i.listener:i),t=F._events),r=t[l]),r===void 0)r=t[l]=i,++F._eventsCount;else if(typeof r=="function"?r=t[l]=e?[i,r]:[r,i]:e?r.unshift(i):r.push(i),E=Z(F),E>0&&r.length>E&&!r.warned){r.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+r.length+" "+String(l)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=F,d.type=l,d.count=r.length,X(d)}return F}C.prototype.addListener=function(F,l){return m(this,F,l,!1)};C.prototype.on=C.prototype.addListener;C.prototype.prependListener=function(F,l){return m(this,F,l,!0)};function S(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function z(F,l,i){var e={fired:!1,wrapFn:void 0,target:F,type:l,listener:i},E=S.bind(e);return E.listener=i,e.wrapFn=E,E}C.prototype.once=function(F,l){return h(l),this.on(F,z(this,F,l)),this};C.prototype.prependOnceListener=function(F,l){return h(l),this.prependListener(F,z(this,F,l)),this};C.prototype.removeListener=function(F,l){var i,e,E,t,r;if(h(l),e=this._events,e===void 0)return this;if(i=e[F],i===void 0)return this;if(i===l||i.listener===l)--this._eventsCount===0?this._events=Object.create(null):(delete e[F],e.removeListener&&this.emit("removeListener",F,i.listener||l));else if(typeof i!="function"){for(E=-1,t=i.length-1;t>=0;t--)if(i[t]===l||i[t].listener===l){r=i[t].listener,E=t;break}if(E<0)return this;E===0?i.shift():Y(i,E),i.length===1&&(e[F]=i[0]),e.removeListener!==void 0&&this.emit("removeListener",F,r||l)}return this};C.prototype.off=C.prototype.removeListener;C.prototype.removeAllListeners=function(F){var l,i,e;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[F]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete i[F]),this;if(arguments.length===0){var E=Object.keys(i),t;for(e=0;e<E.length;++e)t=E[e],t!=="removeListener"&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(l=i[F],typeof l=="function")this.removeListener(F,l);else if(l!==void 0)for(e=l.length-1;e>=0;e--)this.removeListener(F,l[e]);return this};function w(F,l,i){var e=F._events;if(e===void 0)return[];var E=e[l];return E===void 0?[]:typeof E=="function"?i?[E.listener||E]:[E]:i?j(E):b(E,E.length)}C.prototype.listeners=function(F){return w(this,F,!0)};C.prototype.rawListeners=function(F){return w(this,F,!1)};C.listenerCount=function(F,l){return typeof F.listenerCount=="function"?F.listenerCount(l):x.call(F,l)};C.prototype.listenerCount=x;function x(F){var l=this._events;if(l!==void 0){var i=l[F];if(typeof i=="function")return 1;if(i!==void 0)return i.length}return 0}C.prototype.eventNames=function(){return this._eventsCount>0?a(this._events):[]};function b(F,l){for(var i=new Array(l),e=0;e<l;++e)i[e]=F[e];return i}function Y(F,l){for(;l+1<F.length;l++)F[l]=F[l+1];F.pop()}function j(F){for(var l=new Array(F.length),i=0;i<l.length;++i)l[i]=F[i].listener||F[i];return l}var D0=C.prototype;var A="0000ffe0-0000-1000-8000-00805f9b34fb",k="0000ffe2-0000-1000-8000-00805f9b34fb",v="0000ffe1-0000-1000-8000-00805f9b34fb",P=20,N=16,q=48;var G=80,J=85,K=86,F0=100,l0=81;var B=32;var y=[P,N],i0={filters:[{services:[A]}]};class p extends C{constructor(){super();this.bleService=null,this.serialChar=null,this.atChar=null,this.respQueue=[],this._encoder=new TextEncoder,this._decoder=new TextDecoder,this._inFlash=!1,this.bleBusy=!1}requestPort(F=[]){return navigator.bluetooth.requestDevice(i0).then((l)=>{return l.addEventListener("gattserverdisconnected",this.handleDisconnectError.bind(this)),l.gatt.connect()}).then((l)=>{this.bleServer=l,this.emit("open"),this.bleServer.getPrimaryService(A).then((i)=>i.getCharacteristic(v)).then((i)=>i.startNotifications()).then((i)=>{this.serialChar=i,this.serialChar.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(A).then((i)=>i.getCharacteristic(k)).then((i)=>i.startNotifications()).then((i)=>{this.atChar=i,this.atChar.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}).catch((l)=>{this.emit("error",l),console.log(l)})}init(F){this.bleServer=F,this.emit("open"),this.bleServer.getPrimaryService(A).then((l)=>l.getCharacteristic(v)).then((l)=>l.startNotifications()).then((l)=>{this.serialChar=l,l.addEventListener("characteristicvaluechanged",this.serialNotify.bind(this))}),this.bleServer.getPrimaryService(A).then((l)=>l.getCharacteristic(k)).then((l)=>l.startNotifications()).then((l)=>{this.atChar=l,l.addEventListener("characteristicvaluechanged",this.bleAtNotify.bind(this))})}async disconnect(){this.emit("close"),await this.bleServer.disconnect()}async connect(){await this.bleServer.connect()}getConnectStates(){return this.bleServer.connected}handleDisconnectError(F){console.log("disconnect "+F),this.emit("close")}serialNotify(F){if(!this._inFlash){let l=F.target.value,i=new Uint8Array(l.buffer);this.emit("data",i)}}bleAtNotify(F){console.log("bleAt_notify----"+this._decoder.decode(F.target.value))}waitForResponse(F,l,i=5000){return new Promise((e,E)=>{let t,r=(d)=>{let D=d.target.value;for(let f=0;f<D.byteLength;f++){let c=D.getUint8(f);this.respQueue.push(c)}if(this.bufferEqual(l,new Uint8Array(this.respQueue)))console.log("rr "+this.respQueue),clearTimeout(t),F.removeEventListener("characteristicvaluechanged",r),e(this.respQueue)};t=setTimeout(()=>{F.removeEventListener("characteristicvaluechanged",r),E(new Error("Timeout waiting for the expected response."))},i),console.log("监听啦"),this.respQueue=[],F.addEventListener("characteristicvaluechanged",r)})}async sendATMessage(F){console.log("发送了 "+F),F=F+`\r
`;let l=this._encoder.encode(F);await this.atChar.writeValue(l)}async sendSerialMessage(F){await this.serialChar.writeValue(F)}async sendSerialMessageWithResp(F,l=0){if(this.bleBusy){if(l<30)setTimeout(()=>this.sendSerialMessageWithResp(F,l+1),10);else console.error("Max retries reached.");return}try{this.bleBusy=!0,await this.sendSerialMessage(F)}finally{this.bleBusy=!1}}async sendSerialAndTestRet(F,l){let i=this.waitForResponse(this.serialChar,l);await this.sendSerialMessage(F);let e=await i;return this.bufferEqual(l,new Uint8Array(e))}async flash(F){this._inFlash=!0;let l=this.parseIntelHex(F);try{await this.sendATMessage("AT+TARGE_RESET"),await new Promise((Q)=>setTimeout(Q,100));let i=new Uint8Array([q,B]),e=new Uint8Array(y);if(!await this.sendSerialAndTestRet(i,e))throw new Error("stk500 sync error");let t=new Uint8Array([G,B]);if(!await this.sendSerialAndTestRet(t,e))throw new Error("stk500 enter progmodel error");let d=new Uint8Array([K,172,128,0,0,B]),D=new Uint8Array([P,0,N]);if(!await this.sendSerialAndTestRet(d,D))throw new Error("stk500 universal error");await this.upload(l);let c=new Uint8Array([l0,B]);if(!await this.sendSerialAndTestRet(c,e))throw new Error("stk500 leaveProgMode error");else console.log("leaveProgMode")}catch(i){console.log(i)}finally{this._inFlash=!1}}async upload(F){let i=0,e=null,E=null;try{while(i<F.length)console.log("program page"),E=i>>1,await this.loadAddress(E),e=F.slice(i,F.length>128?i+128:F.length-1),await this.loadPage(e),console.log("programmed page"),i=i+e.length,await new Promise((t)=>setTimeout(t,4)),console.log("page done")}catch(t){throw t}return console.log("upload done"),!0}async loadAddress(F){let l=F&255,i=F>>8&255,e=new Uint8Array([J,l,i,B]),E=new Uint8Array(y);if(console.log("loadAddress"),!await this.sendSerialAndTestRet(e,E))throw new Error("stk500 loadAddress error")}async loadPage(F){let l=F.length&255,i=F.length>>8,e=new Uint8Array([F0,i,l,70]);await this.sendSerialMessage(e);let E=0;console.log("loadAddress");let t=F.length;while(E<t){let f=Math.min(60,t-E);console.log("splitLength:",f);let c=F.slice(E,E+f);await this.sendSerialMessage(new Uint8Array(c)),E+=f}let r=new Uint8Array([B]),d=new Uint8Array(y);if(!await this.sendSerialAndTestRet(r,d))throw new Error("stk500 loadPage error")}mergeUint8Arrays(...F){let l=F.reduce((E,t)=>E+t.length,0),i=new Uint8Array(l),e=0;for(let E of F)i.set(E,e),e+=E.length;return i}parseIntelHex(F){let l=[],i=typeof F==="string"?F:new TextDecoder("utf-8").decode(F);var e=0;for(let t of i.split(/\s*\n\s*/)){if(t.length<1)continue;if(t[0]!=":")throw new Error("Hex file has a line not starting with ':'");let r=parseInt(t.substring(1,3),16),d=parseInt(t.substring(3,7),16)+e,D=parseInt(t.substring(7,9),16);if(t.length!=r*2+11)throw new Error("Error in hex file: "+t);var E=0;for(let f=0;f<r+5;f++)E+=parseInt(t.substring(f*2+1,f*2+3),16);if(E&=255,E!=0)throw new Error("Checksum error in hex file: "+t);switch(D){case 0:while(l.length<d+r)l.push(0);for(let f=0;f<r;f++)l[d+f]=parseInt(t.substring(f*2+9,f*2+11),16);break;case 1:break;case 2:e=parseInt(t.substring(9,13),16)*16;break;default:console.log(D,r,d,E,t)}}return l}bufferEqual(F,l){if(F.length!==l.length)return!1;for(let i=0;i<F.length;i++)if(F[i]!==l[i])return!1;return!0}}var I="./assets/FirmataExpress.ino-jw5jnwgv.hex";class u extends C{constructor(F){super();this._ble=F,this._ble.on("close",(l)=>{this.emit("close",l)}),this._ble.on("open",(l)=>{this.emit("open",l)}),this._ble.on("error",(l)=>{this.emit("error",l)}),this._ble.on("data",(l)=>{this.emit("data",l)})}connect(){this._ble.requestPort()}disConnect(){this._ble.disConnect()}async write(F,l){console.log("send: "+new Uint8Array(F)),await this._ble.sendSerialMessageWithResp(F),l()}async flash(F){await this._ble.flash(F)}async flashHex(){let l=await(await fetch(I)).arrayBuffer();await this.flash(l)}}import{jsx as O}from"preact/jsx-runtime";class V{constructor(){this.arduinoBle=new p,this.bleSerialPort=new u(this.arduinoBle),this.board=null}get key(){return"firmata"}async connect(F){this.arduinoBle.init(F),await new Promise((l)=>setTimeout(l,1000)),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),await this.arduinoBle.sendATMessage("AT+ALL"),this.board=new E0(this.bleSerialPort,{skipCapabilities:!0}),this.board.on("ready",()=>{console.log("✔ ready"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}),this.board.on("reportVersionTimeout",()=>{console.log("timeOut----"),this.flashAndReInit()})}async flashAndReInit(){await this.flash(),await this.arduinoBle.sendATMessage("AT+BAUD=3"),await this.arduinoBle.sendATMessage("AT+BLEUSB=3"),this.board.queryCapabilities(()=>{this.board.queryAnalogMapping(()=>{console.log("queryAnalogMapping")}),console.log("queryCapabilities")})}async disconnect(){await this.arduinoBle.disconnect()}async flash(){let F=T({message:O(L,{id:"blocks.firmata.firmware",defaultMessage:"Updating firmware..."})});await this.arduinoBle.sendATMessage("AT+BAUD=4"),await this.bleSerialPort.flashHex(),T({id:F,message:O(L,{id:"blocks.firmata.completed",defaultMessage:"Updating firmware completed."})},2000)}getAnalogValue(F){let l=parseInt(F),i=this.board.pins[this.board.analogPins[l]];if(i)if(i.report&&i.report===1)return i.value;else return console.log("-------new report analog --------"),this.board.reportAnalogPin(l,1),"0"}getDigitalValue(F){let l=parseInt(F),i=this.board.pins[l];if(i)if(i.report&&i.report===1)return Boolean(i.value);else return console.log("-------new report digital --------"),this.board.pinMode(l,this.board.MODES.PULLUP),this.board.reportDigitalPin(l,1),!1}writePWM(F,l){let i=parseInt(F),e=parseInt(l);this.board.pinMode(i,this.board.MODES.PWM),this.board.pwmWrite(i,e)}writeDigital(F,l){let i=parseInt(F),e=parseInt(l),E=this.board.pins[i];if(E&&E.mode&&E.mode!=this.board.MODES.OUTPUT)this.board.pinMode(i,this.board.MODES.OUTPUT);this.board.digitalWrite(i,e)}getSonarDistance(F,l){let i=parseInt(F),e=parseInt(l),E=this.board.pins[i];if(E)if(E.report&&E.report===1)return E.value;else return console.log("-------new report digital --------"),this.board.reportSonarData(i,e),!1}getDHTTemp(F){let l=parseInt(F),i=this.board.pins[l];if(i)if(i.report&&i.report===1)return i.value[1];else return console.log("-------new report digital --------"),this.board.reportDHTData(l),!1}getDHTHum(F){let l=parseInt(F),i=this.board.pins[l];if(i)if(i.report&&i.report===1)return i.value[0];else return console.log("-------new report digital --------"),this.board.reportDHTData(l),!1}playTone(F,l,i){let e=parseInt(F),E=parseInt(l),t=parseInt(i),r=this.board.pins[e];if(r&&r.mode&&r.mode!=this.board.MODES.TONE)this.board.pinMode(e,this.board.MODES.TONE);this.board.play_tone(e,E,t)}writeServo(F,l){let i=parseInt(F),e=parseInt(l),E=this.board.pins[i];if(E&&E.mode&&E.mode!=this.board.MODES.SERVO)this.board.servoConfig(i,544,2400);this.board.servoWrite(i,e)}reset(){this.board.reset(),this.board.pins.forEach((F)=>{if(F&&F.report&&F.report===1)F.report=0})}}function U(F,l){let i=new V;return F.on("connecting",(e)=>{i.connect(e)}),F.on("disconnect",()=>{i.disconnect()}),F.on("stop",()=>{console.log("stop"),i.reset()}),i}import{Text as o}from"@blockcode/core";import{jsx as n}from"preact/jsx-runtime";var H=[{id:"readAnalog",text:n(o,{id:"blocks.firmata.readAnalog",defaultMessage:"read analog [PIN] value"}),inputs:{PIN:{menu:"analogPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getAnalogValue(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDigital",text:n(o,{id:"blocks.firmata.readDigital",defaultMessage:"read digital [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"boolean",emu(F){return[`runtime.extensions.firmata.getDigitalValue(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readDistance",text:n(o,{id:"blocks.firmata.readDistance",defaultMessage:"Read SONAR trig [PIN_T] echo [PIN_E]"}),inputs:{PIN_T:{menu:"digitalPin"},PIN_E:{menu:"digitalPin"}},output:"number",emu(F){let l=F.getFieldValue("PIN_T")||"0",i=F.getFieldValue("PIN_E")||"0";return[`runtime.extensions.firmata.getSonarDistance(${l}, ${i})`,this.ORDER_FUNCTION_CALL]}},{id:"readTemp",text:n(o,{id:"blocks.firmata.readTemp",defaultMessage:"read temperature [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTTemp(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"readHum",text:n(o,{id:"blocks.firmata.readHum",defaultMessage:"read humidity [PIN] value"}),inputs:{PIN:{menu:"digitalPin"}},output:"number",emu(F){return[`runtime.extensions.firmata.getDHTHum(${F.getFieldValue("PIN")||"0"})`,this.ORDER_FUNCTION_CALL]}},{id:"setPWM",text:n(o,{id:"blocks.firmata.setPWM",defaultMessage:"set PWM  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"50"}},emu(F){let l=F.getFieldValue("PIN")||"3",i=this.quote_(this.valueToCode(F,"VALUE",this.ORDER_NONE))||"50",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,F);return e+=`runtime.extensions.firmata.writePWM(${l}, ${i});
`,e}},{id:"setDigital",text:n(o,{id:"blocks.firmata.setDigital",defaultMessage:"set digital  [PIN] value [VALUE]"}),inputs:{PIN:{menu:"digitalPin"},VALUE:{menu:"highLow"}},emu(F){let l=F.getFieldValue("PIN")||"0",i=F.getFieldValue("VALUE")||"0",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,F);return e+=`runtime.extensions.firmata.writeDigital(${l}, ${i});
`,e}},{id:"writeServo",text:n(o,{id:"blocks.firmata.writeServo",defaultMessage:"write servo PIN [PIN] [VALUE] deg"}),inputs:{PIN:{menu:"pwmPin"},VALUE:{type:"number",defaultValue:"90"}},emu(F){let l=F.getFieldValue("PIN")||"3",i=this.quote_(this.valueToCode(F,"VALUE",this.ORDER_NONE))||"90",e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,F);return e+=`runtime.extensions.firmata.writeServo(${l}, ${i});
`,e}},{id:"playTone",text:n(o,{id:"blocks.firmata.playTone",defaultMessage:"tone pin [PIN] [FREQUENCY] HZ [DURATION] ms"}),inputs:{PIN:{menu:"pwmPin"},FREQUENCY:{type:"number",defaultValue:"100"},DURATION:{type:"number",defaultValue:"1000"}},emu(F){let l=F.getFieldValue("PIN")||"3",i=this.quote_(this.valueToCode(F,"FREQUENCY",this.ORDER_NONE))||"100",e=this.quote_(this.valueToCode(F,"DURATION",this.ORDER_NONE))||"100",E="";if(this.STATEMENT_PREFIX)E+=this.injectId(this.STATEMENT_PREFIX,F);return E+=`runtime.extensions.firmata.playTone(${l}, ${i}, ${e});
`,E}}],W={analogPin:{type:"string",defaultValue:"0",items:[["A0","0"],["A1","1"],["A2","2"],["A3","3"],["A4","4"],["A5","5"]]},digitalPin:{type:"string",defaultValue:"0",items:[["D0","0"],["D1","1"],["D2","2"],["D3","3"],["D4","4"],["D5","5"],["D6","6"],["D7","7"],["D8","8"],["D9","9"],["D10","10"],["D11","11"],["D12","12"],["D13","13"]]},pwmPin:{type:"string",defaultValue:"3",items:[["D3","3"],["D5","5"],["D6","6"],["D9","9"],["D10","10"],["D11","11"]]},highLow:{type:"string",defaultValue:"0",items:[[n(o,{id:"blocks.firmata.high",defaultMessage:"high"}),"1"],[n(o,{id:"blocks.firmata.low",defaultMessage:"low"}),"0"]]}};var R={en:{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"Updating firmware...","blocks.firmata.completed":"Updating firmware completed.","blocks.firmata.readAnalog":"read analog [PIN] value","blocks.firmata.readDigital":"read digital [PIN] value","blocks.firmata.readDistance":"Read SONAR trig [PIN_T] echo [PIN_E]","blocks.firmata.readTemp":"read temperature [PIN] value","blocks.firmata.readHum":"read humidity [PIN] value","blocks.firmata.setPWM":"set PWM [PIN] value [VALUE]","blocks.firmata.setDigital":"set digital [PIN] value [VALUE]","blocks.firmata.writeServo":"write servo PIN [PIN] [VALUE] deg","blocks.firmata.playTone":"tone pin [PIN] [FREQUENCY] HZ [DURATION] ms","blocks.firmata.high":"high","blocks.firmata.low":"low"},"zh-Hans":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"正在更新固件…","blocks.firmata.completed":"更新固件完成。","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"读取超声波距离 trig [PIN_T] echo[PIN_E]","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.writeServo":"设置舵机引脚 [PIN] 为 [VALUE] 度","blocks.firmata.playTone":"设置蜂鸣器引脚 [PIN] 频率为 [FREQUENCY] HZ 时间为 [DURATION] ms","blocks.firmata.high":"高","blocks.firmata.low":"低"},"zh-Hant":{"blocks.firmata.name":"Arduino Firmata","blocks.firmata.firmware":"正在更新固件…","blocks.firmata.completed":"更新固件完成。","blocks.firmata.readAnalog":"读取模拟口 [PIN] 值","blocks.firmata.readDigital":"读取数字口 [PIN] 值","blocks.firmata.readDistance":"读取超声波距离 trig [PIN_T] echo[PIN_E]","blocks.firmata.readTemp":"读取温度传感器 [PIN] 的温度值","blocks.firmata.readHum":"读取湿度传感器 [PIN] 的湿度值","blocks.firmata.setPWM":"设置PWM接口 [PIN] 值为 [VALUE]","blocks.firmata.setDigital":"设置数字接口 [PIN] 电平状态为 [VALUE]","blocks.firmata.writeServo":"设置舵机引脚 [PIN] 为 [VALUE] 度","blocks.firmata.playTone":"设置蜂鸣器引脚 [PIN] 频率为 [FREQUENCY] HZ 时间为 [DURATION] ms","blocks.firmata.high":"高","blocks.firmata.low":"低"}};var $="./assets/icon-1syrnfvn.svg";import{jsx as d0}from"preact/jsx-runtime";r0(R);var N0={icon:$,name:d0(C0,{id:"blocks.firmata.name",defaultMessage:"Arduino Firmata"}),statusButton:{connectionOptions:{serial:{filters:[]},bluetooth:{filters:[{services:["0000ffe0-0000-1000-8000-00805f9b34fb"]}]}}},emulator:U,blocks:H,menus:W};export{N0 as default};
